(function(){"use strict";try{if(typeof document<"u"){var t=document.createElement("style");t.appendChild(document.createTextNode('@import"https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap";:root{--white: #FFFFFF;--black: #000000;--gray-light: hsl(0deg 0% 68.04%);--body-bg: hsl(0, 0%, 80%);--text-color: hsl(0, 0%, 50%);--form-border-color: rgb(142 142 142 / 80%);--form-bg: rgba(0, 0, 255, .388);--input-bg: rgb(195, 195, 195);--input-focus-color: rgb(255, 255, 255);--input-error-color: rgb(160, 0, 0);--input-active-color: rgb(218, 218, 218);--payBtn-bg: hsl(215, 63%, 63%);--payBtn-hover-color: hsl(215, 71%, 56%);--payBtn-active-color: hsl(215, 86%, 46%);--border-radius-small: 5px;--border-radius-medium: 10px }body{padding:0;margin:0;min-width:320px;font-family:Roboto Condensed,sans-serif;font-weight:400;font-size:14px;line-height:16px;background-color:var(--body-bg)}*{font-family:Roboto Condensed,sans-serif;color:var(--text-color);box-sizing:border-box;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}ul{margin:0;padding:0;list-style:none}a{text-decoration:none}button{padding:0;border:0;background:transparent;cursor:pointer}input{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;border-radius:0;background-color:#fff}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;clip:rect(0 0 0 0);overflow:hidden}.payment-container{margin:0 auto;padding-top:30px;max-width:530px;width:100%}._paymentForm_1tl2f_1{padding:40px 25px;display:flex;flex-direction:column;align-items:center;justify-content:space-between;gap:15px;width:100%;border:1px solid var(--form-border-color);border-radius:var(--border-radius-medium);background-color:var(--form-bg)}._paymentForm_1tl2f_1 ._label_1tl2f_13{position:relative;width:100%}._paymentForm_1tl2f_1 ._input_1tl2f_17{padding:15px;width:100%;font-weight:400;font-size:20px;line-height:18px;color:var(--text-color);border-radius:10px;border:3px solid var(--form-border-color);border-radius:var(--border-radius-medium);background-color:var(--input-bg);transition:.3s ease-in-out}._paymentForm_1tl2f_1 ._input_1tl2f_17[data-invalid]{border-color:var(--input-error-color)}._paymentForm_1tl2f_1 ._input_1tl2f_17:hover,._paymentForm_1tl2f_1 ._input_1tl2f_17:focus{outline:none;background-color:var(--input-focus-color)}._paymentForm_1tl2f_1 ._input_1tl2f_17:active{background-color:var(--input-active-color)}._paymentForm_1tl2f_1 ._cardNumberInput_1tl2f_40{padding-right:20%;background-repeat:no-repeat;background-size:20% 35%;background-position:center right}._paymentForm_1tl2f_1 ._cardNumberInput_1tl2f_40+._paySystem_1tl2f_46{position:absolute;display:flex;top:50%;right:4%;transform:translateY(-50%);width:9%}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54{display:flex;align-items:center;gap:15px}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._monthLabel_1tl2f_59,._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._yearLabel_1tl2f_59{width:20%}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._monthInput_1tl2f_62,._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._yearInput_1tl2f_62{text-align:center}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._CVVLabel_1tl2f_65{position:relative;width:calc(60% - 45px)}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._CVVLabel_1tl2f_65 ._CVVInput_1tl2f_69{padding-right:35%}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._CVVLabel_1tl2f_65 ._viewButton_1tl2f_72{top:50%;position:absolute;right:35%;transform:translateY(-50%);width:20px;height:20px}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._CVVLabel_1tl2f_65 ._CVVicon_1tl2f_80{position:absolute;display:flex;width:25%;top:50%;transform:translateY(-50%);right:5%}._paymentForm_1tl2f_1 ._CVVsection_1tl2f_54 ._separator_1tl2f_88{color:var(--black);font-size:20px}._paymentForm_1tl2f_1 ._button_1tl2f_92{padding:20px 10px;width:100%;font-weight:600;font-size:22px;line-height:18px;color:var(--white);background-color:var(--payBtn-bg);border-radius:var(--border-radius-medium);transition:.3s ease-in-out}._paymentForm_1tl2f_1 ._button_1tl2f_92:focus-visible,._paymentForm_1tl2f_1 ._button_1tl2f_92:hover{background-color:var(--payBtn-hover-color)}._paymentForm_1tl2f_1 ._button_1tl2f_92:active{color:var(--gray-light);background-color:var(--payBtn-active-color)}._paymentForm_1tl2f_1+._paySystems_1tl2f_110{padding:20px;display:block;width:100%}._paymentForm_1tl2f_1+._paySystems_1tl2f_110>svg{width:100%}')),document.head.appendChild(t)}}catch(o){console.error("vite-plugin-css-injected-by-js",o)}})();
(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function e(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=e(i);fetch(i.href,a)}})();const J="_paymentForm_1tl2f_1",Q="_label_1tl2f_13",t1="_input_1tl2f_17",e1="_cardNumberInput_1tl2f_40",s1="_paySystem_1tl2f_46",i1="_CVVsection_1tl2f_54",a1="_monthLabel_1tl2f_59",n1="_yearLabel_1tl2f_59",r1="_monthInput_1tl2f_62",u1="_yearInput_1tl2f_62",l1="_CVVLabel_1tl2f_65",h1="_CVVInput_1tl2f_69",C1="_viewButton_1tl2f_72",o1="_CVVicon_1tl2f_80",d1="_separator_1tl2f_88",p1="_button_1tl2f_92",c1="_paySystems_1tl2f_110",p={paymentForm:J,label:Q,input:t1,cardNumberInput:e1,paySystem:s1,CVVsection:i1,monthLabel:a1,yearLabel:n1,monthInput:r1,yearInput:u1,CVVLabel:l1,CVVInput:h1,viewButton:C1,CVVicon:o1,separator:d1,button:p1,paySystems:c1},L1=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 47 47">
<defs><style>.cls-1{fill:#006fcf}</style></defs><g><g><g>
<path class="cls-1" d="M47 25.44V0H0v47h47V33.29c-.1 0 0-7.85 0-7.85"/>
<path d="M41.24 22.82h3.56v-8.27h-3.87v1.15l-.73-1.15h-3.35V16l-.63-1.47H30c-.21 0-.42.1-.63.1s-.31.11-.52.21-.31.11-.52.21v-.52H10.68l-.53 1.36-.52-1.36H5.44V16l-.62-1.47H1.47L0 18.11v4.71h2.41l.42-1.15h.83l.42 1.15h18.43v-1.05l.73 1.05h5.13v-.63c.1.11.31.11.42.21s.31.11.41.21a1.39 1.39 0 0 0 .63.1h3.77l.4-1.15h.84l.42 1.15h5.13v-1zM47 33.29v-7.75H18.21l-.73 1.05-.73-1.05H8.37v8.27h8.38l.73-1.05.73 1.05h5.24V32h-.21a5 5 0 0 0 1.88-.31v2.2h3.77v-1.02l.73 1.05h15.6a9.09 9.09 0 0 0 1.78-.63z" fill="#fff"/><path class="cls-1" d="M45.22 31.3h-2.83v1.15h2.73A1.73 1.73 0 0 0 47 30.67a1.46 1.46 0 0 0-1.67-1.57h-1.26a.53.53 0 0 1 0-1.05h2.41L47 26.9h-2.83a1.71 1.71 0 0 0-1.88 1.68A1.47 1.47 0 0 0 44 30.15h1.26a.49.49 0 0 1 .52.52c.07.42-.14.63-.56.63zm-5.13 0h-2.82v1.15H40a1.73 1.73 0 0 0 1.88-1.78 1.46 1.46 0 0 0-1.68-1.57h-1.26a.53.53 0 0 1 0-1.05h2.41l.52-1.15H39a1.71 1.71 0 0 0-1.88 1.68 1.47 1.47 0 0 0 1.68 1.57h1.25a.49.49 0 0 1 .52.52.48.48 0 0 1-.48.63zM36.43 28v-1.2H32v5.55h4.4v-1.16h-3.11V30h3v-1.11h-3v-1.05h3.14zm-7.12 0c.52 0 .73.31.73.63s-.21.62-.73.62h-1.57v-1.41zm-1.57 2.41h.63l1.67 2h1.57l-1.88-2.1a1.68 1.68 0 0 0 1.46-1.67 1.73 1.73 0 0 0-1.88-1.78h-2.93v5.55h1.25zm-3.35-1.68a.66.66 0 0 1-.73.73H22V28h1.57a.74.74 0 0 1 .82.68zm-3.66-1.93v5.55H22v-1.89h1.68a1.84 1.84 0 0 0 2-1.88 1.82 1.82 0 0 0-1.89-1.89zm-1.89 5.55h1.57l-2.2-2.83 2.2-2.72h-1.57l-1.36 1.78-1.36-1.78h-1.57l2.2 2.72-2.2 2.72h1.57l1.36-1.78zM14.13 28v-1.2h-4.4v5.55h4.4v-1.16H11V30h3v-1.11h-3v-1.05h3.14zm25.44-9.84l2.2 3.35h1.57v-5.6h-1.26v3.66l-.31-.52-2-3.14H38.1v5.55h1.26v-3.77zM34.12 18l.42-1.15L35 18l.53 1.26H33.6zm2.2 3.46h1.36l-2.4-5.55H33.6l-2.41 5.55h1.36l.53-1.15h2.72zm-5.86 0l.54-1.15h-.31a1.41 1.41 0 0 1-1.47-1.57v-.11a1.41 1.41 0 0 1 1.47-1.57H32v-1.15h-1.43A2.5 2.5 0 0 0 28 18.63v.11a2.42 2.42 0 0 0 2.46 2.72zm-4.71 0H27V16h-1.25zM23 17.06a.64.64 0 1 1 0 1.26h-1.54V17zm-1.57 2.41h.63l1.67 2h1.57l-1.88-2.09a1.68 1.68 0 0 0 1.46-1.68A1.73 1.73 0 0 0 23 15.91h-2.9v5.55h1.25zm-2.3-2.41v-1.15h-4.4v5.55h4.4v-1.15H16v-1.15h3V18h-3v-1h3.14zm-9.53 4.4h1.15l1.6-4.46v4.5h1.26v-5.59h-2.1l-1.25 3.77L9 15.91H6.91v5.55h1.25V17zM2.83 18l.41-1.15.42 1.15.53 1.26H2.3zM5 21.46h1.39L4 15.91H2.41L0 21.46h1.36l.52-1.15h2.73z"/>
</g></g></g></svg>`,f1=`<?xml version="1.0" encoding="utf-8"?><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 122.88 81.6" style="enable-background:new 0 0 122.88 81.6" xml:space="preserve">
<style type="text/css">.st0{fill-rule:evenodd;clip-rule:evenodd;}</style><g>
<path class="st0" d="M7.05,0h108.78c1.94,0,3.7,0.79,4.98,2.07c1.27,1.27,2.07,3.05,2.07,4.98v67.51c0,1.94-0.79,3.7-2.07,4.98 c-1.27,1.27-3.04,2.08-4.98,2.08H7.05c-1.94,0-3.7-0.79-4.98-2.07C0.79,78.27,0,76.5,0,74.56V7.05c0-1.94,0.79-3.7,2.07-4.99 C3.35,0.79,5.11,0,7.05,0L7.05,0L7.05,0z M95,52.66h5.17l3.85,12.31l3.8-12.31h5.36l-6.35,17.11h-5.73l-6.28-16.63l-6.18,16.63 h-5.73l-6.46-17.11h5.52l3.85,12.31l3.8-12.31h5.01H95L95,52.66z M71.34,62.76l4.63,1.4c-0.31,1.3-0.8,2.39-1.47,3.25 c-0.67,0.87-1.5,1.53-2.49,1.97c-0.99,0.44-2.25,0.67-3.79,0.67c-1.86,0-3.38-0.27-4.56-0.81c-1.18-0.54-2.19-1.49-3.05-2.85 c-0.86-1.36-1.29-3.1-1.29-5.22c0-2.83,0.75-5,2.26-6.52c1.51-1.52,3.64-2.28,6.39-2.28c2.15,0,3.85,0.43,5.08,1.31 c1.23,0.87,2.15,2.21,2.75,4.02l-4.66,1.03c-0.16-0.52-0.33-0.9-0.51-1.13c-0.3-0.4-0.66-0.71-1.09-0.93 c-0.43-0.22-0.91-0.33-1.44-0.33c-1.2,0-2.12,0.48-2.76,1.44c-0.48,0.71-0.72,1.84-0.72,3.36c0,1.9,0.29,3.19,0.86,3.89 c0.58,0.7,1.39,1.05,2.43,1.05c1.01,0,1.78-0.28,2.29-0.85C70.73,64.66,71.11,63.84,71.34,62.76L71.34,62.76z M61.96,26.35h23.19 c1.45,0,2.63,1.19,2.63,2.63v9.1c0,1.45-1.19,2.63-2.63,2.63H61.96c-1.45,0-2.63-1.18-2.63-2.63v-9.1 C59.32,27.54,60.51,26.35,61.96,26.35L61.96,26.35z M90.55,35.47v2.62c0,1.49-0.61,2.84-1.59,3.82c-0.07,0.07-0.14,0.13-0.22,0.19 c-0.96,0.86-2.22,1.39-3.6,1.39H61.96c-1.48,0-2.83-0.61-3.81-1.59l-0.01-0.01l-0.01,0.01c-0.98-0.98-1.59-2.33-1.59-3.82v-2.62 H4.08v39.1c0,0.81,0.33,1.55,0.88,2.1c0.54,0.54,1.28,0.88,2.1,0.88h108.78c0.81,0,1.55-0.33,2.1-0.88 c0.54-0.54,0.88-1.28,0.88-2.1v-39.1l0,0H90.55L90.55,35.47z M15.61,53.02c-1.13,0-2.04-0.92-2.04-2.05c0-1.13,0.92-2.04,2.04-2.04 h29.06c1.13,0,2.04,0.92,2.04,2.04c0,1.13-0.92,2.05-2.04,2.05H15.61L15.61,53.02L15.61,53.02z M15.61,63.74 c-1.13,0-2.04-0.92-2.04-2.05s0.92-2.04,2.04-2.04l17.87,0c1.13,0,2.04,0.92,2.04,2.05s-0.92,2.04-2.04,2.04L15.61,63.74 L15.61,63.74L15.61,63.74z M4.08,15.19H118.8V7.05c0-0.81-0.33-1.55-0.88-2.1c-0.54-0.54-1.28-0.88-2.1-0.88H7.05 c-0.81,0-1.55,0.33-2.1,0.88C4.41,5.5,4.08,6.24,4.08,7.05V15.19L4.08,15.19L4.08,15.19z"/>
</g></svg>`,g1=`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 47 36.2"><defs><linearGradient id="a" x1="108.34" y1="1769.78" x2="119.82" y2="1769.78" gradientTransform="matrix(1.13 0 0 -1.13 -90.37 2011.11)" gradientUnits="userSpaceOnUse">
<stop offset="0" stop-color="#007940"/><stop offset=".23" stop-color="#00873f"/>
<stop offset=".74" stop-color="#40a737"/><stop offset="1" stop-color="#5cb531"/>
</linearGradient><linearGradient id="b" x1="108.34" y1="1771.55" x2="119.81" y2="1771.55" xlink:href="#a"/>
<linearGradient id="c" x1="108.34" y1="1773.5" x2="119.82" y2="1773.5" xlink:href="#a"/><linearGradient id="d" x1="82.65" y1="1771.56" x2="94.3" y2="1771.56" gradientTransform="matrix(1.13 0 0 -1.13 -90.37 2011.11)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#1f286f"/>
<stop offset=".48" stop-color="#004e94"/><stop offset=".83" stop-color="#0066b1"/><stop offset="1" stop-color="#006fbc"/></linearGradient><linearGradient id="e" x1="95.43" y1="1771.54" x2="106.75" y2="1771.54" gradientTransform="matrix(1.13 0 0 -1.13 -90.37 2011.11)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#6c2c2f"/><stop offset=".17" stop-color="#882730"/>
<stop offset=".57" stop-color="#be1833"/><stop offset=".86" stop-color="#dc0436"/><stop offset="1" stop-color="#e60039"/></linearGradient></defs><g data-name="Слой 2"><g data-name="Слой 1"><path d="M47 28.9a7.32 7.32 0 0 1-7.3 7.3H0V7.3A7.32 7.32 0 0 1 7.3 0H47z" fill="#fff"/><path d="M34.07 21.49h3.37a1.34 1.34 0 0 0 1.07-1.35 1.39 1.39 0 0 0-1.07-1.35 1.42 1.42 0 0 0-.37 0h-3z" fill="url(#a)"/>
<path d="M36.74 2.44a5.23 5.23 0 0 0-5.22 5.23v5.43h7.38a2.91 2.91 0 0 1 .52 0c1.66.09 2.9.95 2.9 2.44A2.46 2.46 0 0 1 39.93 18c1.7.12 3 1.07 3 2.53s-1.44 2.62-3.33 2.62h-8.1v10.63h7.67a5.23 5.23 0 0 0 5.23-5.22V2.44z" fill="url(#b)"/><path d="M38.15 15.92a1.23 1.23 0 0 0-1.06-1.24h-3.02v2.53h2.73a.78.78 0 0 0 .29 0 1.22 1.22 0 0 0 1.06-1.29z" fill="url(#c)"/>
<path d="M7.84 2.44a5.23 5.23 0 0 0-5.23 5.23v12.9a10.34 10.34 0 0 0 4.51 1.18 2.5 2.5 0 0 0 2.79-2.59v-6.09h4.48v6.06c0 2.36-1.46 4.28-6.43 4.28a22 22 0 0 1-5.37-.66v11h7.67a5.23 5.23 0 0 0 5.22-5.23V2.44z" fill="url(#d)"/><path d="M22.29 2.44a5.23 5.23 0 0 0-5.23 5.23v6.84c1.33-1.12 3.62-1.84 7.33-1.67a23.91 23.91 0 0 1 4.11.63v2.22a9.8 9.8 0 0 0-4-1.15c-2.81-.2-4.51 1.17-4.51 3.59s1.7 3.82 4.51 3.59a10.47 10.47 0 0 0 4-1.15v2.21a22.29 22.29 0 0 1-4.11.63c-3.71.18-6-.54-7.33-1.66v12.06h7.68A5.22 5.22 0 0 0 30 28.58V2.44z" fill="url(#e)"/>
</g></g></svg>`,m1=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 47 36.57"><defs><style>.cls-1{fill:#0099df}</style></defs><g><g><g id="maestro-logo">
<path class="cls-1" d="M46.56 23.53V23h-.15l-.17.38-.17-.38h-.15v.56H46v-.42l.16.36h.1l.16-.37v.43zm-.94 0v-.47h.19V23h-.48v.09h.19v.47z"/><path d="M29.86 26H17.14V3.11h12.72z" fill="#6c6bbd"/>
<path d="M18 14.53a14.5 14.5 0 0 1 5.51-11.42 14.53 14.53 0 1 0-9 26 14.44 14.44 0 0 0 9-3.11A14.5 14.5 0 0 1 18 14.53" fill="#eb001b"/>
<path class="cls-1" d="M47 14.53A14.53 14.53 0 0 1 23.49 26a14.52 14.52 0 0 0 0-22.84A14.53 14.53 0 0 1 47 14.53"/>
<path d="M34.14 32.41a1.89 1.89 0 0 1 .6.1l-.26.79a1.41 1.41 0 0 0-.52-.1c-.55 0-.83.36-.83 1v2.16h-.84V32.5h.83v.5a1.14 1.14 0 0 1 1-.56m-3.1.86h-1.35V35c0 .39.13.65.55.65a1.52 1.52 0 0 0 .75-.22l.24.72a2 2 0 0 1-1.05.3c-1 0-1.34-.54-1.34-1.43v-1.75H28v-.77h.78v-1.17h.85v1.17H31zm-10.74.82a1 1 0 0 1 1-.93 1 1 0 0 1 1 .93zm2.87.34a1.85 1.85 0 0 0-1.83-2 1.88 1.88 0 0 0-1.92 2 1.9 1.9 0 0 0 2 2 2.37 2.37 0 0 0 1.6-.54l-.41-.63a1.87 1.87 0 0 1-1.13.41 1.07 1.07 0 0 1-1.15-1h2.86v-.32m3.69-.94a2.45 2.45 0 0 0-1.2-.33c-.46 0-.74.17-.74.45s.29.33.66.38L26 34c.84.13 1.35.48 1.35 1.16s-.65 1.26-1.76 1.26a2.77 2.77 0 0 1-1.67-.5l.39-.66a2.08 2.08 0 0 0 1.29.41c.57 0 .88-.17.88-.47s-.22-.34-.68-.4l-.4-.06c-.86-.12-1.33-.51-1.33-1.14s.63-1.23 1.61-1.23a2.84 2.84 0 0 1 1.57.4zm10.35-.29a1.28 1.28 0 0 0-.48.09 1.16 1.16 0 0 0-.39.26 1.3 1.3 0 0 0-.25.39 1.35 1.35 0 0 0-.09.5 1.36 1.36 0 0 0 .09.51 1.3 1.3 0 0 0 .25.39 1.33 1.33 0 0 0 .39.26 1.33 1.33 0 0 0 1 0 1.33 1.33 0 0 0 .39-.26 1.14 1.14 0 0 0 .25-.39 1.19 1.19 0 0 0 .1-.51 1.18 1.18 0 0 0-.1-.5 1.14 1.14 0 0 0-.25-.39 1.16 1.16 0 0 0-.39-.26 1.28 1.28 0 0 0-.48-.09m0-.79a2.23 2.23 0 0 1 .83.15 2 2 0 0 1 .66.43 2 2 0 0 1 .44.65 2.11 2.11 0 0 1 0 1.61 2 2 0 0 1-.44.65 2 2 0 0 1-.66.43 2.37 2.37 0 0 1-1.66 0 2 2 0 0 1-.66-.43 2 2 0 0 1-.44-.65 2.24 2.24 0 0 1 0-1.61 2 2 0 0 1 .44-.65 2 2 0 0 1 .66-.43 2.23 2.23 0 0 1 .83-.15m-21.82 2a1.17 1.17 0 1 1 1.17 1.24 1.16 1.16 0 0 1-1.17-1.24m3.13 0V32.5h-.84v.5a1.46 1.46 0 0 0-1.22-.56 2 2 0 0 0 0 4.05 1.46 1.46 0 0 0 1.22-.57v.47h.84zm-4.73 1.93v-2.35a1.43 1.43 0 0 0-1.52-1.53 1.47 1.47 0 0 0-1.35.68 1.42 1.42 0 0 0-1.28-.68 1.28 1.28 0 0 0-1.17.59v-.5h-.84v3.86h.85v-2.14a.9.9 0 0 1 .94-1c.56 0 .84.36.84 1v2.15h.85v-2.15a.91.91 0 0 1 .94-1c.58 0 .85.36.85 1v2.15zm26.37-.22v.1h.14-.14zm.09-.07a.14.14 0 0 1 .11 0 .1.1 0 0 1 0 .08.09.09 0 0 1 0 .07.2.2 0 0 1-.08 0l.11.13h-.09l-.1-.13v.13h-.07V36zm0 .48h.11l.1-.06.06-.1a.23.23 0 0 0 0-.12.2.2 0 0 0 0-.11l-.06-.1a.33.33 0 0 0-.1-.06.2.2 0 0 0-.11 0 .25.25 0 0 0-.12 0 .33.33 0 0 0-.1.06l-.06.1a.2.2 0 0 0 0 .11.23.23 0 0 0 0 .12l.06.1.1.06h.12m0-.68h.15a.36.36 0 0 1 .12.08.38.38 0 0 1 .09.13.32.32 0 0 1 0 .14.33.33 0 0 1 0 .15.53.53 0 0 1-.21.21.4.4 0 0 1-.15 0 .41.41 0 0 1-.16 0 .27.27 0 0 1-.12-.09.38.38 0 0 1-.09-.12.33.33 0 0 1 0-.15.32.32 0 0 1 0-.14.6.6 0 0 1 .09-.13.36.36 0 0 1 .12-.08.41.41 0 0 1 .16 0" fill="#333"/>
</g></g></g></svg>`,v1=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 47 36.57"><g><g>
<path d="M46 36.07v.1h.09H46zm.09-.07a.12.12 0 0 1 .1 0 .08.08 0 0 1 0 .08.09.09 0 0 1 0 .07.2.2 0 0 1-.08 0l.11.13h-.09l-.11-.13v.13H46V36zm0 .48h.12l.09-.06a.36.36 0 0 0 .07-.1.43.43 0 0 0 0-.12.27.27 0 0 0-.09-.21.2.2 0 0 0-.09-.06.22.22 0 0 0-.12 0 .2.2 0 0 0-.11 0 .33.33 0 0 0-.1.06.21.21 0 0 0-.06.1.2.2 0 0 0 0 .11.23.23 0 0 0 0 .12.21.21 0 0 0 .06.1l.1.06h.11m0-.68a.41.41 0 0 1 .16 0l.12.08a.35.35 0 0 1 .08.13.32.32 0 0 1 0 .14.33.33 0 0 1 0 .15.25.25 0 0 1-.08.12.34.34 0 0 1-.12.09.41.41 0 0 1-.16 0 .4.4 0 0 1-.15 0 .53.53 0 0 1-.21-.21.33.33 0 0 1 0-.15.32.32 0 0 1 0-.14.38.38 0 0 1 .09-.13.36.36 0 0 1 .12-.08h.15m-36-1.37a1.17 1.17 0 1 1 1.18 1.24 1.16 1.16 0 0 1-1.18-1.24m3.13 0V32.5h-.8v.5a1.46 1.46 0 0 0-1.22-.57 2 2 0 0 0 0 4.06 1.46 1.46 0 0 0 1.22-.57v.47h.84zm28.34 0a1.17 1.17 0 1 1 1.17 1.24 1.16 1.16 0 0 1-1.17-1.24m3.13
0V31h-.84v2a1.46 1.46 0 0 0-1.22-.57 2 2 0 0 0 0 4.06 1.46 1.46 0 0 0 1.22-.57v.47h.84zm-21.02-1.27a1 1 0 0 1 1 .93h-2a1 1 0 0 1 1-.93m0-.76a2 2 0 0 0 0 4.06 2.36 2.36 0 0 0 1.58-.54l-.41-.63a1.82 1.82 0 0 1-1.12.41 1.07 1.07 0 0 1-1.15-1h2.86v-.32a1.86 1.86 0 0 0-1.83-2m10.12 2a1.17 1.17 0 1 1 1.3 1.29 1.16 1.16 0 0 1-1.17-1.24m3.13 0V32.5h-.84v.5a1.46 1.46 0 0 0-1.22-.57 2 2 0 0 0 0 4.06 1.46 1.46 0 0 0 1.22-.57v.47h.84zm-7.86 0a2 2 0 0 0 2.06 2A2 2 0 0 0 32.5 36l-.4-.68a1.74 1.74 0 0 1-1 .35 1.16 1.16 0 0 1-1.16-1.24 1.14 1.14 0 0 1 1.16-1.23 1.73 1.73 0 0 1 1 .34l.4-.68a2 2 0 0 0-1.38-.46 2 2 0 0 0-2.06 2m10.81-2a1.15 1.15 0 0 0-1 .57v-.47H38v3.86h.84V34.2c0-.64.28-1 .83-1a1.41 1.41 0 0 1 .52.1l.26-.79a1.91 1.91 0 0 0-.6-.11m-22.48.41a2.88 2.88 0 0 0-1.58-.41c-1 0-1.6.47-1.6 1.24s.47 1 1.33 1.14h.39c.46.07.68.19.68.41s-.31.47-.88.47a2 2 0 0 1-1.28-.41l-.4.66a2.84 2.84 0 0 0 1.67.5c1.12 0 1.76-.53 1.76-1.26s-.5-1-1.34-1.16h-.4c-.36-.05-.65-.12-.65-.38s.27-.45.73-.45a2.42 2.42 0 0 1 1.2.33zm10.82-.41a1.15 1.15 0 0 0-1 .57v-.47h-.83v3.86h.84V34.2c0-.64.27-1 .82-1a1.46 1.46 0 0 1 .53.1l.26-.79a1.91 1.91 0 0 0-.6-.11m-7.16.1h-1.37v-1.17h-.85v1.17h-.78v.77h.78V35c0 .89.35 1.43 1.34 1.43a2 2 0 0 0 1-.3l-.17-.69a1.63 1.63 0 0 1-.74.22c-.42 0-.56-.26-.56-.65v-1.74h1.37zM8.51 36.36v-2.42A1.44 1.44 0 0 0 7 32.4a1.5 1.5 0 0 0-1.35.69 1.43 1.43 0 0 0-1.28-.69 1.3 1.3 0 0 0-1.14.6v-.5h-.84v3.86h.85v-2.14a.9.9 0 0 1 .94-1c.56 0 .84.36.84 1v2.15h.85v-2.15a.91.91 0 0 1 .94-1c.58 0 .85.36.85 1v2.15z" fill="#333333"/><path d="M46.56 23.53V23h-.15l-.17.38-.17-.38h-.15v.56H46v-.42l.16.36h.1l.16-.37v.43zm-.94 0v-.47h.19V23h-.48v.09h.19v.47z" fill="#f79410"/><path d="M29.86 26H17.14V3.11h12.72z" fill="#ff5f00"/><path d="M18 14.53a14.5 14.5 0 0 1 5.51-11.42 14.53 14.53 0 1 0-9 26 14.44 14.44 0 0 0 9-3.11A14.5 14.5 0 0 1 18 14.53"
fill="#eb001b"/><path d="M47 14.53A14.53 14.53 0 0 1 23.49 26a14.52 14.52 0 0 0 0-22.84A14.53 14.53 0 0 1 47 14.53" fill="#f79e1b"/>
</g></g></svg>`,k1=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 47 13.3"><defs><style>.cls-1{fill:#4db45e;fill-rule:evenodd}</style>
<linearGradient id="Безымянный_градиент_6" x1="33.03" y1="1736.28" x2="46.86" y2="1736.28" gradientTransform="matrix(1 0 0 -1 .14 1739.01)" gradientUnits="userSpaceOnUse"><stop offset=".3" stop-color="#00b4e6"/>
<stop offset="1" stop-color="#088ccb"/></linearGradient></defs><g ><g><g id="mir-logo">
<g id="g5"><path id="path7" class="cls-1" d="M12.67 0a2.45 2.45 0 0 0-2.33 1.74c-.45 1.6-1.71 6-1.74 6.15h-.35S7 3.38 6.51 1.74A2.46 2.46 0 0 0 4.18 0H0v13.3h4.18V5.4h.35L7 13.3h2.88l2.44-7.89h.35v7.89h4.18V0z"/></g>
<g id="g9"><path id="path11" class="cls-1" d="M27.94 0a2.35 2.35 0 0 0-1.8 1.39l-3 6.51h-.35V0h-4.14v13.3h4a2.4 2.4 0 0 0 1.86-1.39l2.9-6.51h.35v7.9h4.18V0z"/></g>
<g id="g13"><path id="path15" class="cls-1" d="M33.75 6v7.3h4.19V9.06h4.53a4.53 4.53 0 0 0 4.27-3z"/></g><g id="g17"><path id="path24" d="M42.47 0h-9.3A6.67 6.67 0 0 0 38 5.23a6.72 6.72 0 0 0 1.75.23h7.17a4.73 4.73 0 0 0 .08-.93A4.53 4.53 0 0 0 42.47 0z" fill="url(#Безымянный_градиент_6)" fill-rule="evenodd"/></g>
</g></g></g></svg>`,_1=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 47 15.18"><g>
<path d="M24.31 4.85c0 2.12 1.88 3.3 3.32 4s2 1.18 2 1.82c0 1-1.18 1.42-2.27 1.44a7.94 7.94 0 0 1-3.9-.93l-.69 3.22a11.48 11.48 0 0 0 4.22.78c4 0 6.6-2 6.62-5 0-3.88-5.36-4.09-5.33-5.82 0-.53.52-1.09 1.62-1.23a7.17 7.17 0 0 1 3.74.65l.64-3.13A10.29 10.29 0 0 0 30.72 0C27 0 24.33 2 24.31 4.85M40.69.27a1.71 1.71 0 0 0-1.61 1.07L33.38 15h4l.8-2.19H43l.49 2.19H47L43.93.27h-3.24m.56 4l1.15 5.48h-3.15l2-5.52M19.47.27L16.33 15h3.8L23.27.27h-3.8m-5.61 0l-4 10L8.3 1.76A1.76 1.76 0 0 0 6.55.27H.09L0 .69a16.31 16.31 0 0 1 3.75 1.25 1.61 1.61 0 0 1 .9 1.29L7.68 15h4L17.84.27h-4" fill="#000"/>
</g></svg>`,$='<?xml version="1.0" ?><svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M.2 10a11 11 0 0 1 19.6 0A11 11 0 0 1 .2 10zm9.8 4a4 4 0 1 0 0-8 4 4 0 0 0 0 8zm0-2a2 2 0 1 1 0-4 2 2 0 0 1 0 4z"/></svg>',G='<?xml version="1.0" ?><svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M12.81 4.36l-1.77 1.78a4 4 0 0 0-4.9 4.9l-2.76 2.75C2.06 12.79.96 11.49.2 10a11 11 0 0 1 12.6-5.64zm3.8 1.85c1.33 1 2.43 2.3 3.2 3.79a11 11 0 0 1-12.62 5.64l1.77-1.78a4 4 0 0 0 4.9-4.9l2.76-2.75zm-.25-3.99l1.42 1.42L3.64 17.78l-1.42-1.42L16.36 2.22z"/></svg>',M1=`<?xml version="1.0" encoding="UTF-8"?>
<svg width="497px" height="78px" viewBox="0 0 497 78" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- Generator: Sketch 56.2 (81672) - https://sketch.com -->
    <title>safe-connection</title>
    <desc>Created with Sketch.</desc>
    <defs>
        <polygon id="path-1" points="0 0.887 70.831 0.887 70.831 10.198 0 10.198"></polygon>
        <polygon id="path-3" points="0.742 -12 70.878 -12 70.878 -2.348 0.742 -2.348"></polygon>
        <polygon id="path-5" points="0.676 0.67 24.017 0.67 24.017 9.014 0.676 9.014"></polygon>
        <path d="M37.932,17.931 L37.932,17.932 L40.158,17.231 L39.438,15.625 C38.902,16.285 38.374,17.141 37.932,17.931 Z" id="path-7"></path>
        <polygon id="path-9" points="0.982 0.4629 10.51 0.4629 10.51 14.3023 0.982 14.3023"></polygon>
        <polygon id="path-11" points="0.354 0.667 9.847 0.667 9.847 14.3016 0.354 14.3016"></polygon>
    </defs>
    <g id="desktop" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="demo-widget-popup-dropdown-unactive-copy-3" transform="translate(-477.000000, -1532.000000)">
            <g id="safe-connection" transform="translate(478.000000, 1532.000000)">
                <g id="Group" opacity="0.9" transform="translate(0.000000, 4.000000)">
                    <path d="M14.9655,29.931 C23.2307,29.931 29.931,23.231 29.931,14.966 C29.931,6.7 23.2307,0 14.9655,0 C6.7003,0 0,6.7 0,14.966 C0,23.231 6.7003,29.931 14.9655,29.931 Z" id="Path" stroke="#49535C" stroke-width="2"></path>
                    <path d="M11.2347,19.978 L11.2347,13.602 L11.2359,13.601 L19.3364,13.601 L19.3376,13.602 L19.3376,19.978 L11.2347,19.978 Z M12.6589,11.256 C12.6589,10.57 12.9265,9.921 13.413,9.432 C13.8981,8.943 14.5396,8.674 15.2199,8.674 L15.3612,8.674 C16.4328,8.674 17.4007,9.359 17.7696,10.38 C17.8708,10.661 17.9234,10.956 17.9234,11.258 L17.9246,12.851 L12.6589,12.851 L12.6589,11.256 Z M19.3376,12.851 L18.6749,12.851 L18.6724,11.256 C18.6724,10.869 18.6061,10.487 18.4748,10.123 C17.9984,8.808 16.7479,7.924 15.3612,7.924 L15.2211,7.924 C14.3395,7.924 13.508,8.271 12.8803,8.903 C12.2538,9.534 11.9087,10.37 11.9087,11.256 L11.9087,12.851 L11.2347,12.851 C10.822,12.851 10.4844,13.188 10.4844,13.601 L10.4844,20.053 C10.4844,20.425 10.7882,20.729 11.1596,20.729 L19.4127,20.729 C19.7841,20.729 20.0879,20.425 20.0879,20.053 L20.0879,13.601 C20.0879,13.188 19.7503,12.851 19.3376,12.851 Z" id="Shape" fill="#517895"></path>
                    <path d="M11.2347,19.978 L10.7847,19.978 L10.7847,20.428 L11.2347,20.428 L11.2347,19.978 Z M11.2347,13.602 L10.9165,13.284 L10.7847,13.416 L10.7847,13.602 L11.2347,13.602 Z M11.2359,13.601 L11.2359,13.151 L11.0495,13.151 L10.9177,13.283 L11.2359,13.601 Z M19.3364,13.601 L19.6546,13.283 L19.5228,13.151 L19.3364,13.151 L19.3364,13.601 Z M19.3376,13.602 L19.7876,13.602 L19.7876,13.416 L19.6559,13.284 L19.3376,13.602 Z M19.3376,19.978 L19.3376,20.428 L19.7876,20.428 L19.7876,19.978 L19.3376,19.978 Z M13.413,9.432 L13.732,9.749 L13.7324,9.749 L13.413,9.432 Z M17.7696,10.38 L18.193,10.227 L18.1928,10.227 L17.7696,10.38 Z M17.9234,11.258 L17.4734,11.258 L17.4734,11.258 L17.9234,11.258 Z M17.9246,12.851 L17.9246,13.301 L18.375,13.301 L18.3746,12.85 L17.9246,12.851 Z M12.6589,12.851 L12.2089,12.851 L12.2089,13.301 L12.6589,13.301 L12.6589,12.851 Z M18.6749,12.851 L18.2249,12.851 L18.2256,13.301 L18.6749,13.301 L18.6749,12.851 Z M18.6724,11.256 L18.2224,11.256 L18.2224,11.257 L18.6724,11.256 Z M18.4748,10.123 L18.8981,9.971 L18.8979,9.97 L18.4748,10.123 Z M12.8803,8.903 L12.5611,8.586 L12.5608,8.586 L12.8803,8.903 Z M11.9087,12.851 L11.9087,13.301 L12.3586,13.301 L12.3586,12.851 L11.9087,12.851 Z M11.6847,19.978 L11.6847,13.602 L10.7847,13.602 L10.7847,19.978 L11.6847,19.978 Z M11.5528,13.92 L11.5541,13.919 L10.9177,13.283 L10.9165,13.284 L11.5528,13.92 Z M11.2359,14.051 L19.3364,14.051 L19.3364,13.151 L11.2359,13.151 L11.2359,14.051 Z M19.0182,13.919 L19.0194,13.92 L19.6559,13.284 L19.6546,13.283 L19.0182,13.919 Z M18.8876,13.602 L18.8876,19.978 L19.7876,19.978 L19.7876,13.602 L18.8876,13.602 Z M19.3376,19.528 L11.2347,19.528 L11.2347,20.428 L19.3376,20.428 L19.3376,19.528 Z M13.1089,11.256 C13.1089,10.689 13.3293,10.154 13.732,9.749 L13.0939,9.115 C12.5237,9.688 12.2089,10.451 12.2089,11.256 L13.1089,11.256 Z M13.7324,9.749 C14.1342,9.344 14.6611,9.124 15.2199,9.124 L15.2199,8.224 C14.4181,8.224 13.6621,8.542 13.0935,9.115 L13.7324,9.749 Z M15.2199,9.124 L15.3612,9.124 L15.3612,8.224 L15.2199,8.224 L15.2199,9.124 Z M15.3612,9.124 C16.2402,9.124 17.0409,9.688 17.3464,10.533 L18.1928,10.227 C17.7605,9.031 16.6254,8.224 15.3612,8.224 L15.3612,9.124 Z M17.3462,10.532 C17.4301,10.765 17.4734,11.009 17.4734,11.258 L18.3734,11.258 C18.3734,10.903 18.3116,10.557 18.193,10.227 L17.3462,10.532 Z M17.4734,11.258 L17.4746,12.851 L18.3746,12.85 L18.3734,11.257 L17.4734,11.258 Z M17.9246,12.401 L12.6589,12.401 L12.6589,13.301 L17.9246,13.301 L17.9246,12.401 Z M13.1089,12.851 L13.1089,11.256 L12.2089,11.256 L12.2089,12.851 L13.1089,12.851 Z M19.3376,12.401 L18.6749,12.401 L18.6749,13.301 L19.3376,13.301 L19.3376,12.401 Z M19.1249,12.85 L19.1224,11.256 L18.2224,11.257 L18.2249,12.851 L19.1249,12.85 Z M19.1224,11.256 C19.1224,10.817 19.0472,10.384 18.8981,9.971 L18.0515,10.276 C18.165,10.591 18.2224,10.92 18.2224,11.256 L19.1224,11.256 Z M18.8979,9.97 C18.3579,8.479 16.9399,7.474 15.3612,7.474 L15.3612,8.374 C16.556,8.374 17.6389,9.137 18.0517,10.277 L18.8979,9.97 Z M15.3612,7.474 L15.2211,7.474 L15.2211,8.374 L15.3612,8.374 L15.3612,7.474 Z M15.2211,7.474 C14.2185,7.474 13.2724,7.87 12.5611,8.586 L13.1994,9.22 C13.7435,8.673 14.4606,8.374 15.2211,8.374 L15.2211,7.474 Z M12.5608,8.586 C11.8511,9.301 11.4587,10.25 11.4587,11.256 L12.3586,11.256 C12.3586,10.489 12.6564,9.767 13.1997,9.22 L12.5608,8.586 Z M11.4587,11.256 L11.4587,12.851 L12.3586,12.851 L12.3586,11.256 L11.4587,11.256 Z M11.9087,12.401 L11.2347,12.401 L11.2347,13.301 L11.9087,13.301 L11.9087,12.401 Z M11.2347,12.401 C10.5735,12.401 10.0344,12.94 10.0344,13.601 L10.9344,13.601 C10.9344,13.437 11.0705,13.301 11.2347,13.301 L11.2347,12.401 Z M10.0344,13.601 L10.0344,20.053 L10.9344,20.053 L10.9344,13.601 L10.0344,13.601 Z M10.0344,20.053 C10.0344,20.673 10.5397,21.179 11.1596,21.179 L11.1596,20.279 C11.0368,20.279 10.9344,20.176 10.9344,20.053 L10.0344,20.053 Z M11.1596,21.179 L19.4127,21.179 L19.4127,20.279 L11.1596,20.279 L11.1596,21.179 Z M19.4127,21.179 C20.0326,21.179 20.5379,20.673 20.5379,20.053 L19.6379,20.053 C19.6379,20.176 19.5355,20.279 19.4127,20.279 L19.4127,21.179 Z M20.5379,20.053 L20.5379,13.601 L19.6379,13.601 L19.6379,20.053 L20.5379,20.053 Z M20.5379,13.601 C20.5379,12.94 19.9988,12.401 19.3376,12.401 L19.3376,13.301 C19.5018,13.301 19.6379,13.437 19.6379,13.601 L20.5379,13.601 Z" id="Shape" fill="#49535C" fill-rule="nonzero"></path>
                </g>
                <path d="M40.3779,6.91 L45.7295,6.91 L45.7295,8.111 L41.8232,8.111 L41.8232,9.771 L43.7568,9.771 C44.2907,9.771 44.7334,9.837 45.085,9.967 C45.4365,10.097 45.736,10.338 45.9834,10.689 C46.234,11.041 46.3594,11.453 46.3594,11.925 C46.3594,12.41 46.234,12.825 45.9834,13.17 C45.7327,13.515 45.4463,13.751 45.124,13.878 C44.805,14.005 44.3493,14.068 43.7568,14.068 L40.3779,14.068 L40.3779,6.91 Z M41.8232,12.867 L43.2295,12.867 C43.6787,12.867 43.9945,12.846 44.1768,12.804 C44.359,12.758 44.5169,12.657 44.6504,12.501 C44.7871,12.345 44.8555,12.153 44.8555,11.925 C44.8555,11.593 44.7367,11.352 44.499,11.202 C44.2646,11.049 43.8626,10.973 43.293,10.973 L41.8232,10.973 L41.8232,12.867 Z M50.5293,12.418 L51.8965,12.647 C51.7207,13.149 51.4424,13.531 51.0615,13.795 C50.6839,14.055 50.2103,14.186 49.6406,14.186 C48.7389,14.186 48.0716,13.891 47.6387,13.302 C47.2969,12.83 47.126,12.234 47.126,11.515 C47.126,10.655 47.3506,9.983 47.7998,9.498 C48.249,9.01 48.8171,8.766 49.5039,8.766 C50.2754,8.766 50.8841,9.021 51.3301,9.532 C51.776,10.04 51.9893,10.82 51.9697,11.871 L48.5322,11.871 C48.542,12.278 48.6527,12.595 48.8643,12.823 C49.0758,13.048 49.3395,13.16 49.6553,13.16 C49.8701,13.16 50.0508,13.102 50.1973,12.984 C50.3438,12.867 50.4544,12.678 50.5293,12.418 Z M50.6074,11.031 C50.5977,10.634 50.4951,10.333 50.2998,10.128 C50.1045,9.92 49.8669,9.815 49.5869,9.815 C49.2874,9.815 49.04,9.924 48.8447,10.143 C48.6494,10.361 48.5534,10.657 48.5566,11.031 L50.6074,11.031 Z M54.4893,11.939 L54.4893,11.046 C54.7269,11.046 54.8994,11.031 55.0068,11.002 C55.1143,10.969 55.2152,10.895 55.3096,10.777 C55.4072,10.657 55.4561,10.52 55.4561,10.367 C55.4561,10.204 55.3958,10.055 55.2754,9.918 C55.1582,9.778 54.9808,9.708 54.7432,9.708 C54.5609,9.708 54.3981,9.747 54.2549,9.825 C54.1117,9.903 53.9814,10.089 53.8643,10.382 L52.7021,10.133 C52.8193,9.677 53.07,9.335 53.4541,9.107 C53.8382,8.88 54.276,8.766 54.7676,8.766 C55.3926,8.766 55.876,8.909 56.2178,9.195 C56.5628,9.482 56.7354,9.841 56.7354,10.274 C56.7354,10.545 56.6605,10.769 56.5107,10.948 C56.3643,11.124 56.1315,11.288 55.8125,11.441 C56.1966,11.546 56.4831,11.703 56.6719,11.915 C56.8639,12.127 56.96,12.39 56.96,12.706 C56.96,13.11 56.7712,13.458 56.3936,13.751 C56.016,14.041 55.4723,14.186 54.7627,14.186 C53.5257,14.186 52.7689,13.702 52.4922,12.735 L53.7471,12.506 C53.9489,13.014 54.2826,13.268 54.748,13.268 C55.0052,13.268 55.2103,13.201 55.3633,13.067 C55.5195,12.931 55.5977,12.771 55.5977,12.589 C55.5977,12.387 55.5163,12.229 55.3535,12.115 C55.194,11.998 54.984,11.939 54.7236,11.939 L54.4893,11.939 Z M57.4922,11.402 C57.4922,10.947 57.6045,10.506 57.8291,10.079 C58.0537,9.653 58.3711,9.327 58.7812,9.103 C59.1947,8.878 59.6553,8.766 60.1631,8.766 C60.9476,8.766 61.5905,9.021 62.0918,9.532 C62.5931,10.04 62.8438,10.683 62.8438,11.461 C62.8438,12.245 62.5898,12.896 62.082,13.414 C61.5775,13.928 60.9411,14.186 60.1729,14.186 C59.6976,14.186 59.2435,14.078 58.8105,13.863 C58.3809,13.648 58.0537,13.334 57.8291,12.921 C57.6045,12.504 57.4922,11.998 57.4922,11.402 Z M58.8984,11.476 C58.8984,11.99 59.0205,12.384 59.2646,12.657 C59.5088,12.931 59.8099,13.067 60.168,13.067 C60.526,13.067 60.8255,12.931 61.0664,12.657 C61.3105,12.384 61.4326,11.987 61.4326,11.466 C61.4326,10.958 61.3105,10.567 61.0664,10.294 C60.8255,10.021 60.526,9.884 60.168,9.884 C59.8099,9.884 59.5088,10.021 59.2646,10.294 C59.0205,10.567 58.8984,10.961 58.8984,11.476 Z M63.8691,8.883 L68.4736,8.883 L68.4736,14.068 L67.1016,14.068 L67.1016,9.991 L65.2412,9.991 L65.2412,14.068 L63.8691,14.068 L63.8691,8.883 Z M70.9932,10.465 L69.748,10.24 C69.888,9.739 70.1289,9.368 70.4707,9.127 C70.8125,8.886 71.3203,8.766 71.9941,8.766 C72.6061,8.766 73.0618,8.839 73.3613,8.985 C73.6608,9.129 73.8708,9.312 73.9912,9.537 C74.1149,9.758 74.1768,10.167 74.1768,10.763 L74.1621,12.364 C74.1621,12.82 74.1833,13.157 74.2256,13.375 C74.2712,13.59 74.3542,13.821 74.4746,14.068 L73.1172,14.068 C73.0814,13.977 73.0374,13.842 72.9854,13.663 C72.9626,13.582 72.9463,13.528 72.9365,13.502 C72.7021,13.73 72.4515,13.901 72.1846,14.015 C71.9176,14.129 71.6328,14.186 71.3301,14.186 C70.7962,14.186 70.3747,14.041 70.0654,13.751 C69.7594,13.461 69.6064,13.095 69.6064,12.652 C69.6064,12.359 69.6764,12.099 69.8164,11.871 C69.9564,11.64 70.1517,11.464 70.4023,11.344 C70.6562,11.22 71.0208,11.113 71.4961,11.021 C72.1374,10.901 72.5817,10.789 72.8291,10.685 L72.8291,10.548 C72.8291,10.284 72.764,10.097 72.6338,9.986 C72.5036,9.872 72.2578,9.815 71.8965,9.815 C71.6523,9.815 71.4619,9.864 71.3252,9.962 C71.1885,10.056 71.0778,10.224 70.9932,10.465 Z M72.8291,11.578 C72.6533,11.637 72.375,11.707 71.9941,11.788 C71.6133,11.869 71.3643,11.949 71.2471,12.027 C71.068,12.154 70.9785,12.315 70.9785,12.511 C70.9785,12.703 71.0501,12.869 71.1934,13.009 C71.3366,13.149 71.5189,13.219 71.7402,13.219 C71.9876,13.219 72.2236,13.137 72.4482,12.975 C72.6143,12.851 72.7233,12.7 72.7754,12.521 C72.8112,12.403 72.8291,12.18 72.8291,11.852 L72.8291,11.578 Z M80.0557,10.416 L78.7031,10.66 C78.6576,10.39 78.5534,10.187 78.3906,10.05 C78.2311,9.913 78.0228,9.845 77.7656,9.845 C77.4238,9.845 77.1504,9.964 76.9453,10.201 C76.7435,10.436 76.6426,10.829 76.6426,11.383 C76.6426,11.998 76.7451,12.433 76.9502,12.687 C77.1585,12.94 77.4368,13.067 77.7852,13.067 C78.0456,13.067 78.2588,12.994 78.4248,12.848 C78.5908,12.698 78.708,12.442 78.7764,12.081 L80.124,12.311 C79.984,12.929 79.7155,13.396 79.3184,13.712 C78.9212,14.028 78.389,14.186 77.7217,14.186 C76.9632,14.186 76.3577,13.946 75.9053,13.468 C75.4561,12.989 75.2314,12.327 75.2314,11.48 C75.2314,10.624 75.4577,9.959 75.9102,9.483 C76.3626,9.005 76.9746,8.766 77.7461,8.766 C78.3776,8.766 78.8789,8.902 79.25,9.176 C79.6243,9.446 79.8929,9.859 80.0557,10.416 Z M81.0469,8.883 L82.4189,8.883 L82.4189,10.782 L84.3818,10.782 L84.3818,8.883 L85.7588,8.883 L85.7588,14.068 L84.3818,14.068 L84.3818,11.891 L82.4189,11.891 L82.4189,14.068 L81.0469,14.068 L81.0469,8.883 Z M86.8281,11.402 C86.8281,10.947 86.9404,10.506 87.165,10.079 C87.3896,9.653 87.707,9.327 88.117,9.103 C88.531,8.878 88.991,8.766 89.499,8.766 C90.284,8.766 90.926,9.021 91.428,9.532 C91.929,10.04 92.18,10.683 92.18,11.461 C92.18,12.245 91.926,12.896 91.418,13.414 C90.913,13.928 90.277,14.186 89.509,14.186 C89.034,14.186 88.579,14.078 88.146,13.863 C87.7168,13.648 87.3896,13.334 87.165,12.921 C86.9404,12.504 86.8281,11.998 86.8281,11.402 Z M88.234,11.476 C88.234,11.99 88.356,12.384 88.601,12.657 C88.845,12.931 89.146,13.067 89.504,13.067 C89.862,13.067 90.161,12.931 90.402,12.657 C90.646,12.384 90.769,11.987 90.769,11.466 C90.769,10.958 90.646,10.567 90.402,10.294 C90.161,10.021 89.862,9.884 89.504,9.884 C89.146,9.884 88.845,10.021 88.601,10.294 C88.356,10.567 88.234,10.961 88.234,11.476 Z M96.262,12.418 L97.629,12.647 C97.453,13.149 97.175,13.531 96.794,13.795 C96.416,14.055 95.943,14.186 95.373,14.186 C94.471,14.186 93.804,13.891 93.371,13.302 C93.029,12.83 92.858,12.234 92.858,11.515 C92.858,10.655 93.083,9.983 93.532,9.498 C93.981,9.01 94.549,8.766 95.236,8.766 C96.008,8.766 96.617,9.021 97.062,9.532 C97.508,10.04 97.722,10.82 97.702,11.871 L94.265,11.871 C94.274,12.278 94.385,12.595 94.597,12.823 C94.808,13.048 95.072,13.16 95.388,13.16 C95.603,13.16 95.783,13.102 95.93,12.984 C96.076,12.867 96.187,12.678 96.262,12.418 Z M96.34,11.031 C96.33,10.634 96.228,10.333 96.032,10.128 C95.837,9.92 95.599,9.815 95.319,9.815 C95.02,9.815 94.772,9.924 94.577,10.143 C94.382,10.361 94.286,10.657 94.289,11.031 L96.34,11.031 Z M44.8604,23.416 L43.5078,23.66 C43.4622,23.39 43.3581,23.187 43.1953,23.05 C43.0358,22.913 42.8275,22.845 42.5703,22.845 C42.2285,22.845 41.9551,22.964 41.75,23.201 C41.5482,23.436 41.4473,23.829 41.4473,24.383 C41.4473,24.998 41.5498,25.433 41.7549,25.687 C41.9632,25.94 42.2415,26.067 42.5898,26.067 C42.8503,26.067 43.0635,25.994 43.2295,25.848 C43.3955,25.698 43.5127,25.442 43.5811,25.081 L44.9287,25.311 C44.7887,25.929 44.5202,26.396 44.123,26.712 C43.7259,27.028 43.1937,27.186 42.5264,27.186 C41.7679,27.186 41.1624,26.946 40.71,26.468 C40.2607,25.989 40.0361,25.327 40.0361,24.48 C40.0361,23.624 40.2624,22.959 40.7148,22.483 C41.1673,22.005 41.7793,21.766 42.5508,21.766 C43.1823,21.766 43.6836,21.902 44.0547,22.176 C44.429,22.446 44.6976,22.859 44.8604,23.416 Z M45.5879,24.402 C45.5879,23.947 45.7002,23.506 45.9248,23.079 C46.1494,22.653 46.4668,22.327 46.877,22.103 C47.2904,21.878 47.751,21.766 48.2588,21.766 C49.0433,21.766 49.6862,22.021 50.1875,22.532 C50.6888,23.04 50.9395,23.683 50.9395,24.461 C50.9395,25.245 50.6855,25.896 50.1777,26.414 C49.6732,26.928 49.0368,27.186 48.2686,27.186 C47.7933,27.186 47.3392,27.078 46.9062,26.863 C46.4766,26.648 46.1494,26.334 45.9248,25.921 C45.7002,25.504 45.5879,24.998 45.5879,24.402 Z M46.9941,24.476 C46.9941,24.99 47.1162,25.384 47.3604,25.657 C47.6045,25.931 47.9056,26.067 48.2637,26.067 C48.6217,26.067 48.9212,25.931 49.1621,25.657 C49.4062,25.384 49.5283,24.987 49.5283,24.466 C49.5283,23.958 49.4062,23.567 49.1621,23.294 C48.9212,23.021 48.6217,22.884 48.2637,22.884 C47.9056,22.884 47.6045,23.021 47.3604,23.294 C47.1162,23.567 46.9941,23.961 46.9941,24.476 Z M55.0215,25.418 L56.3887,25.647 C56.2129,26.149 55.9346,26.531 55.5537,26.795 C55.1761,27.055 54.7025,27.186 54.1328,27.186 C53.2311,27.186 52.5638,26.891 52.1309,26.302 C51.7891,25.83 51.6182,25.234 51.6182,24.515 C51.6182,23.655 51.8428,22.983 52.292,22.498 C52.7412,22.01 53.3092,21.766 53.9961,21.766 C54.7676,21.766 55.3763,22.021 55.8223,22.532 C56.2682,23.04 56.4814,23.82 56.4619,24.871 L53.0244,24.871 C53.0342,25.278 53.1449,25.595 53.3564,25.823 C53.568,26.048 53.8317,26.16 54.1475,26.16 C54.3623,26.16 54.543,26.102 54.6895,25.984 C54.8359,25.867 54.9466,25.678 55.0215,25.418 Z M55.0996,24.031 C55.0898,23.634 54.9873,23.333 54.792,23.128 C54.5967,22.92 54.359,22.815 54.0791,22.815 C53.7796,22.815 53.5322,22.924 53.3369,23.143 C53.1416,23.361 53.0456,23.657 53.0488,24.031 L55.0996,24.031 Z M61.8721,27.068 L57.9463,27.068 L57.9463,28.436 L56.833,28.436 L56.833,25.945 L57.3945,25.945 C57.6289,25.685 57.8226,25.278 57.9756,24.725 C58.1286,24.171 58.2197,23.224 58.249,21.883 L62.4336,21.883 L62.4336,25.945 L62.9902,25.945 L62.9902,28.436 L61.8721,28.436 L61.8721,27.068 Z M61.0762,25.945 L61.0811,23.011 L59.4209,23.011 C59.3656,24.443 59.1377,25.421 58.7373,25.945 L61.0762,25.945 Z M63.8984,21.883 L65.2168,21.883 L65.2168,25.14 L67.3262,21.883 L68.6738,21.883 L68.6738,27.068 L67.3555,27.068 L67.3555,23.753 L65.2168,27.068 L63.8984,27.068 L63.8984,21.883 Z M70.0312,21.883 L71.4033,21.883 L71.4033,23.782 L73.3662,23.782 L73.3662,21.883 L74.7432,21.883 L74.7432,27.068 L73.3662,27.068 L73.3662,24.891 L71.4033,24.891 L71.4033,27.068 L70.0312,27.068 L70.0312,21.883 Z M79.1328,25.418 L80.5,25.647 C80.3242,26.149 80.0459,26.531 79.665,26.795 C79.2874,27.055 78.8138,27.186 78.2441,27.186 C77.3424,27.186 76.6751,26.891 76.2422,26.302 C75.9004,25.83 75.7295,25.234 75.7295,24.515 C75.7295,23.655 75.9541,22.983 76.4033,22.498 C76.8525,22.01 77.4206,21.766 78.1074,21.766 C78.8789,21.766 79.4876,22.021 79.9336,22.532 C80.3796,23.04 80.5928,23.82 80.5732,24.871 L77.1357,24.871 C77.1455,25.278 77.2562,25.595 77.4678,25.823 C77.6794,26.048 77.943,26.16 78.2588,26.16 C78.4736,26.16 78.6543,26.102 78.8008,25.984 C78.9473,25.867 79.0579,25.678 79.1328,25.418 Z M79.2109,24.031 C79.2012,23.634 79.0986,23.333 78.9033,23.128 C78.708,22.92 78.4704,22.815 78.1904,22.815 C77.891,22.815 77.6436,22.924 77.4482,23.143 C77.2529,23.361 77.1569,23.657 77.1602,24.031 L79.2109,24.031 Z M81.6426,21.883 L83.0146,21.883 L83.0146,23.782 L84.9775,23.782 L84.9775,21.883 L86.3545,21.883 L86.3545,27.068 L84.9775,27.068 L84.9775,24.891 L83.0146,24.891 L83.0146,27.068 L81.6426,27.068 L81.6426,21.883 Z M87.707,21.883 L89.025,21.883 L89.025,25.14 L91.135,21.883 L92.482,21.883 L92.482,27.068 L91.164,27.068 L91.164,23.753 L89.025,27.068 L87.707,27.068 L87.707,21.883 Z M96.896,25.418 L98.264,25.647 C98.088,26.149 97.81,26.531 97.429,26.795 C97.051,27.055 96.577,27.186 96.008,27.186 C95.106,27.186 94.439,26.891 94.006,26.302 C93.664,25.83 93.493,25.234 93.493,24.515 C93.493,23.655 93.718,22.983 94.167,22.498 C94.616,22.01 95.184,21.766 95.871,21.766 C96.643,21.766 97.251,22.021 97.697,22.532 C98.143,23.04 98.356,23.82 98.337,24.871 L94.899,24.871 C94.909,25.278 95.02,25.595 95.231,25.823 C95.443,26.048 95.707,26.16 96.022,26.16 C96.237,26.16 96.418,26.102 96.564,25.984 C96.711,25.867 96.822,25.678 96.896,25.418 Z M96.975,24.031 C96.965,23.634 96.862,23.333 96.667,23.128 C96.472,22.92 96.234,22.815 95.954,22.815 C95.655,22.815 95.407,22.924 95.212,23.143 C95.017,23.361 94.921,23.657 94.924,24.031 L96.975,24.031 Z" id="Shape" fill="#49535C" fill-rule="nonzero"></path>
                <g id="mastercard-secure" transform="translate(219.000000, 20.000000)">
                    <mask id="mask-2" fill="white">
                        <use xlink:href="#path-1"></use>
                    </mask>
                    <g id="Path"></g>
                    <path d="M67.929,4.971 C67.691,4.971 67.481,5.006 67.297,5.078 C67.112,5.151 66.954,5.253 66.82,5.387 C66.686,5.52 66.578,5.679 66.493,5.863 C66.408,6.047 66.349,6.25 66.315,6.47 L69.472,6.47 C69.4,5.996 69.231,5.627 68.964,5.365 C68.697,5.102 68.352,4.971 67.929,4.971 Z M67.954,3.789 C68.378,3.789 68.766,3.867 69.119,4.021 C69.473,4.176 69.776,4.394 70.028,4.676 C70.28,4.958 70.476,5.294 70.619,5.685 C70.76,6.077 70.831,6.51 70.831,6.984 C70.831,7.069 70.828,7.154 70.824,7.238 C70.821,7.323 70.814,7.403 70.806,7.479 L66.309,7.479 C66.351,7.755 66.429,7.99 66.544,8.184 C66.659,8.38 66.796,8.539 66.957,8.664 C67.118,8.789 67.297,8.881 67.497,8.94 C67.696,8.999 67.903,9.029 68.119,9.029 C68.424,9.029 68.73,8.974 69.037,8.861 C69.344,8.749 69.624,8.591 69.879,8.388 L70.539,9.334 C70.166,9.652 69.771,9.875 69.354,10.001 C68.937,10.129 68.498,10.192 68.037,10.192 C67.58,10.192 67.16,10.115 66.779,9.963 C66.398,9.811 66.069,9.595 65.794,9.316 C65.519,9.036 65.305,8.699 65.153,8.306 C65,7.911 64.924,7.474 64.924,6.991 C64.924,6.516 64.998,6.082 65.146,5.689 C65.295,5.295 65.502,4.958 65.769,4.676 C66.036,4.394 66.354,4.176 66.725,4.021 C67.096,3.867 67.506,3.789 67.954,3.789 Z M60.453,5.041 C60.165,5.041 59.908,5.093 59.681,5.196 C59.455,5.3 59.263,5.44 59.106,5.615 C58.95,5.791 58.829,5.997 58.744,6.235 C58.66,6.472 58.617,6.724 58.617,6.99 C58.617,7.257 58.66,7.509 58.744,7.747 C58.829,7.984 58.95,8.19 59.106,8.365 C59.263,8.541 59.455,8.681 59.681,8.785 C59.908,8.889 60.165,8.94 60.453,8.94 C60.728,8.94 60.977,8.891 61.203,8.791 C61.427,8.692 61.619,8.555 61.78,8.381 C61.941,8.208 62.066,8.003 62.155,7.766 C62.244,7.529 62.288,7.271 62.288,6.991 C62.288,6.712 62.244,6.453 62.155,6.216 C62.066,5.979 61.941,5.774 61.78,5.6 C61.619,5.426 61.427,5.29 61.203,5.19 C60.977,5.091 60.728,5.041 60.453,5.041 Z M60.294,3.789 C60.73,3.789 61.105,3.871 61.418,4.034 C61.731,4.197 61.994,4.414 62.206,4.685 L62.206,0.887 L63.534,0.887 L63.534,10.033 L62.206,10.033 L62.206,9.303 C61.994,9.573 61.731,9.79 61.418,9.95 C61.105,10.111 60.73,10.192 60.294,10.192 C59.867,10.192 59.468,10.113 59.1,9.954 C58.731,9.794 58.41,9.573 58.135,9.289 C57.859,9.006 57.643,8.669 57.486,8.276 C57.33,7.885 57.252,7.456 57.252,6.99 C57.252,6.525 57.33,6.095 57.486,5.704 C57.643,5.313 57.859,4.975 58.135,4.691 C58.41,4.407 58.731,4.186 59.1,4.027 C59.468,3.869 59.867,3.789 60.294,3.789 Z M53.022,5.041 C52.75,5.041 52.498,5.089 52.266,5.184 C52.033,5.279 51.831,5.412 51.662,5.584 C51.492,5.755 51.36,5.96 51.262,6.2 C51.165,6.44 51.116,6.702 51.116,6.99 C51.116,7.278 51.165,7.542 51.262,7.781 C51.36,8.021 51.492,8.226 51.662,8.397 C51.831,8.569 52.033,8.702 52.266,8.797 C52.498,8.892 52.75,8.94 53.022,8.94 C53.293,8.94 53.544,8.892 53.777,8.797 C54.009,8.702 54.212,8.569 54.383,8.397 C54.555,8.226 54.689,8.021 54.787,7.781 C54.884,7.542 54.933,7.278 54.933,6.99 C54.933,6.702 54.884,6.44 54.787,6.2 C54.689,5.96 54.555,5.755 54.383,5.584 C54.212,5.412 54.009,5.279 53.777,5.184 C53.544,5.089 53.293,5.041 53.022,5.041 Z M53.022,3.789 C53.492,3.789 53.927,3.871 54.326,4.034 C54.727,4.197 55.073,4.422 55.365,4.707 C55.657,4.993 55.886,5.33 56.051,5.72 C56.216,6.109 56.299,6.534 56.299,6.99 C56.299,7.448 56.216,7.871 56.051,8.26 C55.886,8.651 55.657,8.988 55.365,9.274 C55.073,9.559 54.727,9.784 54.326,9.947 C53.927,10.11 53.492,10.192 53.022,10.192 C52.551,10.192 52.116,10.11 51.716,9.947 C51.316,9.784 50.971,9.559 50.681,9.274 C50.391,8.988 50.163,8.651 49.998,8.26 C49.833,7.871 49.751,7.448 49.751,6.99 C49.751,6.534 49.833,6.109 49.998,5.72 C50.164,5.33 50.391,4.993 50.681,4.707 C50.971,4.422 51.316,4.197 51.716,4.034 C52.117,3.871 52.551,3.789 53.022,3.789 Z M45.178,0.976 C45.571,0.976 45.953,1.018 46.321,1.102 C46.689,1.188 47.032,1.31 47.35,1.471 C47.667,1.632 47.956,1.828 48.214,2.059 C48.472,2.29 48.688,2.549 48.861,2.837 L47.662,3.637 C47.39,3.238 47.042,2.926 46.616,2.697 C46.19,2.469 45.711,2.354 45.178,2.354 C44.724,2.354 44.305,2.432 43.92,2.589 C43.534,2.746 43.202,2.966 42.923,3.25 C42.643,3.533 42.424,3.874 42.266,4.272 C42.107,4.67 42.027,5.108 42.027,5.587 C42.027,6.066 42.107,6.504 42.266,6.902 C42.424,7.3 42.643,7.64 42.923,7.924 C43.202,8.208 43.534,8.428 43.92,8.585 C44.305,8.742 44.724,8.82 45.178,8.82 C45.706,8.82 46.182,8.708 46.603,8.483 C47.025,8.258 47.375,7.946 47.655,7.543 L48.824,8.401 C48.633,8.68 48.41,8.93 48.154,9.15 C47.898,9.37 47.614,9.559 47.302,9.716 C46.991,9.872 46.656,9.992 46.299,10.074 C45.941,10.157 45.567,10.198 45.178,10.198 C44.496,10.198 43.869,10.083 43.298,9.852 C42.726,9.621 42.235,9.301 41.824,8.89 C41.413,8.479 41.094,7.993 40.865,7.429 C40.637,6.866 40.522,6.252 40.522,5.587 C40.522,4.922 40.637,4.308 40.865,3.745 C41.094,3.182 41.413,2.695 41.824,2.284 C42.235,1.874 42.726,1.553 43.298,1.322 C43.869,1.091 44.496,0.976 45.178,0.976 Z M36.546,4.971 C36.309,4.971 36.098,5.006 35.914,5.078 C35.73,5.151 35.571,5.253 35.437,5.387 C35.304,5.52 35.195,5.679 35.11,5.863 C35.026,6.047 34.966,6.25 34.933,6.47 L38.09,6.47 C38.017,5.996 37.848,5.627 37.581,5.365 C37.314,5.102 36.97,4.971 36.546,4.971 Z M36.572,3.789 C36.995,3.789 37.384,3.867 37.737,4.021 C38.091,4.176 38.393,4.394 38.645,4.676 C38.897,4.958 39.094,5.294 39.236,5.685 C39.377,6.077 39.449,6.51 39.449,6.984 C39.449,7.069 39.446,7.154 39.442,7.238 C39.437,7.323 39.431,7.403 39.423,7.479 L34.926,7.479 C34.968,7.755 35.047,7.99 35.161,8.184 C35.276,8.38 35.413,8.539 35.574,8.664 C35.735,8.789 35.915,8.881 36.114,8.94 C36.313,8.999 36.521,9.029 36.736,9.029 C37.041,9.029 37.347,8.974 37.654,8.861 C37.961,8.749 38.241,8.591 38.496,8.388 L39.156,9.334 C38.783,9.652 38.389,9.875 37.971,10.001 C37.555,10.129 37.115,10.192 36.654,10.192 C36.196,10.192 35.777,10.115 35.396,9.963 C35.015,9.811 34.686,9.595 34.412,9.316 C34.136,9.036 33.922,8.699 33.77,8.306 C33.617,7.911 33.541,7.474 33.541,6.991 C33.541,6.516 33.616,6.082 33.764,5.689 C33.912,5.295 34.119,4.958 34.386,4.676 C34.653,4.394 34.972,4.176 35.342,4.021 C35.713,3.867 36.122,3.789 36.572,3.789 Z M32.112,3.789 C32.316,3.789 32.499,3.803 32.662,3.831 C32.825,3.858 32.983,3.902 33.135,3.961 L32.818,5.276 C32.678,5.203 32.515,5.148 32.329,5.11 C32.142,5.072 31.968,5.053 31.808,5.053 C31.596,5.053 31.402,5.089 31.223,5.161 C31.045,5.233 30.893,5.339 30.766,5.479 C30.639,5.619 30.539,5.79 30.467,5.993 C30.395,6.197 30.36,6.427 30.36,6.685 L30.36,10.033 L29.032,10.033 L29.032,3.948 L30.347,3.948 L30.347,4.634 C30.55,4.342 30.802,4.128 31.102,3.993 C31.403,3.857 31.74,3.789 32.112,3.789 Z M27.266,7.454 C27.266,7.937 27.186,8.352 27.025,8.698 C26.864,9.046 26.652,9.33 26.39,9.55 C26.128,9.771 25.827,9.932 25.488,10.036 C25.149,10.14 24.802,10.192 24.446,10.192 C24.091,10.192 23.744,10.14 23.405,10.036 C23.066,9.932 22.764,9.771 22.499,9.55 C22.235,9.33 22.023,9.046 21.864,8.698 C21.706,8.352 21.626,7.937 21.626,7.454 L21.626,3.948 L22.96,3.948 L22.96,7.333 C22.96,7.625 22.998,7.875 23.074,8.08 C23.151,8.285 23.255,8.451 23.389,8.579 C23.522,8.705 23.68,8.797 23.862,8.854 C24.044,8.912 24.239,8.94 24.446,8.94 C24.654,8.94 24.848,8.912 25.031,8.854 C25.213,8.797 25.371,8.705 25.504,8.579 C25.637,8.451 25.742,8.285 25.818,8.08 C25.894,7.875 25.933,7.625 25.933,7.333 L25.933,3.948 L27.266,3.948 L27.266,7.454 Z M18.184,3.789 C18.642,3.789 19.067,3.871 19.461,4.034 C19.855,4.197 20.187,4.439 20.458,4.761 L19.607,5.669 C19.391,5.466 19.166,5.31 18.934,5.202 C18.701,5.094 18.438,5.041 18.146,5.041 C17.892,5.041 17.655,5.089 17.435,5.184 C17.214,5.279 17.024,5.412 16.863,5.584 C16.702,5.755 16.576,5.96 16.485,6.2 C16.394,6.44 16.349,6.702 16.349,6.99 C16.349,7.278 16.394,7.542 16.485,7.781 C16.576,8.021 16.702,8.226 16.863,8.397 C17.024,8.569 17.214,8.702 17.435,8.797 C17.655,8.892 17.892,8.94 18.146,8.94 C18.438,8.94 18.711,8.88 18.965,8.759 C19.22,8.639 19.444,8.487 19.638,8.305 L20.458,9.22 C20.179,9.541 19.844,9.784 19.455,9.947 C19.065,10.11 18.642,10.192 18.184,10.192 C17.701,10.192 17.263,10.11 16.869,9.947 C16.476,9.784 16.139,9.559 15.86,9.274 C15.58,8.988 15.364,8.651 15.212,8.26 C15.059,7.871 14.983,7.448 14.983,6.99 C14.983,6.534 15.059,6.109 15.212,5.72 C15.364,5.33 15.58,4.993 15.86,4.707 C16.139,4.422 16.475,4.197 16.869,4.034 C17.263,3.871 17.701,3.789 18.184,3.789 Z M11.128,4.971 C10.891,4.971 10.68,5.006 10.496,5.078 C10.312,5.151 10.153,5.253 10.02,5.387 C9.886,5.52 9.777,5.679 9.692,5.863 C9.608,6.047 9.549,6.25 9.515,6.47 L12.671,6.47 C12.599,5.996 12.43,5.627 12.163,5.365 C11.896,5.102 11.551,4.971 11.128,4.971 Z M11.154,3.789 C11.577,3.789 11.965,3.867 12.319,4.021 C12.672,4.176 12.975,4.394 13.227,4.676 C13.479,4.958 13.676,5.294 13.818,5.685 C13.959,6.077 14.031,6.51 14.031,6.984 C14.031,7.069 14.028,7.154 14.024,7.238 C14.019,7.323 14.013,7.403 14.005,7.479 L9.508,7.479 C9.55,7.755 9.629,7.99 9.743,8.184 C9.857,8.38 9.995,8.539 10.156,8.664 C10.317,8.789 10.497,8.881 10.696,8.94 C10.895,8.999 11.102,9.029 11.318,9.029 C11.623,9.029 11.929,8.974 12.236,8.861 C12.543,8.749 12.824,8.591 13.078,8.388 L13.738,9.334 C13.366,9.652 12.971,9.875 12.554,10.001 C12.137,10.129 11.697,10.192 11.236,10.192 C10.778,10.192 10.359,10.115 9.978,9.963 C9.597,9.811 9.269,9.595 8.994,9.316 C8.718,9.036 8.504,8.699 8.353,8.306 C8.2,7.911 8.123,7.474 8.123,6.991 C8.123,6.516 8.198,6.082 8.346,5.689 C8.494,5.295 8.701,4.958 8.968,4.676 C9.235,4.394 9.553,4.176 9.924,4.021 C10.295,3.867 10.704,3.789 11.154,3.789 Z M6.307,3.11 C5.926,2.869 5.528,2.681 5.113,2.547 C4.698,2.414 4.264,2.348 3.811,2.348 C3.515,2.348 3.244,2.378 2.998,2.44 C2.753,2.501 2.542,2.59 2.366,2.707 C2.191,2.823 2.054,2.963 1.957,3.126 C1.859,3.289 1.811,3.472 1.811,3.675 C1.811,3.861 1.853,4.02 1.938,4.151 C2.022,4.283 2.144,4.394 2.303,4.485 C2.461,4.576 2.655,4.651 2.884,4.71 C3.113,4.77 3.371,4.82 3.659,4.863 L4.275,4.945 C4.635,4.996 4.986,5.074 5.329,5.181 C5.672,5.286 5.978,5.434 6.247,5.625 C6.516,5.815 6.732,6.055 6.894,6.343 C7.058,6.63 7.14,6.98 7.14,7.391 C7.14,7.844 7.044,8.244 6.854,8.591 C6.663,8.938 6.404,9.23 6.078,9.467 C5.752,9.705 5.374,9.885 4.945,10.008 C4.515,10.13 4.059,10.192 3.576,10.192 C3.275,10.192 2.963,10.166 2.639,10.115 C2.315,10.065 1.996,9.99 1.68,9.89 C1.365,9.79 1.063,9.666 0.775,9.518 C0.487,9.37 0.229,9.197 0,8.997 L0.781,7.854 C0.934,7.994 1.117,8.124 1.331,8.242 C1.545,8.361 1.774,8.464 2.02,8.553 C2.266,8.642 2.52,8.711 2.785,8.759 C3.05,8.808 3.312,8.833 3.57,8.833 C3.862,8.833 4.134,8.803 4.386,8.744 C4.638,8.684 4.857,8.597 5.043,8.483 C5.229,8.369 5.377,8.23 5.484,8.067 C5.593,7.904 5.646,7.721 5.646,7.518 C5.646,7.17 5.476,6.906 5.135,6.724 C4.794,6.542 4.298,6.406 3.646,6.317 L2.954,6.222 C2.623,6.175 2.3,6.099 1.985,5.993 C1.67,5.888 1.388,5.738 1.14,5.546 C0.892,5.353 0.693,5.112 0.543,4.822 C0.392,4.532 0.317,4.18 0.317,3.765 C0.317,3.32 0.41,2.925 0.594,2.58 C0.778,2.235 1.029,1.945 1.347,1.709 C1.664,1.474 2.036,1.296 2.461,1.173 C2.887,1.05 3.34,0.988 3.824,0.988 C4.472,0.988 5.057,1.075 5.579,1.246 C6.102,1.417 6.589,1.651 7.038,1.947 L6.307,3.11 Z" id="Shape" fill="#6F7D88" mask="url(#mask-2)"></path>
                    <mask id="mask-4" fill="white">
                        <use xlink:href="#path-3"></use>
                    </mask>
                    <g id="Path"></g>
                    <path d="M67.683,-7.691 C67.384,-7.691 67.117,-7.637 66.882,-7.53 C66.647,-7.422 66.449,-7.277 66.286,-7.095 C66.124,-6.912 65.998,-6.699 65.911,-6.453 C65.823,-6.207 65.779,-5.946 65.779,-5.668 C65.779,-5.392 65.823,-5.13 65.911,-4.885 C65.998,-4.639 66.124,-4.424 66.286,-4.242 C66.449,-4.06 66.647,-3.915 66.882,-3.807 C67.117,-3.7 67.384,-3.646 67.683,-3.646 C67.968,-3.646 68.227,-3.698 68.46,-3.801 C68.693,-3.904 68.893,-4.046 69.06,-4.226 C69.227,-4.406 69.356,-4.619 69.448,-4.865 C69.541,-5.111 69.587,-5.379 69.587,-5.668 C69.587,-5.959 69.541,-6.227 69.448,-6.473 C69.356,-6.719 69.227,-6.932 69.06,-7.112 C68.893,-7.291 68.693,-7.433 68.46,-7.536 C68.227,-7.639 67.968,-7.691 67.683,-7.691 Z M67.518,-8.989 C67.97,-8.989 68.359,-8.904 68.684,-8.735 C69.009,-8.566 69.281,-8.341 69.501,-8.06 L69.501,-12 L70.878,-12 L70.878,-2.513 L69.501,-2.513 L69.501,-3.271 C69.281,-2.99 69.009,-2.766 68.684,-2.599 C68.359,-2.431 67.97,-2.348 67.518,-2.348 C67.074,-2.348 66.661,-2.431 66.28,-2.595 C65.897,-2.76 65.564,-2.99 65.278,-3.284 C64.993,-3.578 64.769,-3.928 64.606,-4.334 C64.444,-4.741 64.362,-5.185 64.362,-5.668 C64.362,-6.152 64.444,-6.597 64.606,-7.003 C64.769,-7.409 64.993,-7.76 65.278,-8.054 C65.564,-8.348 65.897,-8.577 66.28,-8.742 C66.661,-8.906 67.074,-8.989 67.518,-8.989 Z M62.998,-8.989 C63.21,-8.989 63.4,-8.975 63.568,-8.946 C63.737,-8.917 63.901,-8.873 64.059,-8.811 L63.729,-7.447 C63.585,-7.522 63.416,-7.579 63.223,-7.618 C63.029,-7.658 62.849,-7.677 62.682,-7.677 C62.462,-7.677 62.261,-7.641 62.077,-7.566 C61.891,-7.491 61.734,-7.381 61.602,-7.236 C61.47,-7.091 61.367,-6.914 61.292,-6.702 C61.217,-6.492 61.18,-6.252 61.18,-5.985 L61.18,-2.513 L59.804,-2.513 L59.804,-8.824 L61.167,-8.824 L61.167,-8.113 C61.378,-8.416 61.639,-8.637 61.951,-8.778 C62.263,-8.918 62.612,-8.989 62.998,-8.989 Z M54.579,-7.691 C54.28,-7.691 54.013,-7.637 53.779,-7.53 C53.543,-7.422 53.345,-7.277 53.183,-7.095 C53.02,-6.912 52.894,-6.699 52.807,-6.453 C52.719,-6.207 52.675,-5.946 52.675,-5.668 C52.675,-5.392 52.719,-5.13 52.807,-4.885 C52.895,-4.639 53.02,-4.424 53.183,-4.242 C53.345,-4.06 53.543,-3.915 53.779,-3.807 C54.013,-3.7 54.28,-3.646 54.579,-3.646 C54.864,-3.646 55.123,-3.698 55.357,-3.801 C55.589,-3.904 55.789,-4.046 55.956,-4.226 C56.123,-4.406 56.252,-4.619 56.345,-4.865 C56.438,-5.111 56.483,-5.379 56.483,-5.668 C56.483,-5.959 56.438,-6.227 56.345,-6.473 C56.252,-6.719 56.123,-6.932 55.956,-7.112 C55.789,-7.291 55.59,-7.433 55.357,-7.536 C55.123,-7.639 54.864,-7.691 54.579,-7.691 Z M57.774,-2.513 L56.397,-2.513 L56.397,-3.271 C56.178,-2.99 55.906,-2.766 55.581,-2.599 C55.255,-2.431 54.867,-2.348 54.414,-2.348 C53.97,-2.348 53.558,-2.431 53.176,-2.595 C52.794,-2.76 52.46,-2.99 52.174,-3.284 C51.889,-3.578 51.665,-3.928 51.503,-4.334 C51.34,-4.741 51.259,-5.185 51.259,-5.668 C51.259,-6.152 51.34,-6.597 51.503,-7.003 C51.665,-7.409 51.889,-7.76 52.174,-8.054 C52.46,-8.348 52.794,-8.577 53.176,-8.742 C53.558,-8.907 53.97,-8.989 54.414,-8.989 C54.867,-8.989 55.255,-8.904 55.581,-8.735 C55.906,-8.566 56.178,-8.341 56.397,-8.061 L56.397,-8.824 L57.774,-8.824 L57.774,-2.513 Z M48.076,-8.989 C48.551,-8.989 48.992,-8.904 49.401,-8.735 C49.809,-8.566 50.154,-8.315 50.435,-7.981 L49.552,-7.039 C49.328,-7.25 49.096,-7.411 48.854,-7.523 C48.612,-7.635 48.34,-7.691 48.037,-7.691 C47.774,-7.691 47.528,-7.642 47.299,-7.543 C47.071,-7.444 46.873,-7.306 46.706,-7.128 C46.54,-6.95 46.409,-6.737 46.315,-6.489 C46.22,-6.241 46.173,-5.968 46.173,-5.668 C46.173,-5.37 46.22,-5.097 46.315,-4.848 C46.409,-4.601 46.54,-4.388 46.706,-4.209 C46.873,-4.032 47.071,-3.893 47.299,-3.795 C47.528,-3.695 47.774,-3.646 48.037,-3.646 C48.34,-3.646 48.623,-3.709 48.886,-3.834 C49.15,-3.959 49.383,-4.116 49.585,-4.305 L50.435,-3.356 C50.146,-3.022 49.798,-2.771 49.395,-2.602 C48.989,-2.433 48.551,-2.348 48.077,-2.348 C47.576,-2.348 47.121,-2.433 46.713,-2.602 C46.305,-2.771 45.955,-3.004 45.665,-3.3 C45.376,-3.597 45.152,-3.947 44.994,-4.351 C44.836,-4.755 44.756,-5.194 44.756,-5.668 C44.756,-6.143 44.836,-6.582 44.994,-6.987 C45.152,-7.39 45.376,-7.74 45.665,-8.037 C45.955,-8.334 46.305,-8.566 46.713,-8.735 C47.121,-8.904 47.576,-8.989 48.076,-8.989 Z M43.366,-8.989 C43.577,-8.989 43.767,-8.975 43.936,-8.946 C44.105,-8.917 44.269,-8.873 44.427,-8.811 L44.097,-7.447 C43.953,-7.522 43.783,-7.579 43.59,-7.618 C43.397,-7.658 43.216,-7.677 43.05,-7.677 C42.83,-7.677 42.628,-7.641 42.443,-7.566 C42.259,-7.491 42.101,-7.381 41.969,-7.236 C41.837,-7.091 41.734,-6.914 41.66,-6.702 C41.585,-6.492 41.548,-6.252 41.548,-5.985 L41.548,-2.513 L40.171,-2.513 L40.171,-8.824 L41.535,-8.824 L41.535,-8.113 C41.746,-8.416 42.007,-8.637 42.319,-8.778 C42.63,-8.918 42.979,-8.989 43.366,-8.989 Z M35.586,-7.764 C35.34,-7.764 35.121,-7.726 34.93,-7.652 C34.739,-7.577 34.574,-7.471 34.436,-7.332 C34.298,-7.194 34.185,-7.029 34.097,-6.838 C34.009,-6.647 33.948,-6.437 33.912,-6.209 L37.187,-6.209 C37.112,-6.701 36.937,-7.083 36.66,-7.355 C36.383,-7.627 36.025,-7.764 35.586,-7.764 Z M35.612,-8.989 C36.051,-8.989 36.455,-8.909 36.821,-8.748 C37.188,-8.588 37.502,-8.362 37.763,-8.07 C38.025,-7.778 38.228,-7.428 38.376,-7.023 C38.523,-6.616 38.597,-6.167 38.597,-5.675 C38.597,-5.587 38.594,-5.499 38.59,-5.411 C38.586,-5.323 38.578,-5.24 38.571,-5.161 L33.906,-5.161 C33.95,-4.876 34.031,-4.632 34.15,-4.43 C34.268,-4.228 34.411,-4.062 34.578,-3.933 C34.745,-3.803 34.931,-3.707 35.138,-3.646 C35.344,-3.584 35.559,-3.554 35.783,-3.554 C36.1,-3.554 36.417,-3.612 36.735,-3.728 C37.054,-3.845 37.345,-4.008 37.608,-4.219 L38.294,-3.238 C37.907,-2.908 37.498,-2.677 37.065,-2.546 C36.632,-2.414 36.176,-2.348 35.698,-2.348 C35.224,-2.348 34.788,-2.427 34.393,-2.585 C33.998,-2.743 33.658,-2.967 33.372,-3.257 C33.087,-3.548 32.865,-3.896 32.707,-4.305 C32.549,-4.713 32.47,-5.168 32.47,-5.668 C32.47,-6.16 32.546,-6.611 32.7,-7.019 C32.854,-7.427 33.069,-7.777 33.346,-8.069 C33.623,-8.362 33.953,-8.588 34.337,-8.748 C34.721,-8.909 35.147,-8.989 35.612,-8.989 Z M31.376,-7.573 L28.958,-7.573 L28.958,-4.825 C28.958,-4.615 28.985,-4.435 29.037,-4.285 C29.09,-4.136 29.162,-4.014 29.251,-3.919 C29.341,-3.825 29.447,-3.756 29.567,-3.712 C29.688,-3.668 29.819,-3.646 29.96,-3.646 C30.175,-3.646 30.393,-3.687 30.615,-3.771 C30.837,-3.855 31.042,-3.956 31.231,-4.074 L31.778,-2.974 C31.523,-2.803 31.237,-2.656 30.918,-2.533 C30.6,-2.41 30.241,-2.348 29.841,-2.348 C29.125,-2.348 28.568,-2.546 28.171,-2.944 C27.773,-3.342 27.575,-3.96 27.575,-4.799 L27.575,-7.573 L26.317,-7.573 L26.317,-8.824 L27.575,-8.824 L27.575,-10.735 L28.958,-10.735 L28.958,-8.824 L31.376,-8.824 L31.376,-7.573 Z M24.841,-7.243 C24.744,-7.3 24.626,-7.36 24.485,-7.424 C24.345,-7.488 24.189,-7.546 24.017,-7.599 C23.846,-7.651 23.665,-7.695 23.474,-7.73 C23.283,-7.765 23.088,-7.783 22.891,-7.783 C22.513,-7.783 22.22,-7.714 22.011,-7.576 C21.803,-7.438 21.698,-7.256 21.698,-7.032 C21.698,-6.922 21.726,-6.83 21.78,-6.756 C21.836,-6.681 21.909,-6.619 22.001,-6.571 C22.094,-6.522 22.203,-6.484 22.331,-6.456 C22.458,-6.427 22.594,-6.402 22.739,-6.38 L23.391,-6.281 C24.081,-6.18 24.619,-5.979 25.005,-5.678 C25.392,-5.378 25.585,-4.957 25.585,-4.417 C25.585,-4.114 25.52,-3.836 25.391,-3.584 C25.261,-3.331 25.075,-3.113 24.831,-2.931 C24.587,-2.749 24.286,-2.607 23.928,-2.506 C23.571,-2.405 23.165,-2.355 22.713,-2.355 C22.55,-2.355 22.361,-2.364 22.146,-2.384 C21.931,-2.404 21.703,-2.444 21.462,-2.502 C21.22,-2.562 20.974,-2.645 20.723,-2.75 C20.473,-2.855 20.233,-2.994 20.005,-3.165 L20.644,-4.199 C20.758,-4.111 20.882,-4.029 21.016,-3.952 C21.15,-3.876 21.302,-3.807 21.471,-3.748 C21.64,-3.689 21.827,-3.641 22.031,-3.607 C22.235,-3.572 22.467,-3.554 22.726,-3.554 C23.201,-3.554 23.559,-3.623 23.8,-3.761 C24.042,-3.899 24.162,-4.087 24.162,-4.325 C24.162,-4.504 24.074,-4.653 23.899,-4.769 C23.723,-4.885 23.446,-4.97 23.069,-5.022 L22.41,-5.109 C21.707,-5.205 21.175,-5.41 20.813,-5.724 C20.45,-6.038 20.269,-6.45 20.269,-6.96 C20.269,-7.272 20.329,-7.553 20.45,-7.803 C20.571,-8.053 20.744,-8.265 20.971,-8.439 C21.197,-8.612 21.47,-8.746 21.791,-8.84 C22.111,-8.935 22.474,-8.982 22.878,-8.982 C23.374,-8.982 23.841,-8.924 24.281,-8.807 C24.72,-8.691 25.104,-8.528 25.434,-8.317 L24.841,-7.243 Z M15.321,-7.691 C15.023,-7.691 14.756,-7.637 14.521,-7.53 C14.286,-7.422 14.087,-7.277 13.925,-7.095 C13.762,-6.912 13.637,-6.699 13.549,-6.453 C13.461,-6.207 13.417,-5.946 13.417,-5.668 C13.417,-5.392 13.461,-5.13 13.549,-4.885 C13.637,-4.639 13.762,-4.424 13.925,-4.242 C14.087,-4.06 14.286,-3.915 14.521,-3.807 C14.756,-3.7 15.023,-3.646 15.321,-3.646 C15.607,-3.646 15.866,-3.698 16.098,-3.801 C16.332,-3.904 16.531,-4.046 16.698,-4.226 C16.865,-4.406 16.995,-4.619 17.087,-4.865 C17.179,-5.111 17.225,-5.379 17.225,-5.668 C17.225,-5.959 17.179,-6.227 17.087,-6.473 C16.995,-6.719 16.865,-6.932 16.698,-7.112 C16.531,-7.291 16.332,-7.433 16.098,-7.536 C15.866,-7.639 15.607,-7.691 15.321,-7.691 Z M18.516,-2.513 L17.14,-2.513 L17.14,-3.271 C16.92,-2.99 16.648,-2.766 16.323,-2.599 C15.998,-2.431 15.609,-2.348 15.157,-2.348 C14.713,-2.348 14.3,-2.431 13.918,-2.595 C13.536,-2.76 13.202,-2.99 12.916,-3.284 C12.631,-3.578 12.407,-3.928 12.245,-4.334 C12.082,-4.741 12.001,-5.185 12.001,-5.668 C12.001,-6.152 12.082,-6.597 12.245,-7.003 C12.407,-7.409 12.631,-7.76 12.916,-8.054 C13.202,-8.348 13.536,-8.577 13.918,-8.742 C14.3,-8.907 14.713,-8.989 15.157,-8.989 C15.609,-8.989 15.998,-8.904 16.323,-8.735 C16.648,-8.566 16.92,-8.341 17.14,-8.061 L17.14,-8.824 L18.516,-8.824 L18.516,-2.513 Z M10.677,-2.513 L9.188,-2.513 L9.188,-10.102 L6.494,-3.416 L4.926,-3.416 L2.231,-10.03 L2.231,-2.513 L0.742,-2.513 L0.742,-11.736 L3.029,-11.736 L5.71,-5.148 L8.391,-11.736 L10.677,-11.736 L10.677,-2.513 Z" id="Shape" fill="#6F7D88" mask="url(#mask-4)"></path>
                </g>
                <g id="verigied-by-visa" transform="translate(130.086000, 5.086000)" fill="#6F7D88">
                    <path d="M2.804,9.213 L-9.9475983e-14,0.602 L1.202,0.602 L2.546,4.836 C2.918,6.009 3.233,7.039 3.462,8.069 L3.49,8.069 C3.719,7.067 4.091,5.98 4.463,4.864 L5.922,0.602 L7.124,0.602 L4.034,9.213 L2.804,9.213 Z" id="Path" fill-rule="nonzero"></path>
                    <path d="M9.842,8.469 C8.726,8.469 7.753,7.839 7.725,6.323 L12.073,6.294 C12.073,6.247 12.078,6.19 12.084,6.123 C12.092,6.028 12.102,5.914 12.102,5.779 C12.102,4.635 11.587,2.861 9.556,2.861 C7.753,2.861 6.666,4.349 6.666,6.209 C6.666,8.068 7.782,9.327 9.699,9.327 C10.671,9.327 11.358,9.127 11.758,8.955 L11.558,8.154 C11.129,8.326 10.643,8.469 9.842,8.469 Z M9.441,3.691 C10.728,3.691 11.043,4.807 11.015,5.522 L7.725,5.522 C7.81,4.749 8.297,3.691 9.441,3.691 Z" id="Shape"></path>
                    <path d="M12.989,4.948 C12.989,4.233 12.989,3.604 12.932,3.032 L13.904,3.032 L13.933,4.233 L13.99,4.233 C14.276,3.404 14.963,2.889 15.707,2.889 C15.821,2.889 15.936,2.889 16.021,2.917 L16.021,3.976 C15.907,3.947 15.793,3.947 15.649,3.947 C14.848,3.947 14.305,4.548 14.133,5.378 C14.105,5.521 14.076,5.721 14.076,5.893 L14.076,9.183 L12.96,9.183 L12.96,4.948 L12.989,4.948 Z" id="Path" fill-rule="nonzero"></path>
                    <path d="M17.251,1.974 C17.709,1.974 17.966,1.659 17.966,1.287 C17.966,0.887 17.68,0.572 17.28,0.572 C16.85,0.572 16.564,0.887 16.564,1.287 C16.564,1.659 16.85,1.974 17.251,1.974 Z M17.823,3.033 L16.707,3.033 L16.707,9.212 L17.823,9.212 L17.823,3.033 Z" id="Shape"></path>
                    <path d="M19.311,9.212 L19.311,3.891 L18.453,3.891 L18.453,3.033 L19.311,3.033 L19.311,2.746 C19.311,1.888 19.512,1.087 20.027,0.572 C20.456,0.172 20.999,-2.27373675e-13 21.543,-2.27373675e-13 C21.943,-2.27373675e-13 22.287,0.086 22.516,0.172 L22.373,1.03 C22.201,0.944 21.972,0.887 21.657,0.887 C20.713,0.887 20.456,1.717 20.456,2.689 L20.456,3.033 L21.943,3.033 L21.943,3.891 L20.456,3.891 L20.456,9.212 L19.311,9.212 Z" id="Path" fill-rule="nonzero"></path>
                    <path d="M23.546,1.974 C24.004,1.974 24.29,1.659 24.261,1.287 C24.261,0.887 24.004,0.572 23.575,0.572 C23.145,0.572 22.859,0.887 22.859,1.287 C22.859,1.659 23.145,1.974 23.546,1.974 Z M24.118,3.033 L23.002,3.033 L23.002,9.212 L24.118,9.212 L24.118,3.033 Z" id="Shape"></path>
                    <path d="M28.238,8.469 C27.122,8.469 26.15,7.839 26.121,6.323 L30.47,6.294 C30.47,6.247 30.475,6.19 30.48,6.123 C30.488,6.028 30.498,5.914 30.498,5.779 C30.498,4.635 29.983,2.861 27.952,2.861 C26.15,2.861 25.062,4.349 25.062,6.209 C25.062,8.068 26.178,9.327 28.095,9.327 C29.068,9.327 29.754,9.127 30.155,8.955 L29.955,8.154 C29.526,8.326 29.039,8.469 28.238,8.469 Z M27.838,3.691 C29.125,3.691 29.411,4.807 29.411,5.522 L26.121,5.522 C26.207,4.749 26.693,3.691 27.838,3.691 Z" id="Shape"></path>
                    <path d="M36.734,7.61 L36.734,0.143 L35.618,0.143 L35.618,3.805 L35.59,3.805 C35.304,3.318 34.674,2.86 33.73,2.86 C32.214,2.86 30.955,4.119 30.955,6.179 C30.955,8.067 32.099,9.326 33.587,9.326 C34.617,9.326 35.361,8.811 35.704,8.125 L35.733,8.125 L35.79,9.212 L36.791,9.212 C36.734,8.783 36.734,8.153 36.734,7.61 Z M35.561,5.063 C35.618,5.206 35.618,5.407 35.618,5.55 L35.618,6.608 C35.618,6.78 35.59,6.952 35.561,7.095 C35.332,7.953 34.646,8.439 33.902,8.439 C32.672,8.439 32.071,7.409 32.071,6.151 C32.071,4.777 32.757,3.747 33.93,3.747 C34.789,3.747 35.389,4.348 35.561,5.063 Z" id="Shape"></path>
                    <path d="M40.94,7.61 C40.94,8.153 40.911,8.783 40.883,9.212 L41.884,9.212 L41.941,8.182 L41.97,8.182 C42.428,9.011 43.143,9.355 44.03,9.355 C45.403,9.355 46.805,8.239 46.805,6.036 C46.834,4.176 45.746,2.889 44.201,2.889 C43.2,2.889 42.485,3.347 42.084,4.033 L42.056,4.033 L42.056,0.143 L40.94,0.143 L40.94,7.61 Z M42.113,7.123 C42.084,7.009 42.056,6.866 42.056,6.723 L42.084,6.723 L42.084,5.607 C42.084,5.435 42.113,5.264 42.142,5.149 C42.37,4.291 43.086,3.776 43.858,3.776 C45.06,3.776 45.689,4.834 45.689,6.065 C45.689,7.467 44.974,8.439 43.801,8.439 C42.971,8.439 42.342,7.896 42.113,7.123 Z" id="Shape"></path>
                    <path d="M48.035,3.033 L49.379,6.695 C49.523,7.096 49.666,7.582 49.78,7.954 L49.809,7.954 C49.923,7.582 50.037,7.096 50.209,6.667 L51.439,3.033 L52.641,3.033 L50.953,7.439 C50.152,9.556 49.608,10.643 48.836,11.301 C48.292,11.788 47.749,11.988 47.463,12.017 L47.177,11.072 C47.463,10.987 47.835,10.815 48.149,10.529 C48.464,10.3 48.836,9.842 49.093,9.27 C49.151,9.156 49.179,9.07 49.179,9.013 C49.179,8.955 49.151,8.869 49.093,8.726 L46.805,3.033 L48.035,3.033 Z" id="Path" fill-rule="nonzero"></path>
                    <path d="M18.654,13.418 L15.249,22.029 L13.876,14.705 C13.705,13.876 13.075,13.418 12.36,13.418 L6.781,13.418 L6.695,13.79 C7.84,14.047 9.127,14.448 9.928,14.877 C10.414,15.134 10.558,15.363 10.701,15.993 L13.304,26.092 L16.794,26.092 L22.116,13.418 L18.654,13.418 L18.654,13.418 Z" id="Path" fill-rule="nonzero"></path>
                    <polygon id="Path" fill-rule="nonzero" points="23.517 13.418 20.799 26.092 24.089 26.092 26.778 13.418"></polygon>
                    <path d="M31.098,16.937 C31.098,16.479 31.556,15.993 32.5,15.879 C32.958,15.821 34.274,15.764 35.733,16.451 L36.305,13.762 C35.504,13.475 34.503,13.189 33.244,13.189 C30.011,13.189 27.722,14.906 27.694,17.395 C27.665,19.226 29.324,20.227 30.554,20.828 C31.842,21.458 32.271,21.829 32.242,22.402 C32.242,23.26 31.212,23.632 30.297,23.632 C28.638,23.66 27.694,23.174 26.921,22.831 L26.32,25.606 C27.093,25.949 28.495,26.264 29.954,26.264 C33.387,26.264 35.647,24.576 35.647,21.915 C35.704,18.625 31.069,18.425 31.098,16.937 Z" id="Path" fill-rule="nonzero"></path>
                    <path d="M40.425,14.333 C40.654,13.789 41.197,13.417 41.827,13.417 L41.827,13.389 L44.63,13.389 L47.262,26.063 L44.23,26.063 L43.829,24.174 L39.624,24.174 L38.937,26.063 L35.504,26.063 L40.425,14.333 Z M42.313,16.85 L40.568,21.6 L43.286,21.6 L42.313,16.85 Z" id="Shape"></path>
                </g>
                <g id="pci-dss-compliant" transform="translate(427.365000, 7.137000)">
                    <path d="M47.144,15.605 L47.817,15.809 C47.772,15.998 47.701,16.155 47.604,16.282 C47.507,16.41 47.386,16.506 47.241,16.57 C47.097,16.634 46.914,16.666 46.692,16.666 C46.421,16.666 46.2,16.627 46.028,16.55 C45.858,16.47 45.71,16.332 45.585,16.134 C45.461,15.936 45.399,15.682 45.399,15.373 C45.399,14.961 45.508,14.645 45.726,14.425 C45.946,14.203 46.256,14.092 46.656,14.092 C46.969,14.092 47.215,14.156 47.394,14.283 C47.574,14.41 47.708,14.605 47.795,14.866 L47.116,15.017 C47.093,14.94 47.068,14.885 47.042,14.851 C46.999,14.792 46.947,14.747 46.885,14.716 C46.822,14.685 46.753,14.669 46.676,14.669 C46.502,14.669 46.368,14.739 46.275,14.878 C46.205,14.983 46.17,15.147 46.17,15.37 C46.17,15.646 46.212,15.835 46.296,15.938 C46.381,16.04 46.499,16.091 46.65,16.091 C46.798,16.091 46.908,16.05 46.983,15.968 C47.059,15.886 47.114,15.767 47.148,15.61 L47.144,15.605 Z M48.092,15.379 C48.092,14.973 48.205,14.657 48.432,14.431 C48.657,14.205 48.972,14.092 49.376,14.092 C49.79,14.092 50.11,14.203 50.334,14.426 C50.558,14.648 50.671,14.959 50.671,15.36 C50.671,15.651 50.621,15.889 50.523,16.076 C50.426,16.261 50.285,16.406 50.1,16.511 C49.916,16.614 49.686,16.665 49.411,16.665 C49.131,16.665 48.899,16.621 48.715,16.532 C48.533,16.443 48.385,16.302 48.27,16.108 C48.156,15.914 48.099,15.672 48.099,15.381 L48.092,15.379 Z M48.86,15.383 C48.86,15.634 48.907,15.814 49,15.924 C49.093,16.034 49.22,16.089 49.38,16.089 C49.545,16.089 49.673,16.035 49.764,15.926 C49.853,15.818 49.898,15.625 49.898,15.348 C49.898,15.113 49.851,14.943 49.755,14.835 C49.661,14.726 49.533,14.672 49.371,14.672 C49.216,14.672 49.091,14.726 48.998,14.835 C48.904,14.943 48.856,15.125 48.856,15.38 L48.86,15.383 Z M51.078,14.134 L52.089,14.134 L52.479,15.648 L52.868,14.134 L53.876,14.134 L53.876,16.621 L53.248,16.621 L53.248,14.725 L52.762,16.621 L52.194,16.621 L51.71,14.725 L51.71,16.621 L51.079,16.621 L51.079,14.134 L51.078,14.134 Z M54.36,14.134 L55.638,14.134 C55.916,14.134 56.124,14.2 56.262,14.332 C56.402,14.465 56.471,14.653 56.471,14.897 C56.471,15.148 56.395,15.344 56.244,15.485 C56.093,15.626 55.863,15.696 55.554,15.696 L55.133,15.696 L55.133,16.62 L54.361,16.62 L54.361,14.131 L54.36,14.134 Z M55.133,15.194 L55.321,15.194 C55.469,15.194 55.573,15.169 55.633,15.118 C55.693,15.066 55.723,15 55.723,14.92 C55.723,14.842 55.697,14.775 55.645,14.721 C55.593,14.667 55.495,14.639 55.352,14.639 L55.132,14.639 L55.132,15.194 L55.133,15.194 Z M56.875,14.134 L57.642,14.134 L57.642,16.009 L58.841,16.009 L58.841,16.621 L56.873,16.621 L56.873,14.134 L56.875,14.134 Z M59.225,14.134 L59.994,14.134 L59.994,16.621 L59.223,16.621 L59.223,14.134 L59.225,14.134 Z M62.075,16.211 L61.198,16.211 L61.077,16.622 L60.291,16.622 L61.225,14.135 L62.063,14.135 L62.997,16.623 L62.194,16.623 L62.071,16.214 L62.075,16.211 Z M61.913,15.673 L61.636,14.779 L61.362,15.673 L61.909,15.673 L61.913,15.673 Z M63.25,14.134 L63.968,14.134 L64.904,15.51 L64.904,14.134 L65.629,14.134 L65.629,16.621 L64.904,16.621 L63.973,15.256 L63.973,16.622 L63.25,16.622 L63.25,14.134 L63.25,14.134 Z M65.966,14.134 L68.303,14.134 L68.303,14.748 L67.518,14.748 L67.518,16.621 L66.751,16.621 L66.751,14.749 L65.966,14.749 L65.966,14.134 L65.966,14.134 Z" id="Shape" fill="#6F7D88"></path>
                    <path d="M11.765,11.121 L10.821,11.121 L10.821,13.827 L10.824,13.826 L11.878,13.828 C11.878,13.828 13.071,13.774 13.247,12.674 C13.266,12.648 13.273,12.191 13.247,12.118 C13.14,11.183 11.765,11.121 11.765,11.121 Z" id="Path" fill="#6F7D88"></path>
                    <path d="M10.947,16.123 C10.913,16.122 10.887,16.147 10.887,16.179 L10.887,19.183 C10.887,19.215 10.86,19.242 10.828,19.242 L6.967,19.242 C6.934,19.242 6.908,19.215 6.908,19.182 L6.908,19.182 L6.908,8.927 C6.908,8.896 6.935,8.867 6.968,8.867 C6.968,8.867 11.944,8.869 11.97,8.867 C13.243,8.808 17.109,9.166 17.109,12.431 C17.109,16.569 10.947,16.123 10.947,16.123 Z M31.772,3.312 C33.109,3.312 34.195,4.335 34.195,5.596 C34.195,6.858 33.11,7.881 31.773,7.881 L31.772,7.882 C30.434,7.882 29.35,6.86 29.35,5.597 C29.35,4.335 30.434,3.312 31.772,3.312 Z M25.726,19.321 C25.605,19.321 24.461,19.365 23.878,19.321 C17.9,18.944 17.9,14.679 17.9,14.555 L17.9,13.543 C17.9,13.352 18.114,9.181 23.878,8.719 C24.26,8.665 25.641,8.672 25.726,8.719 C27.312,8.813 27.833,9.152 27.833,9.152 C27.862,9.168 27.885,9.208 27.885,9.241 L27.885,11.864 C27.885,11.896 27.862,11.91 27.834,11.893 L27.827,11.894 C27.827,11.894 26.901,11.323 25.747,11.167 L24.77,11.167 C22.155,11.389 21.976,13.484 21.976,13.484 C21.973,13.516 21.97,13.569 21.97,13.602 L21.97,14.347 C21.97,14.379 21.973,14.432 21.976,14.465 C21.976,14.465 22.104,16.419 24.771,16.868 C24.964,16.9 25.217,16.928 25.75,16.868 C27.631,16.686 28.059,16.341 28.059,16.341 C28.088,16.324 28.111,16.336 28.111,16.369 L28.111,16.802 C28.666,16.894 29.242,17.156 29.791,17.528 L29.791,8.873 L29.791,8.872 L33.755,8.872 L33.755,15.326 C35.152,13.313 36.635,11.263 37.13,10.581 L37.13,10.58 L32.765,0.853 L0.809,2.668 L9.662,26.83 L26.704,21.457 C26.225,20.767 25.88,20.019 25.754,19.321 C25.744,19.321 25.736,19.321 25.726,19.321 Z" id="Shape" fill="#6F7D88"></path>
                    <path d="M31.882,24.221 C32.204,24.221 32.451,24.221 32.858,24.04 C34.266,23.3 39.002,11.73 43.998,8.171 C44.027,8.148 44.068,8.115 44.092,8.081 C44.124,8.034 44.126,7.986 44.126,7.986 C44.126,7.986 44.126,7.749 43.385,7.749 C38.937,7.628 34.312,16.953 31.882,20.643 C31.851,20.684 31.684,20.643 31.684,20.643 C31.684,20.643 30.056,18.72 28.64,17.983 C28.611,17.968 28.449,17.919 28.282,17.931 C28.171,17.931 27.513,18.062 27.206,18.388 C26.844,18.77 26.851,18.985 26.855,19.45 C26.856,19.488 26.88,19.643 26.924,19.722 C27.271,20.327 28.852,22.5 30.146,23.699 C30.347,23.843 30.652,24.223 31.884,24.223 L31.882,24.221 Z" id="Path" fill="#6F7D88"></path>
                    <g id="Clipped" transform="translate(44.635000, 3.863000)">
                        <mask id="mask-6" fill="white">
                            <use xlink:href="#path-5"></use>
                        </mask>
                        <g id="Path"></g>
                        <path d="M0.676,0.8 L4.376,0.8 C5.106,0.8 5.695,0.899 6.142,1.097 C6.593,1.295 6.965,1.58 7.258,1.95 C7.552,2.32 7.764,2.75 7.896,3.242 C8.028,3.733 8.094,4.253 8.094,4.803 C8.094,5.664 7.995,6.333 7.797,6.81 C7.603,7.283 7.332,7.681 6.983,8.004 C6.635,8.323 6.261,8.535 5.861,8.641 C5.315,8.786 4.82,8.859 4.377,8.859 L0.676,8.859 L0.676,0.798 L0.676,0.8 Z M3.167,2.626 L3.167,7.032 L3.776,7.032 C4.297,7.032 4.667,6.976 4.887,6.862 C5.107,6.745 5.279,6.543 5.403,6.258 C5.527,5.968 5.589,5.501 5.589,4.856 C5.589,4.002 5.45,3.417 5.17,3.102 C4.892,2.787 4.43,2.63 3.784,2.63 L3.163,2.63 L3.167,2.626 Z M8.771,6.197 L11.14,6.048 C11.191,6.434 11.295,6.727 11.452,6.928 C11.708,7.255 12.075,7.418 12.552,7.418 C12.908,7.418 13.181,7.335 13.371,7.171 C13.564,7.002 13.661,6.808 13.661,6.587 C13.661,6.379 13.569,6.193 13.384,6.028 C13.2,5.863 12.775,5.708 12.109,5.562 C11.016,5.316 10.237,4.99 9.771,4.583 C9.301,4.177 9.066,3.658 9.066,3.027 C9.066,2.613 9.186,2.223 9.425,1.857 C9.666,1.487 10.027,1.198 10.507,0.989 C10.992,0.776 11.653,0.67 12.493,0.67 C13.521,0.67 14.305,0.863 14.844,1.248 C15.385,1.63 15.708,2.239 15.811,3.075 L13.463,3.213 C13.4,2.851 13.268,2.587 13.066,2.422 C12.867,2.257 12.591,2.174 12.24,2.174 C11.95,2.174 11.732,2.237 11.585,2.362 C11.437,2.484 11.363,2.632 11.363,2.807 C11.363,2.936 11.424,3.051 11.544,3.153 C11.661,3.26 11.94,3.36 12.38,3.452 C13.469,3.687 14.248,3.926 14.717,4.168 C15.19,4.407 15.533,4.705 15.745,5.061 C15.962,5.417 16.071,5.814 16.071,6.255 C16.071,6.772 15.928,7.249 15.641,7.686 C15.355,8.122 14.955,8.454 14.442,8.681 C13.931,8.903 13.285,9.014 12.504,9.014 C11.133,9.014 10.183,8.75 9.655,8.222 C9.126,7.695 8.827,7.024 8.758,6.21 L8.771,6.197 Z M16.717,6.197 L19.086,6.048 C19.137,6.434 19.241,6.727 19.398,6.928 C19.653,7.255 20.02,7.418 20.498,7.418 C20.853,7.418 21.126,7.335 21.316,7.171 C21.51,7.002 21.608,6.808 21.608,6.587 C21.608,6.379 21.516,6.193 21.332,6.028 C21.147,5.863 20.722,5.708 20.056,5.562 C18.963,5.316 18.184,4.99 17.718,4.583 C17.248,4.177 17.013,3.658 17.013,3.027 C17.013,2.613 17.132,2.223 17.37,1.857 C17.612,1.487 17.973,1.198 18.453,0.989 C18.936,0.776 19.598,0.67 20.438,0.67 C21.467,0.67 22.251,0.863 22.789,1.248 C23.332,1.63 23.654,2.239 23.756,3.075 L21.41,3.211 C21.346,2.849 21.214,2.585 21.012,2.42 C20.815,2.255 20.54,2.173 20.187,2.173 C19.897,2.173 19.679,2.235 19.532,2.36 C19.384,2.482 19.311,2.631 19.311,2.807 C19.311,2.936 19.371,3.051 19.491,3.153 C19.608,3.26 19.887,3.36 20.327,3.452 C21.416,3.686 22.196,3.924 22.665,4.167 C23.137,4.406 23.48,4.703 23.693,5.059 C23.91,5.415 24.017,5.813 24.017,6.253 C24.017,6.77 23.875,7.247 23.589,7.684 C23.303,8.121 22.903,8.453 22.389,8.68 C21.877,8.903 21.231,9.014 20.451,9.014 C19.08,9.014 18.131,8.75 17.602,8.221 C17.074,7.694 16.775,7.023 16.705,6.209 L16.717,6.197 Z" id="Shape" fill="#6F7D88" mask="url(#mask-6)"></path>
                    </g>
                    <mask id="mask-8" fill="white">
                        <use xlink:href="#path-7"></use>
                    </mask>
                    <g id="Path"></g>
                    <polygon id="Path" fill="#E3E3E3" mask="url(#mask-8)" points="0 27.682 41.011 27.682 41.011 3.69482223e-13 0 3.69482223e-13"></polygon>
                </g>
                <g id="mir-accept" transform="translate(321.000000, 0.000000)" fill-rule="nonzero">
                    <path d="M18.2406312,0 C24.0473373,0 29.8698225,0 35.6765286,0 C36.938856,0 38.2011834,0.157790927 39.4319527,0.441814596 C40.9467456,0.788954635 42.382643,1.34122288 43.7554241,2.08284024 C44.6074951,2.54043393 45.3964497,3.09270217 46.1538462,3.6765286 C46.6745562,4.08678501 47.1637081,4.52859961 47.6370809,5.00197239 C48.678501,6.0433925 49.5936884,7.21104536 50.3353057,8.50493097 C50.9980276,9.67258383 51.5502959,10.887574 51.913215,12.1814596 C52.1656805,13.0335306 52.3550296,13.9013807 52.4654832,14.800789 C52.5601578,15.6055227 52.6232742,16.4102564 52.6074951,17.2149901 C52.6074951,17.3727811 52.6390533,17.4201183 52.7968442,17.4043393 C56.2209073,17.4043393 59.6449704,17.3885602 63.0532544,17.4043393 C64.0473373,17.4043393 65.0414201,17.530572 66.0197239,17.704142 C69.0650888,18.2721893 71.7475345,19.5976331 74.0670611,21.6331361 C77.0808679,24.2840237 78.974359,27.581854 79.7159763,31.5424063 C79.8422091,32.2051282 79.9053254,32.8836292 79.9526627,33.5621302 C79.9842209,34.1143984 80,34.6508876 79.9842209,35.2031558 C79.9526627,36.0078895 79.8579882,36.8126233 79.7159763,37.617357 C79.7001972,37.7435897 79.65286,37.8067061 79.5108481,37.8067061 C69.1282051,37.8067061 58.729783,37.8224852 48.34714,37.790927 C44.1972387,37.7751479 40.3786982,36.5759369 36.8915187,34.3195266 C33.530572,32.1577909 30.974359,29.2544379 29.1913215,25.6883629 C28.3234714,23.9368836 27.6923077,22.1065089 27.3925049,20.1656805 C27.3609467,19.9921105 27.2978304,19.9447732 27.1242604,19.9447732 C25.183432,19.9447732 23.2426036,19.9447732 21.3175542,19.9605523 C20.8757396,19.9605523 20.4497041,19.9447732 20.0236686,19.913215 C19.3136095,19.8658777 18.5877712,19.7554241 17.877712,19.6449704 C16.3944773,19.408284 14.9585799,18.9980276 13.5700197,18.4457594 C12.3392505,17.9566075 11.1715976,17.357002 10.035503,16.6469428 C9.37278107,16.2209073 8.72583826,15.7790927 8.11045365,15.2899408 C7.66863905,14.9428008 7.24260355,14.5483235 6.81656805,14.1696252 C6.37475345,13.7593688 5.94871795,13.3333333 5.55424063,12.8757396 C4.68639053,11.913215 3.8974359,10.887574 3.21893491,9.78303748 C2.25641026,8.23668639 1.49901381,6.57988166 0.962524655,4.84418146 C0.694280079,3.97633136 0.504930966,3.09270217 0.378698225,2.19329389 C0.284023669,1.53057199 0.220907298,0.883629191 0.157790927,0.236686391 C0.142011834,0.0473372781 0.17357002,0 0.362919132,0 C6.32741617,0 12.2761341,0 18.2406312,0 Z M63.5266272,37.3333333 C68.7021696,37.3333333 73.8619329,37.3333333 79.0374753,37.3333333 C79.0848126,37.3333333 79.1321499,37.3333333 79.1637081,37.3333333 C79.2583826,37.3491124 79.2899408,37.3017751 79.3057199,37.2071006 C79.4003945,36.5128205 79.495069,35.8185404 79.5108481,35.1242604 C79.5424063,34.5246548 79.5108481,33.9092702 79.4635108,33.3096647 C79.4319527,32.8678501 79.3846154,32.4102564 79.321499,31.9684418 C79.2268245,31.2741617 79.0532544,30.5798817 78.8639053,29.9013807 C78.0749507,27.2504931 76.7179487,24.9309665 74.7928994,22.9428008 C72.8205128,20.9230769 70.5009862,19.4714004 67.8027613,18.6193294 C66.5877712,18.2248521 65.3254438,18.0039448 64.0631164,17.9092702 C63.495069,17.8619329 62.9270217,17.8619329 62.3589744,17.8619329 C59.2189349,17.8619329 56.0788955,17.8619329 52.9230769,17.8619329 C52.591716,17.8619329 52.591716,17.8619329 52.5443787,18.1775148 C52.5443787,18.2248521 52.5128205,18.2564103 52.5128205,18.3037475 C52.4970414,18.7928994 52.4023669,19.2662722 52.3550296,19.739645 C52.3392505,19.9289941 52.260355,19.9605523 52.086785,19.9605523 C44.0710059,19.9605523 36.0710059,19.9605523 28.0552268,19.9605523 C28.0078895,19.9605523 27.9605523,19.9605523 27.8974359,19.9605523 C27.8027613,19.9605523 27.7869822,19.9921105 27.8027613,20.086785 C28.0710059,21.5226824 28.4497041,22.9112426 29.0177515,24.2682446 C29.8698225,26.2721893 30.9901381,28.1183432 32.3944773,29.790927 C33.4358974,31.0216963 34.5877712,32.1104536 35.8816568,33.0887574 C37.0966469,34.0039448 38.4063116,34.7928994 39.7948718,35.4240631 C41.2149901,36.0710059 42.6824458,36.5601578 44.2130178,36.8915187 C45.5384615,37.1755424 46.8639053,37.3491124 48.2209073,37.3491124 C53.3333333,37.3491124 58.4299803,37.3333333 63.5266272,37.3333333 Z M17.8619329,9.9566075 C17.8619329,10.9980276 17.8619329,12.0394477 17.8619329,13.0808679 C17.8619329,13.2228797 17.8934911,13.270217 18.035503,13.270217 C18.6193294,13.2544379 19.2031558,13.2544379 19.8027613,13.270217 C19.9447732,13.270217 19.9763314,13.2386588 19.9763314,13.0966469 C19.9763314,11.9289941 19.9763314,10.7771203 19.9763314,9.60946746 C19.9763314,9.56213018 19.9763314,9.5147929 19.9763314,9.48323471 C19.9763314,9.45167653 19.9763314,9.40433925 20.0236686,9.40433925 C20.0710059,9.40433925 20.1183432,9.38856016 20.1183432,9.45167653 C20.1183432,9.48323471 20.1341223,9.5147929 20.1499014,9.56213018 C20.5128205,10.7613412 20.8915187,11.9605523 21.2544379,13.1439842 C21.2859961,13.2386588 21.3333333,13.270217 21.4280079,13.270217 C21.7435897,13.270217 22.0433925,13.270217 22.3589744,13.270217 C22.5009862,13.270217 22.6745562,13.3017751 22.7850099,13.2544379 C22.8796844,13.2071006 22.8639053,13.0177515 22.9112426,12.8915187 C22.9270217,12.8284024 22.9585799,12.7810651 22.974359,12.7179487 C23.0848126,12.2761341 23.2268245,11.8500986 23.3688363,11.4240631 C23.5581854,10.8086785 23.7475345,10.1932939 23.9526627,9.57790927 C23.9842209,9.49901381 23.9526627,9.38856016 24.0946746,9.40433925 C24.2209073,9.43589744 24.1577909,9.54635108 24.1577909,9.60946746 C24.1577909,10.7771203 24.1577909,11.9289941 24.1577909,13.0966469 C24.1577909,13.2228797 24.17357,13.2859961 24.3313609,13.2859961 C24.9309665,13.270217 25.5147929,13.2859961 26.1143984,13.2859961 C26.2248521,13.2859961 26.2721893,13.270217 26.2721893,13.1282051 C26.2721893,11.0453649 26.2721893,8.94674556 26.2721893,6.86390533 C26.2721893,6.73767258 26.2406312,6.7061144 26.1143984,6.7061144 C25.4516765,6.7061144 24.8047337,6.7061144 24.1420118,6.7061144 C23.6055227,6.72189349 23.2268245,6.99013807 23.0374753,7.49506903 C22.9112426,7.84220907 22.816568,8.2209073 22.7218935,8.58382643 C22.5325444,9.21499014 22.3589744,9.84615385 22.1696252,10.4930966 C22.1538462,10.5404339 22.1696252,10.6035503 22.0749507,10.6035503 C21.9960552,10.6035503 21.9802761,10.5404339 21.9802761,10.4930966 C21.9171598,10.3037475 21.8698225,10.1143984 21.8224852,9.92504931 C21.617357,9.23076923 21.4122288,8.52071006 21.2228797,7.82642998 C21.0335306,7.10059172 20.6390533,6.7061144 19.8343195,6.72189349 C19.2820513,6.73767258 18.729783,6.72189349 18.1617357,6.72189349 C17.877712,6.72189349 17.9092702,6.69033531 17.9092702,6.97435897 C17.8619329,7.93688363 17.8619329,8.94674556 17.8619329,9.9566075 Z M36.7021696,9.81459566 C34.5088757,9.81459566 32.34714,9.81459566 30.1854043,9.81459566 C30.0433925,9.81459566 30.0749507,9.89349112 30.0749507,9.97238659 C30.0749507,11.0138067 30.0749507,12.0710059 30.0749507,13.112426 C30.0749507,13.2228797 30.0907298,13.270217 30.2327416,13.270217 C30.8323471,13.270217 31.4319527,13.270217 32.0315582,13.270217 C32.1577909,13.270217 32.2051282,13.2386588 32.2051282,13.112426 C32.2051282,12.5759369 32.2051282,12.0236686 32.2051282,11.4871795 C32.2051282,11.3767258 32.2209073,11.3293886 32.34714,11.3293886 C32.5522682,11.3451677 32.7573964,11.3293886 32.9467456,11.3293886 C33.0414201,11.3293886 33.0887574,11.3609467 33.1360947,11.4398422 C33.4674556,11.9763314 33.8145957,12.5128205 34.1301775,13.0650888 C34.209073,13.2071006 34.3037475,13.270217 34.4773176,13.270217 C35.061144,13.2544379 35.6449704,13.270217 36.2445759,13.270217 C36.3708087,13.270217 36.4970414,13.270217 36.6548323,13.270217 C36.4812623,13.0019724 36.3234714,12.765286 36.1656805,12.5443787 C35.8816568,12.1183432 35.5976331,11.6923077 35.3136095,11.2662722 C35.2978304,11.234714 35.2031558,11.1873767 35.3293886,11.1400394 C35.5976331,11.0138067 35.8658777,10.8717949 36.1025641,10.6666667 C36.3550296,10.4299803 36.5443787,10.1459566 36.7021696,9.81459566 Z M32.4733728,6.69033531 C31.9053254,6.69033531 31.4792899,6.69033531 31.0690335,6.69033531 C30.7218935,6.69033531 30.3905325,6.69033531 30.0433925,6.69033531 C29.9802761,6.69033531 29.8856016,6.69033531 29.9171598,6.78500986 C29.9487179,6.87968442 29.9329389,6.99013807 29.964497,7.08481262 C30.122288,7.79487179 30.4852071,8.37869822 31.0690335,8.82051282 C31.5424063,9.18343195 32.0946746,9.40433925 32.6942801,9.42011834 C33.9881657,9.45167653 35.2820513,9.42011834 36.5759369,9.42011834 C36.7495069,9.42011834 36.7810651,9.35700197 36.7810651,9.21499014 C36.7810651,9.00986193 36.7810651,8.80473373 36.7495069,8.59960552 C36.5759369,7.5739645 35.7554241,6.80078895 34.729783,6.7061144 C33.9250493,6.62721893 33.1203156,6.7061144 32.4733728,6.69033531 Z M27.1242604,9.97238659 C27.1242604,11.0138067 27.1242604,12.0710059 27.1242604,13.112426 C27.1242604,13.2071006 27.1242604,13.270217 27.2662722,13.270217 C27.8816568,13.270217 28.4970414,13.270217 29.0966469,13.270217 C29.2071006,13.270217 29.2386588,13.2228797 29.2386588,13.1282051 C29.2386588,11.0295858 29.2386588,8.94674556 29.2386588,6.84812623 C29.2386588,6.72189349 29.1913215,6.69033531 29.0808679,6.69033531 C28.4970414,6.69033531 27.913215,6.69033531 27.3293886,6.69033531 C27.1873767,6.69033531 27.1400394,6.72189349 27.1400394,6.87968442 C27.1242604,7.90532544 27.1242604,8.93096647 27.1242604,9.97238659 Z" id="Shape" fill="#6F7D88"></path>
                    <path d="M62.6745562,27.1873767 C62.9428008,26.8086785 63.2110454,26.5246548 63.5581854,26.3195266 C64.4418146,25.8145957 65.6252465,26.0197239 66.3195266,26.7928994 C67.2504931,27.8343195 67.1400394,29.5700197 66.0828402,30.469428 C65.1360947,31.2741617 63.7475345,31.1794872 62.9428008,30.2327416 C62.8639053,30.1380671 62.7850099,30.0591716 62.7061144,29.9487179 C62.6745562,30.0118343 62.6903353,30.0591716 62.6903353,30.122288 C62.6903353,30.816568 62.6903353,31.5266272 62.6903353,32.2209073 C62.6903353,32.3629191 62.642998,32.4102564 62.5167653,32.3944773 C62.1854043,32.3786982 62.2327416,32.4260355 62.2327416,32.17357 C62.2327416,30.2327416 62.2327416,28.2919132 62.2327416,26.3510848 C62.2327416,26.2879684 62.1854043,26.1775148 62.2800789,26.1459566 C62.4063116,26.1143984 62.5483235,26.1143984 62.6745562,26.1459566 C62.7376726,26.1617357 62.7061144,26.2406312 62.7061144,26.2879684 C62.6745562,26.5877712 62.6745562,26.8560158 62.6745562,27.1873767 Z M66.4299803,28.4812623 C66.4457594,28.4023669 66.4142012,28.2445759 66.382643,28.086785 C66.1932939,27.0138067 65.199211,26.3037475 64.1893491,26.5404339 C62.6114398,26.9033531 62.1696252,28.8284024 63.147929,29.9171598 C63.9053254,30.7692308 65.183432,30.800789 65.9250493,29.9960552 C66.3037475,29.5857988 66.4299803,29.0808679 66.4299803,28.4812623 Z" id="Shape" fill="#6F7D88"></path>
                    <path d="M47.82643,30.9112426 C47.3057199,30.9428008 47.3057199,30.9428008 47.1005917,30.5009862 C46.9112426,30.0749507 46.7218935,29.6646943 46.5325444,29.2386588 C46.4852071,29.1282051 46.4378698,29.0966469 46.3116371,29.0966469 C45.1282051,29.0966469 43.9447732,29.0966469 42.7771203,29.0966469 C42.6666667,29.0966469 42.6193294,29.1282051 42.5719921,29.2386588 C42.3668639,29.7120316 42.1301775,30.1854043 41.9408284,30.6745562 C41.8619329,30.8796844 41.7514793,30.9585799 41.530572,30.9428008 C41.3096647,30.9270217 41.3096647,30.9428008 41.3885602,30.7376726 C42.3510848,28.6706114 43.2978304,26.6035503 44.2445759,24.5364892 C44.3234714,24.3786982 44.418146,24.3629191 44.5601578,24.3786982 C44.6863905,24.3944773 44.8126233,24.34714 44.8915187,24.5364892 C45.8382643,26.6193294 46.816568,28.7021696 47.7790927,30.7850099 C47.7790927,30.800789 47.7948718,30.8481262 47.82643,30.9112426 Z M44.5601578,24.9151874 C44.5285996,24.9625247 44.5128205,24.9783037 44.5128205,24.9940828 C43.9763314,26.1617357 43.4556213,27.3293886 42.9033531,28.4970414 C42.8402367,28.6390533 42.9033531,28.6390533 43.0138067,28.6390533 C43.6449704,28.6390533 44.2919132,28.6390533 44.9230769,28.6390533 C45.3648915,28.6390533 45.790927,28.6390533 46.2485207,28.6390533 C45.6804734,27.3925049 45.1282051,26.1617357 44.5601578,24.9151874 Z" id="Shape" fill="#6F7D88"></path>
                    <path d="M59.5029586,28.7337278 C58.9033531,28.7337278 58.2879684,28.7337278 57.6883629,28.7337278 C57.5463511,28.7337278 57.5147929,28.765286 57.5463511,28.9072978 C57.6883629,29.7751479 58.209073,30.3905325 58.9980276,30.5483235 C59.7238659,30.6903353 60.3708087,30.4852071 60.9072978,29.964497 C60.938856,29.9329389 60.9704142,29.8224852 61.0493097,29.8856016 C61.1439842,29.964497 61.2386588,30.0591716 61.3175542,30.1380671 C61.3175542,30.1380671 61.2859961,30.1854043 61.270217,30.2169625 C60.2287968,31.4319527 58.2248521,31.2899408 57.4043393,29.9329389 C56.8362919,29.0019724 56.9309665,27.6923077 57.6094675,26.8560158 C58.1775148,26.1617357 58.9349112,25.9250493 59.8027613,26.1143984 C60.6863905,26.3037475 61.1597633,26.9349112 61.3806706,27.7712032 C61.4595661,28.0394477 61.4753452,28.3234714 61.4753452,28.591716 C61.4753452,28.7179487 61.443787,28.7337278 61.3175542,28.7337278 C60.7179487,28.7337278 60.1183432,28.7337278 59.5029586,28.7337278 Z M59.234714,28.3076923 C59.6607495,28.3076923 60.086785,28.3076923 60.5285996,28.3076923 C61.0335306,28.3076923 61.0335306,28.3076923 60.9072978,27.8185404 C60.6232742,26.7140039 59.566075,26.1617357 58.5877712,26.6351085 C57.9723866,26.9349112 57.6725838,27.4871795 57.5621302,28.1499014 C57.5463511,28.2761341 57.5621302,28.3076923 57.704142,28.3076923 C58.1932939,28.3076923 58.7140039,28.3076923 59.234714,28.3076923 Z" id="Shape" fill="#6F7D88"></path>
                    <path d="M54.9112426,26.0512821 C55.6370809,26.035503 56.2209073,26.3353057 56.7258383,26.8402367 C56.8047337,26.9191321 56.7731755,26.9506903 56.7100592,27.0138067 C56.4733728,27.2662722 56.4733728,27.2662722 56.2209073,27.0295858 C55.5266272,26.4142012 54.7218935,26.3037475 53.964497,26.7140039 C53.2544379,27.1084813 52.8284024,28.0078895 52.9704142,28.8441815 C53.1597633,29.9802761 54.0749507,30.6903353 55.1637081,30.5641026 C55.65286,30.5009862 56.0473373,30.2485207 56.3786982,29.9013807 C56.4575937,29.8067061 56.5207101,29.790927 56.5996055,29.8856016 C56.6311637,29.9171598 56.678501,29.964497 56.7100592,29.9802761 C56.7889546,30.0433925 56.8047337,30.0907298 56.7258383,30.1696252 C56.0315582,30.9112426 55.1794872,31.1952663 54.2011834,30.9112426 C53.2228797,30.6272189 52.6390533,29.9487179 52.4812623,28.9546351 C52.2287968,27.2820513 53.5700197,26.0039448 54.9112426,26.0512821 Z" id="Path" fill="#6F7D88"></path>
                    <path d="M50.4299803,31.0216963 C48.9467456,31.0216963 47.8106509,29.790927 47.9368836,28.3550296 C48.0473373,27.1715976 48.8205128,26.2721893 49.9408284,26.0670611 C50.8244576,25.9092702 51.566075,26.1932939 52.1972387,26.8244576 C52.260355,26.887574 52.260355,26.9191321 52.1972387,26.9980276 C51.9605523,27.2504931 51.9605523,27.2662722 51.6923077,27.0295858 C50.9191321,26.3510848 50.0039448,26.2879684 49.2307692,26.8402367 C48.504931,27.3767258 48.2209073,28.433925 48.5838264,29.3333333 C48.9309665,30.1854043 49.7514793,30.6745562 50.6508876,30.5483235 C51.1242604,30.4852071 51.5187377,30.2485207 51.8500986,29.9013807 C51.9605523,29.790927 52.0078895,29.7751479 52.1341223,29.8856016 C52.3550296,30.1065089 52.3234714,30.0433925 52.1341223,30.2327416 C51.6449704,30.7692308 51.061144,31.0374753 50.4299803,31.0216963 Z" id="Path" fill="#6F7D88"></path>
                    <path d="M68.2445759,28.1972387 C68.2445759,28.6390533 68.2445759,29.0966469 68.2445759,29.5384615 C68.2445759,29.6646943 68.260355,29.8067061 68.2761341,29.9329389 C68.3550296,30.295858 68.6390533,30.5167653 69.0808679,30.5483235 C69.3175542,30.5641026 69.5542406,30.5167653 69.7593688,30.4378698 C69.8540434,30.3905325 69.8856016,30.4063116 69.8856016,30.5167653 C69.8856016,30.8323471 69.8856016,30.8481262 69.5700197,30.9270217 C69.3017751,30.9901381 69.0177515,31.0059172 68.7495069,30.9428008 C68.1183432,30.816568 67.7712032,30.3747535 67.7712032,29.6962525 C67.7712032,28.7337278 67.7712032,27.7712032 67.7712032,26.7928994 C67.7712032,26.6035503 67.7238659,26.5404339 67.5345168,26.5719921 C67.4714004,26.5877712 67.4240631,26.5719921 67.3609467,26.5719921 C67.061144,26.5719921 67.0138067,26.5088757 67.0769231,26.209073 C67.0927022,26.1301775 67.1242604,26.1301775 67.1873767,26.1301775 C67.3136095,26.1301775 67.4240631,26.1143984 67.5502959,26.1301775 C67.7238659,26.1459566 67.7869822,26.0986193 67.7869822,25.9092702 C67.7712032,25.530572 67.7869822,25.1518738 67.7712032,24.7731755 C67.7712032,24.6311637 67.8027613,24.5838264 67.9447732,24.6153846 C67.9921105,24.6153846 68.0394477,24.6153846 68.1025641,24.6153846 C68.2287968,24.5996055 68.2445759,24.6469428 68.2445759,24.7573964 C68.2445759,25.1518738 68.2445759,25.5463511 68.2445759,25.9566075 C68.2445759,26.0986193 68.2919132,26.1301775 68.433925,26.1301775 C68.8757396,26.1143984 69.3175542,26.1301775 69.7593688,26.1301775 C69.9013807,26.1301775 69.9329389,26.1775148 69.9329389,26.3037475 C69.9329389,26.5719921 69.9329389,26.5719921 69.6646943,26.5719921 C69.2544379,26.5719921 68.8284024,26.5719921 68.418146,26.5719921 C68.2919132,26.5719921 68.260355,26.6193294 68.260355,26.729783 C68.260355,27.234714 68.2445759,27.7238659 68.2445759,28.1972387 Z" id="Path" fill="#6F7D88"></path>
                    <path d="M66.4299803,28.4812623 C66.4299803,29.0966469 66.3037475,29.5857988 65.9250493,29.9960552 C65.183432,30.800789 63.9053254,30.7692308 63.147929,29.9171598 C62.1696252,28.8284024 62.6114398,26.9033531 64.1893491,26.5404339 C65.199211,26.3037475 66.1932939,27.0138067 66.382643,28.086785 C66.4142012,28.2287968 66.4457594,28.3865878 66.4299803,28.4812623 Z" id="Path" fill="#FEFEFE"></path>
                    <path d="M44.5601578,24.9151874 C45.1282051,26.1617357 45.6804734,27.3925049 46.2485207,28.6548323 C45.790927,28.6548323 45.3491124,28.6548323 44.9230769,28.6548323 C44.2919132,28.6548323 43.6449704,28.6548323 43.0138067,28.6548323 C42.9033531,28.6548323 42.8402367,28.6548323 42.9033531,28.5128205 C43.4398422,27.3451677 43.9763314,26.1775148 44.5128205,25.0098619 C44.5128205,24.9783037 44.5285996,24.9467456 44.5601578,24.9151874 Z" id="Path" fill="#FEFEFE"></path>
                    <path d="M59.234714,28.3076923 C58.7140039,28.3076923 58.1932939,28.3076923 57.6883629,28.3076923 C57.5621302,28.3076923 57.530572,28.2761341 57.5463511,28.1499014 C57.6568047,27.4871795 57.9566075,26.9349112 58.5719921,26.6351085 C59.5502959,26.1617357 60.6074951,26.6982249 60.8915187,27.8185404 C61.0177515,28.3076923 61.0177515,28.3076923 60.5128205,28.3076923 C60.086785,28.3076923 59.6607495,28.3076923 59.234714,28.3076923 Z" id="Path" fill="#FEFEFE"></path>
                </g>
                <g id="secured-by-cp" transform="translate(142.000000, 56.000000)">
                    <g>
                        <g id="Clipped" transform="translate(114.461000, 6.736300)">
                            <mask id="mask-10" fill="white">
                                <use xlink:href="#path-9"></use>
                            </mask>
                            <g id="Path"></g>
                            <path d="M8.567,5.354 C8.567,3.565 7.408,2.3029 5.772,2.3029 C4.136,2.3029 2.891,3.565 2.891,5.354 C2.891,7.1601 4.136,8.4051 5.772,8.4051 C7.391,8.4051 8.567,7.1601 8.567,5.354 Z M10.51,5.354 C10.51,8.2173 8.686,10.246 6.181,10.246 C4.715,10.246 3.591,9.5296 2.908,8.4739 L2.908,14.3025 L0.982,14.3025 L0.982,0.6677 L2.908,0.6677 L2.908,2.2689 C3.591,1.1955 4.715,0.4629 6.197,0.4629 C8.652,0.4629 10.51,2.4907 10.51,5.354 Z" id="Shape" fill="#6F7D88" mask="url(#mask-10)"></path>
                        </g>
                        <path d="M133.798,12.0903 C133.798,10.3013 132.554,9.0392 130.918,9.0392 C129.282,9.0392 128.123,10.3013 128.123,12.0903 C128.123,13.8964 129.299,15.1414 130.918,15.1414 C132.554,15.1414 133.798,13.8964 133.798,12.0903 Z M135.707,7.404 L135.707,16.7775 L133.781,16.7775 L133.781,15.2102 C133.1,16.2837 131.974,16.9823 130.509,16.9823 C128.004,16.9823 126.18,14.9536 126.18,12.0903 C126.18,9.227 128.038,7.1992 130.492,7.1992 C131.974,7.1992 133.1,7.9318 133.781,9.0052 L133.781,7.404 L135.707,7.404 Z" id="Shape" fill="#6F7D88"></path>
                        <g id="Clipped" transform="translate(136.461000, 6.736300)">
                            <mask id="mask-12" fill="white">
                                <use xlink:href="#path-11"></use>
                            </mask>
                            <g id="Path"></g>
                            <polygon id="Path" fill="#6F7D88" mask="url(#mask-12)" points="9.847 0.667 3.643 14.3018 1.581 14.3018 4.052 8.8472 0.354 0.667 2.415 0.667 5.075 6.7684 7.784 0.667"></polygon>
                        </g>
                        <path d="M161.495,10.7611 L161.495,16.7775 L159.569,16.7775 L159.569,11.1699 C159.569,9.7719 159.007,9.0392 157.711,9.0392 C156.195,9.0392 155.41,10.2155 155.41,11.9203 L155.427,16.7775 L153.484,16.7775 L153.484,11.1699 C153.484,9.7719 152.922,9.0392 151.627,9.0392 C150.11,9.0392 149.343,10.2155 149.343,11.9203 L149.343,16.7775 L147.416,16.7775 L147.416,7.404 L149.343,7.404 L149.343,8.9032 C149.99,7.829 150.911,7.1992 152.257,7.1992 C153.688,7.1992 154.695,7.8978 155.154,9.159 C155.785,7.948 156.842,7.1992 158.324,7.1992 C160.301,7.1992 161.495,8.5276 161.495,10.7611 Z" id="Path" fill="#6F7D88"></path>
                        <path d="M164.988,11.0509 L170.441,11.0509 C170.152,9.7727 169.181,8.87 167.767,8.87 C166.301,8.87 165.312,9.7897 164.988,11.0509 Z M172.504,12.619 L164.886,12.619 C165.039,14.34 166.25,15.2952 167.817,15.2952 C168.942,15.2952 169.88,14.8176 170.322,13.8972 L172.317,13.8972 C171.584,15.993 169.794,16.9823 167.801,16.9823 C164.954,16.9823 162.926,14.9374 162.926,12.1081 C162.926,9.2789 164.938,7.1992 167.767,7.1992 C170.783,7.1992 172.692,9.5339 172.504,12.619 Z" id="Shape" fill="#6F7D88"></path>
                        <path d="M182.388,10.8631 L182.388,16.7775 L180.462,16.7775 L180.462,11.2549 C180.462,9.8059 179.832,9.0392 178.417,9.0392 C176.764,9.0392 175.877,10.1127 175.877,11.9203 L175.877,16.7775 L173.951,16.7775 L173.951,7.404 L175.877,7.404 L175.877,8.955 C176.542,7.863 177.548,7.1992 179.013,7.1992 C181.127,7.1992 182.388,8.5794 182.388,10.8631 Z" id="Path" fill="#6F7D88"></path>
                        <path d="M191.116,16.3006 C190.605,16.6066 189.514,16.9822 188.439,16.9822 C186.514,16.9822 185.014,15.772 185.014,13.1807 L185.014,9.21 L183.275,9.21 L183.275,7.4039 L185.014,7.4039 L185.014,5.2725 L186.94,4.8467 L186.94,7.4039 L190.793,7.4039 L190.793,9.21 L186.94,9.21 L186.94,13.0795 C186.94,14.4419 187.571,15.1924 188.781,15.1924 C189.378,15.1924 190.042,14.9884 190.775,14.7326 L191.116,16.3006 Z" id="Path" fill="#6F7D88"></path>
                        <path d="M191.779,13.7604 L193.739,13.7604 C194.029,14.7998 194.796,15.2774 196.416,15.2774 C197.66,15.2774 198.426,14.9026 198.426,14.204 C198.426,13.4196 197.54,13.3006 195.973,12.9258 C193.347,12.2781 192.239,11.7495 192.239,10.1815 C192.239,8.2888 193.841,7.1992 196.194,7.1992 C198.597,7.1992 199.943,8.3406 200.284,10.0447 L198.341,10.0447 C198.069,9.278 197.353,8.9032 196.16,8.9032 C194.915,8.9032 194.183,9.3282 194.183,9.9767 C194.183,10.5725 194.762,10.7271 196.399,11.1181 C198.938,11.7155 200.403,12.1583 200.403,13.9814 C200.403,15.993 198.597,16.9815 196.382,16.9815 C193.91,16.9815 192.137,15.789 191.779,13.7604 Z" id="Path" fill="#6F7D88"></path>
                        <path d="M67.461,12.2792 C67.461,9.5211 69.508,7.4228 72.317,7.4228 C74.585,7.4228 76.598,8.7933 76.953,11.162 L74.466,11.162 C74.178,10.1469 73.298,9.6563 72.317,9.6563 C70.846,9.6563 69.898,10.7394 69.914,12.2792 C69.898,13.8359 70.88,14.9012 72.301,14.9012 C73.298,14.9012 74.178,14.3936 74.466,13.3785 L76.953,13.3785 C76.581,15.833 74.534,17.1355 72.301,17.1355 C69.508,17.1355 67.461,15.0372 67.461,12.2792 Z" id="Path" fill="#6F7D88"></path>
                        <polygon id="Path" fill="#6F7D88" points="78.086 16.9318 80.506 16.9318 80.506 4.7363 78.086 4.7363"></polygon>
                        <path d="M84.228,12.2792 C84.228,13.8189 85.277,14.834 86.631,14.834 C87.985,14.834 89.034,13.8189 89.034,12.2792 C89.034,10.7564 87.985,9.7243 86.631,9.7243 C85.277,9.7243 84.228,10.7564 84.228,12.2792 Z M91.487,12.2792 C91.487,15.0882 89.354,17.1355 86.631,17.1355 C83.923,17.1355 81.791,15.0704 81.791,12.2792 C81.791,9.4701 83.957,7.4228 86.631,7.4228 C89.321,7.4228 91.487,9.4701 91.487,12.2792 Z" id="Shape" fill="#6F7D88"></path>
                        <path d="M101.284,7.6259 L101.284,16.9322 L98.865,16.9322 L98.865,15.6459 C98.188,16.5939 97.274,17.1354 95.989,17.1354 C93.941,17.1354 92.672,15.7309 92.672,13.4634 L92.672,7.6259 L95.092,7.6259 L95.092,12.9389 C95.092,14.1572 95.548,14.8339 96.801,14.8339 C98.137,14.8339 98.865,14.039 98.865,12.5163 L98.865,7.6259 L101.284,7.6259 Z" id="Path" fill="#6F7D88"></path>
                        <path d="M109.862,12.2786 C109.862,10.7559 108.83,9.7238 107.476,9.7238 C106.122,9.7238 105.123,10.7559 105.123,12.2786 C105.123,13.8183 106.139,14.8335 107.476,14.8335 C108.83,14.8335 109.862,13.8183 109.862,12.2786 Z M112.281,4.7363 L112.281,16.9318 L109.862,16.9318 L109.862,15.6794 C109.219,16.5594 108.238,17.135 106.934,17.135 C104.515,17.135 102.688,15.1379 102.688,12.2786 C102.688,9.4016 104.532,7.4223 106.917,7.4223 C108.238,7.4223 109.219,8.0319 109.862,8.928 L109.862,4.7363 L112.281,4.7363 Z" id="Shape" fill="#6F7D88"></path>
                        <path d="M1.42108547e-14,5.9765 L1.072,5.8828 C1.123,6.3125 1.24,6.666 1.424,6.9433 C1.611,7.2168 1.9,7.4394 2.291,7.6113 C2.682,7.7793 3.121,7.8633 3.609,7.8633 C4.043,7.8633 4.426,7.7988 4.758,7.6699 C5.09,7.541 5.336,7.3652 5.496,7.1425 C5.66,6.916 5.742,6.6699 5.742,6.4043 C5.742,6.1347 5.664,5.9004 5.508,5.7011 C5.352,5.498 5.094,5.3281 4.734,5.1914 C4.504,5.1015 3.994,4.9629 3.205,4.7754 C2.416,4.584 1.863,4.4043 1.547,4.2363 C1.137,4.0215 0.83,3.7558 0.627,3.4394 C0.428,3.1191 0.328,2.7617 0.328,2.3672 C0.328,1.9336 0.451,1.5293 0.697,1.1543 C0.943,0.7754 1.303,0.4883 1.775,0.2929 C2.248,0.0976 2.773,4.61852778e-13 3.352,4.61852778e-13 C3.988,4.61852778e-13 4.549,0.1035 5.033,0.3105 C5.522,0.5136 5.897,0.8144 6.158,1.2129 C6.42,1.6113 6.561,2.0625 6.58,2.5664 L5.49,2.6484 C5.432,2.1054 5.232,1.6953 4.893,1.4179 C4.557,1.1406 4.059,1.0019 3.399,1.0019 C2.711,1.0019
                        2.209,1.1289 1.893,1.3828 C1.58,1.6328 1.424,1.9355 1.424,2.291 C1.424,2.5996 1.535,2.8535 1.758,3.0527 C1.977,3.2519 2.547,3.457 3.469,3.6679 C4.395,3.875 5.029,4.0566 5.373,4.2129 C5.873,4.4433 6.242,4.7363 6.481,5.0918 C6.719,5.4433 6.838,5.8496 6.838,6.3105 C6.838,6.7675 6.707,7.1992 6.445,7.6054 C6.184,8.0078 5.807,8.3222 5.315,8.5488 C4.826,8.7715 4.275,8.8828 3.662,8.8828 C2.885,8.8828 2.232,8.7695 1.705,8.5429 C1.182,8.3164 0.77,7.9765 0.469,7.5234 C0.172,7.0664 0.016,6.5508 1.42108547e-14,5.9765 Z M12.516,6.7324 L13.606,6.8672 C13.434,7.5039 13.115,7.998 12.65,8.3496 C12.186,8.7011 11.592,8.8769 10.869,8.8769 C9.959,8.8769 9.236,8.5976 8.701,8.039 C8.17,7.4765 7.904,6.6894 7.904,5.6777 C7.904,4.6308 8.174,3.8183 8.713,3.2402 C9.252,2.6621 9.951,2.373 10.811,2.373 C11.643,2.373 12.322,2.6562 12.85,3.2226 C13.377,3.789 13.641,4.5859 13.641,5.6133 C13.641,5.6758 13.639,5.7695 13.635,5.8945 L8.994,5.8945 C9.033,6.5781 9.227,7.1015 9.574,7.4648 C9.922,7.8281 10.356,8.0097 10.875,8.0097 C11.262,8.0097
                        11.592,7.9082 11.865,7.7051 C12.139,7.5019 12.356,7.1777 12.516,6.7324 Z M9.053,5.0273 L12.527,5.0273 C12.481,4.5039 12.348,4.1113 12.129,3.8496 C11.793,3.4433 11.357,3.2402 10.822,3.2402 C10.338,3.2402 9.93,3.4023 9.598,3.7265 C9.27,4.0508 9.088,4.4843 9.053,5.0273 Z M18.996,6.457 L20.033,6.5918 C19.92,7.3066 19.629,7.8672 19.16,8.2734 C18.695,8.6758 18.123,8.8769 17.443,8.8769 C16.592,8.8769 15.906,8.5996 15.387,8.0449 C14.871,7.4863 14.613,6.6875 14.613,5.6484 C14.613,4.9765 14.725,4.3886 14.947,3.8847 C15.17,3.3808 15.508,3.0039 15.961,2.7539 C16.418,2.5 16.914,2.373 17.449,2.373 C18.125,2.373 18.678,2.5449 19.107,2.8886 C19.537,3.2285 19.813,3.7129 19.934,4.3418 L18.908,4.5 C18.811,4.082 18.637,3.7675 18.387,3.5566 C18.141,3.3457 17.842,3.2402 17.49,3.2402 C16.959,3.2402 16.527,3.4316 16.195,3.8144 C15.863,4.1933 15.697,4.7949 15.697,5.6191 C15.697,6.4551 15.857,7.0625 16.178,7.4414 C16.498,7.8203 16.916,8.0097 17.432,8.0097 C17.846,8.0097 18.191,7.8828 18.469,7.6289 C18.746,7.375 18.922,6.9843
                        18.996,6.457 Z M25.014,8.7363 L25.014,7.8222 C24.529,8.5254 23.871,8.8769 23.039,8.8769 C22.672,8.8769 22.328,8.8066 22.008,8.666 C21.691,8.5254 21.455,8.3496 21.299,8.1386 C21.147,7.9238 21.039,7.6621 20.977,7.3535 C20.934,7.1465 20.912,6.8183 20.912,6.3691 L20.912,2.5136 L21.967,2.5136 L21.967,5.9648 C21.967,6.5156 21.988,6.8867 22.031,7.0781 C22.098,7.3554 22.238,7.5742 22.453,7.7343 C22.668,7.8906 22.934,7.9687 23.25,7.9687 C23.566,7.9687 23.863,7.8886 24.141,7.7285 C24.418,7.5644 24.613,7.3437 24.727,7.0664 C24.844,6.7851 24.902,6.3789 24.902,5.8476 L24.902,2.5136 L25.957,2.5136 L25.957,8.7363 L25.014,8.7363 Z M27.604,8.7363 L27.604,2.5136 L28.553,2.5136 L28.553,3.457 C28.795,3.0156 29.018,2.7246 29.221,2.584 C29.428,2.4433 29.654,2.373 29.9,2.373 C30.256,2.373 30.617,2.4863 30.984,2.7129 L30.621,3.6914 C30.363,3.539 30.106,3.4629 29.848,3.4629 C29.617,3.4629 29.41,3.5332 29.227,3.6738 C29.043,3.8105 28.912,4.0019 28.834,4.248 C28.717,4.623 28.658,5.0332 28.658,5.4785 L28.658,8.7363 L27.604,8.7363
                        Z M35.871,6.7324 L36.961,6.8672 C36.789,7.5039 36.471,7.998 36.006,8.3496 C35.541,8.7011 34.947,8.8769 34.225,8.8769 C33.315,8.8769 32.592,8.5976 32.057,8.039 C31.525,7.4765 31.26,6.6894 31.26,5.6777 C31.26,4.6308 31.529,3.8183 32.068,3.2402 C32.607,2.6621 33.307,2.373 34.166,2.373 C34.998,2.373 35.678,2.6562 36.205,3.2226 C36.732,3.789 36.996,4.5859 36.996,5.6133 C36.996,5.6758 36.994,5.7695 36.99,5.8945 L32.35,5.8945 C32.389,6.5781 32.582,7.1015 32.93,7.4648 C33.277,7.8281 33.711,8.0097 34.231,8.0097 C34.617,8.0097 34.947,7.9082 35.221,7.7051 C35.494,7.5019 35.711,7.1777 35.871,6.7324 Z M32.408,5.0273 L35.883,5.0273 C35.836,4.5039 35.703,4.1113 35.484,3.8496 C35.149,3.4433 34.713,3.2402 34.178,3.2402 C33.693,3.2402 33.285,3.4023 32.953,3.7265 C32.625,4.0508 32.443,4.4843 32.408,5.0273 Z M42.328,8.7363 L42.328,7.9511 C41.934,8.5683 41.354,8.8769 40.588,8.8769 C40.092,8.8769 39.635,8.7402 39.217,8.4668 C38.803,8.1933 38.481,7.8125 38.25,7.3242 C38.023,6.832 37.91,6.2675 37.91,5.6308 C37.91,5.0097 38.014,4.4472
                        38.221,3.9433 C38.428,3.4355 38.738,3.0468 39.152,2.7773 C39.566,2.5078 40.029,2.373 40.541,2.373 C40.916,2.373 41.25,2.4531 41.543,2.6133 C41.836,2.7695 42.074,2.9746 42.258,3.2285 L42.258,0.1465 L43.307,0.1465 L43.307,8.7363 L42.328,8.7363 Z M38.994,5.6308 C38.994,6.4277 39.162,7.0234 39.498,7.4179 C39.834,7.8125 40.231,8.0097 40.688,8.0097 C41.149,8.0097 41.539,7.8222 41.859,7.4472 C42.184,7.0683 42.346,6.4922 42.346,5.7187 C42.346,4.8672 42.182,4.2422 41.854,3.8437 C41.525,3.4453 41.121,3.2461 40.641,3.2461 C40.172,3.2461 39.779,3.4375 39.463,3.8203 C39.15,4.2031 38.994,4.8066 38.994,5.6308 Z M49.283,8.7363 L48.305,8.7363 L48.305,0.1465 L49.359,0.1465 L49.359,3.2109 C49.805,2.6523 50.373,2.373 51.065,2.373 C51.447,2.373 51.809,2.4511 52.149,2.6074 C52.492,2.7597 52.773,2.9765 52.992,3.2578 C53.215,3.5351 53.389,3.8711 53.514,4.2656 C53.639,4.6601 53.701,5.082 53.701,5.5312 C53.701,6.5976 53.438,7.4218 52.91,8.0039 C52.383,8.5859 51.75,8.8769 51.012,8.8769 C50.277,8.8769 49.701,8.5703 49.283,7.957 L49.283,8.7363
                        Z M49.272,5.5781 C49.272,6.3242 49.373,6.8633 49.576,7.1953 C49.908,7.7383 50.357,8.0097 50.924,8.0097 C51.385,8.0097 51.783,7.8105 52.119,7.4121 C52.455,7.0097 52.623,6.4121 52.623,5.6191 C52.623,4.8066 52.461,4.207 52.137,3.8203 C51.816,3.4336 51.428,3.2402 50.971,3.2402 C50.51,3.2402 50.111,3.4414 49.775,3.8437 C49.44,4.2422 49.272,4.8203 49.272,5.5781 Z M54.943,11.1328 L54.826,10.1425 C55.057,10.2051 55.258,10.2363 55.43,10.2363 C55.664,10.2363 55.852,10.1972 55.992,10.1191 C56.133,10.041 56.248,9.9316 56.338,9.791 C56.404,9.6855 56.512,9.4238 56.66,9.0058 C56.68,8.9472 56.711,8.8613 56.754,8.748 L54.393,2.5136 L55.529,2.5136 L56.824,6.1172 C56.992,6.5742 57.143,7.0547 57.275,7.5586 C57.397,7.0742 57.541,6.6015 57.709,6.1406 L59.039,2.5136 L60.094,2.5136 L57.727,8.8418 C57.473,9.5254 57.275,9.9961 57.135,10.2539 C56.947,10.6015 56.732,10.8554 56.49,11.0156 C56.248,11.1797 55.959,11.2617 55.623,11.2617 C55.42,11.2617 55.193,11.2187 54.943,11.1328 Z" id="Shape" fill="#6F7D88" fill-rule="nonzero"></path>
                    </g>
                </g>
            </g>
        </g>
    </g>
</svg>
`,E1=()=>(document.querySelector("#paymentContainer").innerHTML=`
    <form id="payment-form" class=${p.paymentForm} autocomplete="off">
      <label class="${p.label}">
        <input id="card-number" type="tel" class="${p.input} ${p.cardNumberInput} visa" placeholder="Номер карты" data-cp="cardNumber">
        <div id="pay-system" class="${p.paySystem}"></div>
      </label>
      <div class="${p.CVVsection}">
        <label class="${p.label} ${p.monthLabel}">
            <input id="month" type="tel" class="${p.input} ${p.monthInput}" placeholder="ММ" data-cp="expDateMonth">
        </label>
        <div class="${p.separator}">/</div>
        <label class="${p.label} ${p.yearLabel}">
            <input id="year" type="tel" class="${p.input} ${p.yearInput}" placeholder="ГГ" data-cp="expDateYear">
        </label>
        <label class="${p.label} ${p.CVVLabel}">
            <input id="cvv" type="password" class="${p.input} ${p.CVVInput}" placeholder="CVC / CVV2" data-cp="cvv">
            <div class="${p.CVVicon}">${f1}</div>
            <button type="button" id="view-button" class="${p.viewButton} visually-hidden"></button>
        </label>
      </div>
      <!-- Необязательное поле - валидируется только если указано в форме или передано в объекте CardData. -->
      <!-- <label class="${p.label}">
          <input type="text" class="${p.input} ${p.input}--name" data-cp="name">
      </label> -->
      <button id="payment-button" class="${p.button}" type="submit">Оплатить</button>
    </form>
    <div class="${p.paySystems}">${M1}</div>
  `,document.getElementById("payment-form"));function _(r){return typeof r=="string"||r instanceof String}function H(r){var t;return typeof r=="object"&&r!=null&&(r==null||(t=r.constructor)==null?void 0:t.name)==="Object"}function j(r,t){return Array.isArray(t)?j(r,(e,s)=>t.includes(s)):Object.entries(r).reduce((e,s)=>{let[i,a]=s;return t(a,i)&&(e[i]=a),e},{})}const l={NONE:"NONE",LEFT:"LEFT",FORCE_LEFT:"FORCE_LEFT",RIGHT:"RIGHT",FORCE_RIGHT:"FORCE_RIGHT"};function A1(r){switch(r){case l.LEFT:return l.FORCE_LEFT;case l.RIGHT:return l.FORCE_RIGHT;default:return r}}function T(r){return r.replace(/([.*+?^=!:${}()|[\]/\\])/g,"\\$1")}function b(r,t){if(t===r)return!0;const e=Array.isArray(t),s=Array.isArray(r);let i;if(e&&s){if(t.length!=r.length)return!1;for(i=0;i<t.length;i++)if(!b(t[i],r[i]))return!1;return!0}if(e!=s)return!1;if(t&&r&&typeof t=="object"&&typeof r=="object"){const a=t instanceof Date,n=r instanceof Date;if(a&&n)return t.getTime()==r.getTime();if(a!=n)return!1;const u=t instanceof RegExp,h=r instanceof RegExp;if(u&&h)return t.toString()==r.toString();if(u!=h)return!1;const o=Object.keys(t);for(i=0;i<o.length;i++)if(!Object.prototype.hasOwnProperty.call(r,o[i]))return!1;for(i=0;i<o.length;i++)if(!b(r[o[i]],t[o[i]]))return!1;return!0}else if(t&&r&&typeof t=="function"&&typeof r=="function")return t.toString()===r.toString();return!1}class F1{constructor(t){for(Object.assign(this,t);this.value.slice(0,this.startChangePos)!==this.oldValue.slice(0,this.startChangePos);)--this.oldSelection.start}get startChangePos(){return Math.min(this.cursorPos,this.oldSelection.start)}get insertedCount(){return this.cursorPos-this.startChangePos}get inserted(){return this.value.substr(this.startChangePos,this.insertedCount)}get removedCount(){return Math.max(this.oldSelection.end-this.startChangePos||this.oldValue.length-this.value.length,0)}get removed(){return this.oldValue.substr(this.startChangePos,this.removedCount)}get head(){return this.value.substring(0,this.startChangePos)}get tail(){return this.value.substring(this.startChangePos+this.insertedCount)}get removeDirection(){return!this.removedCount||this.insertedCount?l.NONE:(this.oldSelection.end===this.cursorPos||this.oldSelection.start===this.cursorPos)&&this.oldSelection.end===this.oldSelection.start?l.RIGHT:l.LEFT}}function C(r,t){return new C.InputMask(r,t)}function Y(r){if(r==null)throw new Error("mask property should be defined");return r instanceof RegExp?C.MaskedRegExp:_(r)?C.MaskedPattern:r===Date?C.MaskedDate:r===Number?C.MaskedNumber:Array.isArray(r)||r===Array?C.MaskedDynamic:C.Masked&&r.prototype instanceof C.Masked?r:C.Masked&&r instanceof C.Masked?r.constructor:r instanceof Function?C.MaskedFunction:(console.warn("Mask not found for mask",r),C.Masked)}function V(r){if(!r)throw new Error("Options in not defined");if(C.Masked){if(r.prototype instanceof C.Masked)return{mask:r};const{mask:t=void 0,...e}=r instanceof C.Masked?{mask:r}:H(r)&&r.mask instanceof C.Masked?r:{};if(t){const s=t.mask;return{...j(t,(i,a)=>!a.startsWith("_")),mask:t.constructor,_mask:s,...e}}}return H(r)?{...r}:{mask:r}}function A(r){if(C.Masked&&r instanceof C.Masked)return r;const t=V(r),e=Y(t.mask);if(!e)throw new Error("Masked class is not found for provided mask, appropriate module needs to be imported manually before creating mask.");return t.mask===e&&delete t.mask,t._mask&&(t.mask=t._mask,delete t._mask),new e(t)}C.createMask=A;class O{get selectionStart(){let t;try{t=this._unsafeSelectionStart}catch{}return t??this.value.length}get selectionEnd(){let t;try{t=this._unsafeSelectionEnd}catch{}return t??this.value.length}select(t,e){if(!(t==null||e==null||t===this.selectionStart&&e===this.selectionEnd))try{this._unsafeSelect(t,e)}catch{}}get isActive(){return!1}}C.MaskElement=O;class F extends O{constructor(t){super(),this.input=t,this._handlers={}}get rootElement(){var t,e,s;return(t=(e=(s=this.input).getRootNode)==null?void 0:e.call(s))!=null?t:document}get isActive(){return this.input===this.rootElement.activeElement}bindEvents(t){Object.keys(t).forEach(e=>this._toggleEventHandler(F.EVENTS_MAP[e],t[e]))}unbindEvents(){Object.keys(this._handlers).forEach(t=>this._toggleEventHandler(t))}_toggleEventHandler(t,e){this._handlers[t]&&(this.input.removeEventListener(t,this._handlers[t]),delete this._handlers[t]),e&&(this.input.addEventListener(t,e),this._handlers[t]=e)}}F.EVENTS_MAP={selectionChange:"keydown",input:"input",drop:"drop",click:"click",focus:"focus",commit:"blur"};C.HTMLMaskElement=F;class x1 extends F{constructor(t){super(t),this.input=t,this._handlers={}}get _unsafeSelectionStart(){return this.input.selectionStart!=null?this.input.selectionStart:this.value.length}get _unsafeSelectionEnd(){return this.input.selectionEnd}_unsafeSelect(t,e){this.input.setSelectionRange(t,e)}get value(){return this.input.value}set value(t){this.input.value=t}}C.HTMLMaskElement=F;class q extends F{get _unsafeSelectionStart(){const t=this.rootElement,e=t.getSelection&&t.getSelection(),s=e&&e.anchorOffset,i=e&&e.focusOffset;return i==null||s==null||s<i?s:i}get _unsafeSelectionEnd(){const t=this.rootElement,e=t.getSelection&&t.getSelection(),s=e&&e.anchorOffset,i=e&&e.focusOffset;return i==null||s==null||s>i?s:i}_unsafeSelect(t,e){if(!this.rootElement.createRange)return;const s=this.rootElement.createRange();s.setStart(this.input.firstChild||this.input,t),s.setEnd(this.input.lastChild||this.input,e);const i=this.rootElement,a=i.getSelection&&i.getSelection();a&&(a.removeAllRanges(),a.addRange(s))}get value(){return this.input.textContent||""}set value(t){this.input.textContent=t}}C.HTMLContenteditableMaskElement=q;class S1{constructor(t,e){this.el=t instanceof O?t:t.isContentEditable&&t.tagName!=="INPUT"&&t.tagName!=="TEXTAREA"?new q(t):new x1(t),this.masked=A(e),this._listeners={},this._value="",this._unmaskedValue="",this._saveSelection=this._saveSelection.bind(this),this._onInput=this._onInput.bind(this),this._onChange=this._onChange.bind(this),this._onDrop=this._onDrop.bind(this),this._onFocus=this._onFocus.bind(this),this._onClick=this._onClick.bind(this),this.alignCursor=this.alignCursor.bind(this),this.alignCursorFriendly=this.alignCursorFriendly.bind(this),this._bindEvents(),this.updateValue(),this._onChange()}maskEquals(t){var e;return t==null||((e=this.masked)==null?void 0:e.maskEquals(t))}get mask(){return this.masked.mask}set mask(t){if(this.maskEquals(t))return;if(!(t instanceof C.Masked)&&this.masked.constructor===Y(t)){this.masked.updateOptions({mask:t});return}const e=t instanceof C.Masked?t:A({mask:t});e.unmaskedValue=this.masked.unmaskedValue,this.masked=e}get value(){return this._value}set value(t){this.value!==t&&(this.masked.value=t,this.updateControl(),this.alignCursor())}get unmaskedValue(){return this._unmaskedValue}set unmaskedValue(t){this.unmaskedValue!==t&&(this.masked.unmaskedValue=t,this.updateControl(),this.alignCursor())}get typedValue(){return this.masked.typedValue}set typedValue(t){this.masked.typedValueEquals(t)||(this.masked.typedValue=t,this.updateControl(),this.alignCursor())}get displayValue(){return this.masked.displayValue}_bindEvents(){this.el.bindEvents({selectionChange:this._saveSelection,input:this._onInput,drop:this._onDrop,click:this._onClick,focus:this._onFocus,commit:this._onChange})}_unbindEvents(){this.el&&this.el.unbindEvents()}_fireEvent(t,e){const s=this._listeners[t];s&&s.forEach(i=>i(e))}get selectionStart(){return this._cursorChanging?this._changingCursorPos:this.el.selectionStart}get cursorPos(){return this._cursorChanging?this._changingCursorPos:this.el.selectionEnd}set cursorPos(t){!this.el||!this.el.isActive||(this.el.select(t,t),this._saveSelection())}_saveSelection(){this.displayValue!==this.el.value&&console.warn("Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly."),this._selection={start:this.selectionStart,end:this.cursorPos}}updateValue(){this.masked.value=this.el.value,this._value=this.masked.value}updateControl(){const t=this.masked.unmaskedValue,e=this.masked.value,s=this.displayValue,i=this.unmaskedValue!==t||this.value!==e;this._unmaskedValue=t,this._value=e,this.el.value!==s&&(this.el.value=s),i&&this._fireChangeEvents()}updateOptions(t){const{mask:e,...s}=t,i=!this.maskEquals(e),a=!b(this.masked,s);i&&(this.mask=e),a&&this.masked.updateOptions(s),(i||a)&&this.updateControl()}updateCursor(t){t!=null&&(this.cursorPos=t,this._delayUpdateCursor(t))}_delayUpdateCursor(t){this._abortUpdateCursor(),this._changingCursorPos=t,this._cursorChanging=setTimeout(()=>{this.el&&(this.cursorPos=this._changingCursorPos,this._abortUpdateCursor())},10)}_fireChangeEvents(){this._fireEvent("accept",this._inputEvent),this.masked.isComplete&&this._fireEvent("complete",this._inputEvent)}_abortUpdateCursor(){this._cursorChanging&&(clearTimeout(this._cursorChanging),delete this._cursorChanging)}alignCursor(){this.cursorPos=this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos,l.LEFT))}alignCursorFriendly(){this.selectionStart===this.cursorPos&&this.alignCursor()}on(t,e){return this._listeners[t]||(this._listeners[t]=[]),this._listeners[t].push(e),this}off(t,e){if(!this._listeners[t])return this;if(!e)return delete this._listeners[t],this;const s=this._listeners[t].indexOf(e);return s>=0&&this._listeners[t].splice(s,1),this}_onInput(t){if(this._inputEvent=t,this._abortUpdateCursor(),!this._selection)return this.updateValue();const e=new F1({value:this.el.value,cursorPos:this.cursorPos,oldValue:this.displayValue,oldSelection:this._selection}),s=this.masked.rawInputValue,i=this.masked.splice(e.startChangePos,e.removed.length,e.inserted,e.removeDirection,{input:!0,raw:!0}).offset,a=s===this.masked.rawInputValue?e.removeDirection:l.NONE;let n=this.masked.nearestInputPos(e.startChangePos+i,a);a!==l.NONE&&(n=this.masked.nearestInputPos(n,l.NONE)),this.updateControl(),this.updateCursor(n),delete this._inputEvent}_onChange(){this.displayValue!==this.el.value&&this.updateValue(),this.masked.doCommit(),this.updateControl(),this._saveSelection()}_onDrop(t){t.preventDefault(),t.stopPropagation()}_onFocus(t){this.alignCursorFriendly()}_onClick(t){this.alignCursorFriendly()}destroy(){this._unbindEvents(),this._listeners.length=0,delete this.el}}C.InputMask=S1;class d{static normalize(t){return Array.isArray(t)?t:[t,new d]}constructor(t){Object.assign(this,{inserted:"",rawInserted:"",skip:!1,tailShift:0},t)}aggregate(t){return this.rawInserted+=t.rawInserted,this.skip=this.skip||t.skip,this.inserted+=t.inserted,this.tailShift+=t.tailShift,this}get offset(){return this.tailShift+this.inserted.length}}C.ChangeDetails=d;class v{constructor(t,e,s){t===void 0&&(t=""),e===void 0&&(e=0),this.value=t,this.from=e,this.stop=s}toString(){return this.value}extend(t){this.value+=String(t)}appendTo(t){return t.append(this.toString(),{tail:!0}).aggregate(t._appendPlaceholder())}get state(){return{value:this.value,from:this.from,stop:this.stop}}set state(t){Object.assign(this,t)}unshift(t){if(!this.value.length||t!=null&&this.from>=t)return"";const e=this.value[0];return this.value=this.value.slice(1),e}shift(){if(!this.value.length)return"";const t=this.value[this.value.length-1];return this.value=this.value.slice(0,-1),t}}class L{constructor(t){this._value="",this._update({...L.DEFAULTS,...t}),this._initialized=!0}updateOptions(t){Object.keys(t).length&&this.withValueRefresh(this._update.bind(this,t))}_update(t){Object.assign(this,t)}get state(){return{_value:this.value,_rawInputValue:this.rawInputValue}}set state(t){this._value=t._value}reset(){this._value=""}get value(){return this._value}set value(t){this.resolve(t,{input:!0})}resolve(t,e){e===void 0&&(e={input:!0}),this.reset(),this.append(t,e,""),this.doCommit()}get unmaskedValue(){return this.value}set unmaskedValue(t){this.resolve(t,{})}get typedValue(){return this.parse?this.parse(this.value,this):this.unmaskedValue}set typedValue(t){this.format?this.value=this.format(t,this):this.unmaskedValue=String(t)}get rawInputValue(){return this.extractInput(0,this.displayValue.length,{raw:!0})}set rawInputValue(t){this.resolve(t,{raw:!0})}get displayValue(){return this.value}get isComplete(){return!0}get isFilled(){return this.isComplete}nearestInputPos(t,e){return t}totalInputPositions(t,e){return t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length),Math.min(this.displayValue.length,e-t)}extractInput(t,e,s){return t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length),this.displayValue.slice(t,e)}extractTail(t,e){return t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length),new v(this.extractInput(t,e),t)}appendTail(t){return _(t)&&(t=new v(String(t))),t.appendTo(this)}_appendCharRaw(t,e){return t?(this._value+=t,new d({inserted:t,rawInserted:t})):new d}_appendChar(t,e,s){e===void 0&&(e={});const i=this.state;let a;if([t,a]=this.doPrepareChar(t,e),a=a.aggregate(this._appendCharRaw(t,e)),a.inserted){let n,u=this.doValidate(e)!==!1;if(u&&s!=null){const h=this.state;this.overwrite===!0&&(n=s.state,s.unshift(this.displayValue.length-a.tailShift));let o=this.appendTail(s);u=o.rawInserted===s.toString(),!(u&&o.inserted)&&this.overwrite==="shift"&&(this.state=h,n=s.state,s.shift(),o=this.appendTail(s),u=o.rawInserted===s.toString()),u&&o.inserted&&(this.state=h)}u||(a=new d,this.state=i,s&&n&&(s.state=n))}return a}_appendPlaceholder(){return new d}_appendEager(){return new d}append(t,e,s){if(!_(t))throw new Error("value should be string");const i=_(s)?new v(String(s)):s;e!=null&&e.tail&&(e._beforeTailState=this.state);let a;[t,a]=this.doPrepare(t,e);for(let n=0;n<t.length;++n){const u=this._appendChar(t[n],e,i);if(!u.rawInserted&&!this.doSkipInvalid(t[n],e,i))break;a.aggregate(u)}return(this.eager===!0||this.eager==="append")&&e!=null&&e.input&&t&&a.aggregate(this._appendEager()),i!=null&&(a.tailShift+=this.appendTail(i).tailShift),a}remove(t,e){return t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length),this._value=this.displayValue.slice(0,t)+this.displayValue.slice(e),new d}withValueRefresh(t){if(this._refreshing||!this._initialized)return t();this._refreshing=!0;const e=this.rawInputValue,s=this.value,i=t();return this.rawInputValue=e,this.value&&this.value!==s&&s.indexOf(this.value)===0&&this.append(s.slice(this.displayValue.length),{},""),delete this._refreshing,i}runIsolated(t){if(this._isolated||!this._initialized)return t(this);this._isolated=!0;const e=this.state,s=t(this);return this.state=e,delete this._isolated,s}doSkipInvalid(t,e,s){return!!this.skipInvalid}doPrepare(t,e){return e===void 0&&(e={}),d.normalize(this.prepare?this.prepare(t,this,e):t)}doPrepareChar(t,e){return e===void 0&&(e={}),d.normalize(this.prepareChar?this.prepareChar(t,this,e):t)}doValidate(t){return(!this.validate||this.validate(this.value,this,t))&&(!this.parent||this.parent.doValidate(t))}doCommit(){this.commit&&this.commit(this.value,this)}splice(t,e,s,i,a){i===void 0&&(i=l.NONE),a===void 0&&(a={input:!0});const n=t+e,u=this.extractTail(n),h=this.eager===!0||this.eager==="remove";let o;h&&(i=A1(i),o=this.extractInput(0,n,{raw:!0}));let m=t;const c=new d;if(i!==l.NONE&&(m=this.nearestInputPos(t,e>1&&t!==0&&!h?l.NONE:i),c.tailShift=m-t),c.aggregate(this.remove(m)),h&&i!==l.NONE&&o===this.rawInputValue)if(i===l.FORCE_LEFT){let k;for(;o===this.rawInputValue&&(k=this.displayValue.length);)c.aggregate(new d({tailShift:-1})).aggregate(this.remove(k-1))}else i===l.FORCE_RIGHT&&u.unshift();return c.aggregate(this.append(s,a,u))}maskEquals(t){return this.mask===t}typedValueEquals(t){const e=this.typedValue;return t===e||L.EMPTY_VALUES.includes(t)&&L.EMPTY_VALUES.includes(e)||(this.format?this.format(t,this)===this.format(this.typedValue,this):!1)}}L.DEFAULTS={skipInvalid:!0};L.EMPTY_VALUES=[void 0,null,""];C.Masked=L;class M{constructor(t,e){t===void 0&&(t=[]),e===void 0&&(e=0),this.chunks=t,this.from=e}toString(){return this.chunks.map(String).join("")}extend(t){if(!String(t))return;t=_(t)?new v(String(t)):t;const e=this.chunks[this.chunks.length-1],s=e&&(e.stop===t.stop||t.stop==null)&&t.from===e.from+e.toString().length;if(t instanceof v)s?e.extend(t.toString()):this.chunks.push(t);else if(t instanceof M){if(t.stop==null){let i;for(;t.chunks.length&&t.chunks[0].stop==null;)i=t.chunks.shift(),i.from+=t.from,this.extend(i)}t.toString()&&(t.stop=t.blockIndex,this.chunks.push(t))}}appendTo(t){if(!(t instanceof C.MaskedPattern))return new v(this.toString()).appendTo(t);const e=new d;for(let s=0;s<this.chunks.length&&!e.skip;++s){const i=this.chunks[s],a=t._mapPosToBlock(t.displayValue.length),n=i.stop;let u;if(n!=null&&(!a||a.index<=n)){if(i instanceof M||t._stops.indexOf(n)>=0){const h=t._appendPlaceholder(n);e.aggregate(h)}u=i instanceof M&&t._blocks[n]}if(u){const h=u.appendTail(i);h.skip=!1,e.aggregate(h),t._value+=h.inserted;const o=i.toString().slice(h.rawInserted.length);o&&e.aggregate(t.append(o,{tail:!0}))}else e.aggregate(t.append(i.toString(),{tail:!0}))}return e}get state(){return{chunks:this.chunks.map(t=>t.state),from:this.from,stop:this.stop,blockIndex:this.blockIndex}}set state(t){const{chunks:e,...s}=t;Object.assign(this,s),this.chunks=e.map(i=>{const a="chunks"in i?new M:new v;return a.state=i,a})}unshift(t){if(!this.chunks.length||t!=null&&this.from>=t)return"";const e=t!=null?t-this.from:t;let s=0;for(;s<this.chunks.length;){const i=this.chunks[s],a=i.unshift(e);if(i.toString()){if(!a)break;++s}else this.chunks.splice(s,1);if(a)return a}return""}shift(){if(!this.chunks.length)return"";let t=this.chunks.length-1;for(;0<=t;){const e=this.chunks[t],s=e.shift();if(e.toString()){if(!s)break;--t}else this.chunks.splice(t,1);if(s)return s}return""}}class y1{constructor(t,e){this.masked=t,this._log=[];const{offset:s,index:i}=t._mapPosToBlock(e)||(e<0?{index:0,offset:0}:{index:this.masked._blocks.length,offset:0});this.offset=s,this.index=i,this.ok=!1}get block(){return this.masked._blocks[this.index]}get pos(){return this.masked._blockStartPos(this.index)+this.offset}get state(){return{index:this.index,offset:this.offset,ok:this.ok}}set state(t){Object.assign(this,t)}pushState(){this._log.push(this.state)}popState(){const t=this._log.pop();return t&&(this.state=t),t}bindBlock(){this.block||(this.index<0&&(this.index=0,this.offset=0),this.index>=this.masked._blocks.length&&(this.index=this.masked._blocks.length-1,this.offset=this.block.displayValue.length))}_pushLeft(t){for(this.pushState(),this.bindBlock();0<=this.index;--this.index,this.offset=((e=this.block)==null?void 0:e.displayValue.length)||0){var e;if(t())return this.ok=!0}return this.ok=!1}_pushRight(t){for(this.pushState(),this.bindBlock();this.index<this.masked._blocks.length;++this.index,this.offset=0)if(t())return this.ok=!0;return this.ok=!1}pushLeftBeforeFilled(){return this._pushLeft(()=>{if(!(this.block.isFixed||!this.block.value)&&(this.offset=this.block.nearestInputPos(this.offset,l.FORCE_LEFT),this.offset!==0))return!0})}pushLeftBeforeInput(){return this._pushLeft(()=>{if(!this.block.isFixed)return this.offset=this.block.nearestInputPos(this.offset,l.LEFT),!0})}pushLeftBeforeRequired(){return this._pushLeft(()=>{if(!(this.block.isFixed||this.block.isOptional&&!this.block.value))return this.offset=this.block.nearestInputPos(this.offset,l.LEFT),!0})}pushRightBeforeFilled(){return this._pushRight(()=>{if(!(this.block.isFixed||!this.block.value)&&(this.offset=this.block.nearestInputPos(this.offset,l.FORCE_RIGHT),this.offset!==this.block.value.length))return!0})}pushRightBeforeInput(){return this._pushRight(()=>{if(!this.block.isFixed)return this.offset=this.block.nearestInputPos(this.offset,l.NONE),!0})}pushRightBeforeRequired(){return this._pushRight(()=>{if(!(this.block.isFixed||this.block.isOptional&&!this.block.value))return this.offset=this.block.nearestInputPos(this.offset,l.NONE),!0})}}class K{constructor(t){Object.assign(this,t),this._value="",this.isFixed=!0}get value(){return this._value}get unmaskedValue(){return this.isUnmasking?this.value:""}get rawInputValue(){return this._isRawInput?this.value:""}get displayValue(){return this.value}reset(){this._isRawInput=!1,this._value=""}remove(t,e){return t===void 0&&(t=0),e===void 0&&(e=this._value.length),this._value=this._value.slice(0,t)+this._value.slice(e),this._value||(this._isRawInput=!1),new d}nearestInputPos(t,e){e===void 0&&(e=l.NONE);const s=0,i=this._value.length;switch(e){case l.LEFT:case l.FORCE_LEFT:return s;case l.NONE:case l.RIGHT:case l.FORCE_RIGHT:default:return i}}totalInputPositions(t,e){return t===void 0&&(t=0),e===void 0&&(e=this._value.length),this._isRawInput?e-t:0}extractInput(t,e,s){return t===void 0&&(t=0),e===void 0&&(e=this._value.length),s===void 0&&(s={}),s.raw&&this._isRawInput&&this._value.slice(t,e)||""}get isComplete(){return!0}get isFilled(){return!!this._value}_appendChar(t,e){e===void 0&&(e={});const s=new d;if(this.isFilled)return s;const i=this.eager===!0||this.eager==="append",n=this.char===t&&(this.isUnmasking||e.input||e.raw)&&(!e.raw||!i)&&!e.tail;return n&&(s.rawInserted=this.char),this._value=s.inserted=this.char,this._isRawInput=n&&(e.raw||e.input),s}_appendEager(){return this._appendChar(this.char,{tail:!0})}_appendPlaceholder(){const t=new d;return this.isFilled||(this._value=t.inserted=this.char),t}extractTail(){return new v("")}appendTail(t){return _(t)&&(t=new v(String(t))),t.appendTo(this)}append(t,e,s){const i=this._appendChar(t[0],e);return s!=null&&(i.tailShift+=this.appendTail(s).tailShift),i}doCommit(){}get state(){return{_value:this._value,_rawInputValue:this.rawInputValue}}set state(t){this._value=t._value,this._isRawInput=!!t._rawInputValue}}class B{constructor(t){const{parent:e,isOptional:s,placeholderChar:i,displayChar:a,lazy:n,eager:u,...h}=t;this.masked=A(h),Object.assign(this,{parent:e,isOptional:s,placeholderChar:i,displayChar:a,lazy:n,eager:u})}reset(){this.isFilled=!1,this.masked.reset()}remove(t,e){return t===void 0&&(t=0),e===void 0&&(e=this.value.length),t===0&&e>=1?(this.isFilled=!1,this.masked.remove(t,e)):new d}get value(){return this.masked.value||(this.isFilled&&!this.isOptional?this.placeholderChar:"")}get unmaskedValue(){return this.masked.unmaskedValue}get rawInputValue(){return this.masked.rawInputValue}get displayValue(){return this.masked.value&&this.displayChar||this.value}get isComplete(){return!!this.masked.value||this.isOptional}_appendChar(t,e){if(e===void 0&&(e={}),this.isFilled)return new d;const s=this.masked.state,i=this.masked._appendChar(t,this.currentMaskFlags(e));return i.inserted&&this.doValidate(e)===!1&&(i.inserted=i.rawInserted="",this.masked.state=s),!i.inserted&&!this.isOptional&&!this.lazy&&!e.input&&(i.inserted=this.placeholderChar),i.skip=!i.inserted&&!this.isOptional,this.isFilled=!!i.inserted,i}append(t,e,s){return this.masked.append(t,this.currentMaskFlags(e),s)}_appendPlaceholder(){const t=new d;return this.isFilled||this.isOptional||(this.isFilled=!0,t.inserted=this.placeholderChar),t}_appendEager(){return new d}extractTail(t,e){return this.masked.extractTail(t,e)}appendTail(t){return this.masked.appendTail(t)}extractInput(t,e,s){return t===void 0&&(t=0),e===void 0&&(e=this.value.length),this.masked.extractInput(t,e,s)}nearestInputPos(t,e){e===void 0&&(e=l.NONE);const s=0,i=this.value.length,a=Math.min(Math.max(t,s),i);switch(e){case l.LEFT:case l.FORCE_LEFT:return this.isComplete?a:s;case l.RIGHT:case l.FORCE_RIGHT:return this.isComplete?a:i;case l.NONE:default:return a}}totalInputPositions(t,e){return t===void 0&&(t=0),e===void 0&&(e=this.value.length),this.value.slice(t,e).length}doValidate(t){return this.masked.doValidate(this.currentMaskFlags(t))&&(!this.parent||this.parent.doValidate(this.currentMaskFlags(t)))}doCommit(){this.masked.doCommit()}get state(){return{_value:this.value,_rawInputValue:this.rawInputValue,masked:this.masked.state,isFilled:this.isFilled}}set state(t){this.masked.state=t.masked,this.isFilled=t.isFilled}currentMaskFlags(t){var e;return{...t,_beforeTailState:(t==null||(e=t._beforeTailState)==null?void 0:e.masked)||(t==null?void 0:t._beforeTailState)}}}B.DEFAULT_DEFINITIONS={0:/\d/,a:/[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,"*":/./};class b1 extends L{updateOptions(t){super.updateOptions(t)}_update(t){const e=t.mask;e&&(t.validate=s=>s.search(e)>=0),super._update(t)}}C.MaskedRegExp=b1;class f extends L{constructor(t){super({...f.DEFAULTS,...t,definitions:Object.assign({},B.DEFAULT_DEFINITIONS,t==null?void 0:t.definitions)})}updateOptions(t){super.updateOptions(t)}_update(t){t.definitions=Object.assign({},this.definitions,t.definitions),super._update(t),this._rebuildMask()}_rebuildMask(){const t=this.definitions;this._blocks=[],this.exposeBlock=void 0,this._stops=[],this._maskedBlocks={};const e=this.mask;if(!e||!t)return;let s=!1,i=!1;for(let a=0;a<e.length;++a){if(this.blocks){const o=e.slice(a),m=Object.keys(this.blocks).filter(k=>o.indexOf(k)===0);m.sort((k,D)=>D.length-k.length);const c=m[0];if(c){const{expose:k,...D}=V(this.blocks[c]),I=A({lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,displayChar:this.displayChar,overwrite:this.overwrite,...D,parent:this});I&&(this._blocks.push(I),k&&(this.exposeBlock=I),this._maskedBlocks[c]||(this._maskedBlocks[c]=[]),this._maskedBlocks[c].push(this._blocks.length-1)),a+=c.length-1;continue}}let n=e[a],u=n in t;if(n===f.STOP_CHAR){this._stops.push(this._blocks.length);continue}if(n==="{"||n==="}"){s=!s;continue}if(n==="["||n==="]"){i=!i;continue}if(n===f.ESCAPE_CHAR){if(++a,n=e[a],!n)break;u=!1}const h=u?new B({isOptional:i,lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,displayChar:this.displayChar,...V(t[n]),parent:this}):new K({char:n,eager:this.eager,isUnmasking:s});this._blocks.push(h)}}get state(){return{...super.state,_blocks:this._blocks.map(t=>t.state)}}set state(t){const{_blocks:e,...s}=t;this._blocks.forEach((i,a)=>i.state=e[a]),super.state=s}reset(){super.reset(),this._blocks.forEach(t=>t.reset())}get isComplete(){return this.exposeBlock?this.exposeBlock.isComplete:this._blocks.every(t=>t.isComplete)}get isFilled(){return this._blocks.every(t=>t.isFilled)}get isFixed(){return this._blocks.every(t=>t.isFixed)}get isOptional(){return this._blocks.every(t=>t.isOptional)}doCommit(){this._blocks.forEach(t=>t.doCommit()),super.doCommit()}get unmaskedValue(){return this.exposeBlock?this.exposeBlock.unmaskedValue:this._blocks.reduce((t,e)=>t+=e.unmaskedValue,"")}set unmaskedValue(t){if(this.exposeBlock){const e=this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock))+this.exposeBlock.displayValue.length);this.exposeBlock.unmaskedValue=t,this.appendTail(e),this.doCommit()}else super.unmaskedValue=t}get value(){return this.exposeBlock?this.exposeBlock.value:this._blocks.reduce((t,e)=>t+=e.value,"")}set value(t){if(this.exposeBlock){const e=this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock))+this.exposeBlock.displayValue.length);this.exposeBlock.value=t,this.appendTail(e),this.doCommit()}else super.value=t}get typedValue(){return this.exposeBlock?this.exposeBlock.typedValue:super.typedValue}set typedValue(t){if(this.exposeBlock){const e=this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock))+this.exposeBlock.displayValue.length);this.exposeBlock.typedValue=t,this.appendTail(e),this.doCommit()}else super.typedValue=t}get displayValue(){return this._blocks.reduce((t,e)=>t+=e.displayValue,"")}appendTail(t){return super.appendTail(t).aggregate(this._appendPlaceholder())}_appendEager(){var t;const e=new d;let s=(t=this._mapPosToBlock(this.displayValue.length))==null?void 0:t.index;if(s==null)return e;this._blocks[s].isFilled&&++s;for(let i=s;i<this._blocks.length;++i){const a=this._blocks[i]._appendEager();if(!a.inserted)break;e.aggregate(a)}return e}_appendCharRaw(t,e){e===void 0&&(e={});const s=this._mapPosToBlock(this.displayValue.length),i=new d;if(!s)return i;for(let n=s.index;;++n){var a;const u=this._blocks[n];if(!u)break;const h=u._appendChar(t,{...e,_beforeTailState:(a=e._beforeTailState)==null||(a=a._blocks)==null?void 0:a[n]}),o=h.skip;if(i.aggregate(h),o||h.rawInserted)break}return i}extractTail(t,e){t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length);const s=new M;return t===e||this._forEachBlocksInRange(t,e,(i,a,n,u)=>{const h=i.extractTail(n,u);h.stop=this._findStopBefore(a),h.from=this._blockStartPos(a),h instanceof M&&(h.blockIndex=a),s.extend(h)}),s}extractInput(t,e,s){if(t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length),s===void 0&&(s={}),t===e)return"";let i="";return this._forEachBlocksInRange(t,e,(a,n,u,h)=>{i+=a.extractInput(u,h,s)}),i}_findStopBefore(t){let e;for(let s=0;s<this._stops.length;++s){const i=this._stops[s];if(i<=t)e=i;else break}return e}_appendPlaceholder(t){const e=new d;if(this.lazy&&t==null)return e;const s=this._mapPosToBlock(this.displayValue.length);if(!s)return e;const i=s.index,a=t??this._blocks.length;return this._blocks.slice(i,a).forEach(n=>{if(!n.lazy||t!=null){var u;const h=n._appendPlaceholder((u=n._blocks)==null?void 0:u.length);this._value+=h.inserted,e.aggregate(h)}}),e}_mapPosToBlock(t){let e="";for(let s=0;s<this._blocks.length;++s){const i=this._blocks[s],a=e.length;if(e+=i.displayValue,t<=e.length)return{index:s,offset:t-a}}}_blockStartPos(t){return this._blocks.slice(0,t).reduce((e,s)=>e+=s.displayValue.length,0)}_forEachBlocksInRange(t,e,s){e===void 0&&(e=this.displayValue.length);const i=this._mapPosToBlock(t);if(i){const a=this._mapPosToBlock(e),n=a&&i.index===a.index,u=i.offset,h=a&&n?a.offset:this._blocks[i.index].displayValue.length;if(s(this._blocks[i.index],i.index,u,h),a&&!n){for(let o=i.index+1;o<a.index;++o)s(this._blocks[o],o,0,this._blocks[o].displayValue.length);s(this._blocks[a.index],a.index,0,a.offset)}}}remove(t,e){t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length);const s=super.remove(t,e);return this._forEachBlocksInRange(t,e,(i,a,n,u)=>{s.aggregate(i.remove(n,u))}),s}nearestInputPos(t,e){if(e===void 0&&(e=l.NONE),!this._blocks.length)return 0;const s=new y1(this,t);if(e===l.NONE)return s.pushRightBeforeInput()||(s.popState(),s.pushLeftBeforeInput())?s.pos:this.displayValue.length;if(e===l.LEFT||e===l.FORCE_LEFT){if(e===l.LEFT){if(s.pushRightBeforeFilled(),s.ok&&s.pos===t)return t;s.popState()}if(s.pushLeftBeforeInput(),s.pushLeftBeforeRequired(),s.pushLeftBeforeFilled(),e===l.LEFT){if(s.pushRightBeforeInput(),s.pushRightBeforeRequired(),s.ok&&s.pos<=t||(s.popState(),s.ok&&s.pos<=t))return s.pos;s.popState()}return s.ok?s.pos:e===l.FORCE_LEFT?0:(s.popState(),s.ok||(s.popState(),s.ok)?s.pos:0)}return e===l.RIGHT||e===l.FORCE_RIGHT?(s.pushRightBeforeInput(),s.pushRightBeforeRequired(),s.pushRightBeforeFilled()?s.pos:e===l.FORCE_RIGHT?this.displayValue.length:(s.popState(),s.ok||(s.popState(),s.ok)?s.pos:this.nearestInputPos(t,l.LEFT))):t}totalInputPositions(t,e){t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length);let s=0;return this._forEachBlocksInRange(t,e,(i,a,n,u)=>{s+=i.totalInputPositions(n,u)}),s}maskedBlock(t){return this.maskedBlocks(t)[0]}maskedBlocks(t){const e=this._maskedBlocks[t];return e?e.map(s=>this._blocks[s]):[]}}f.DEFAULTS={lazy:!0,placeholderChar:"_"};f.STOP_CHAR="`";f.ESCAPE_CHAR="\\";f.InputDefinition=B;f.FixedDefinition=K;C.MaskedPattern=f;class S extends f{get _matchFrom(){return this.maxLength-String(this.from).length}constructor(t){super(t)}updateOptions(t){super.updateOptions(t)}_update(t){const{to:e=this.to||0,from:s=this.from||0,maxLength:i=this.maxLength||0,autofix:a=this.autofix,...n}=t;this.to=e,this.from=s,this.maxLength=Math.max(String(e).length,i),this.autofix=a;const u=String(this.from).padStart(this.maxLength,"0"),h=String(this.to).padStart(this.maxLength,"0");let o=0;for(;o<h.length&&h[o]===u[o];)++o;n.mask=h.slice(0,o).replace(/0/g,"\\0")+"0".repeat(this.maxLength-o),super._update(n)}get isComplete(){return super.isComplete&&!!this.value}boundaries(t){let e="",s="";const[,i,a]=t.match(/^(\D*)(\d*)(\D*)/)||[];return a&&(e="0".repeat(i.length)+a,s="9".repeat(i.length)+a),e=e.padEnd(this.maxLength,"0"),s=s.padEnd(this.maxLength,"9"),[e,s]}doPrepareChar(t,e){e===void 0&&(e={});let s;if([t,s]=super.doPrepareChar(t.replace(/\D/g,""),e),!this.autofix||!t)return[t,s];const i=String(this.from).padStart(this.maxLength,"0"),a=String(this.to).padStart(this.maxLength,"0"),n=this.value+t;if(n.length>this.maxLength)return["",s];const[u,h]=this.boundaries(n);return Number(h)<this.from?[i[n.length-1],s]:Number(u)>this.to?this.autofix==="pad"&&n.length<this.maxLength?["",s.aggregate(this.append(i[n.length-1]+t,e))]:[a[n.length-1],s]:[t,s]}doValidate(t){const e=this.value;if(e.search(/[^0]/)===-1&&e.length<=this._matchFrom)return!0;const[i,a]=this.boundaries(e);return this.from<=Number(a)&&Number(i)<=this.to&&super.doValidate(t)}}C.MaskedRange=S;class E extends f{constructor(t){const{mask:e,pattern:s,...i}={...E.DEFAULTS,...t};super({...i,mask:_(e)?e:s})}updateOptions(t){super.updateOptions(t)}_update(t){const{mask:e,pattern:s,blocks:i,...a}={...E.DEFAULTS,...t},n=Object.assign({},E.GET_DEFAULT_BLOCKS());t.min&&(n.Y.from=t.min.getFullYear()),t.max&&(n.Y.to=t.max.getFullYear()),t.min&&t.max&&n.Y.from===n.Y.to&&(n.m.from=t.min.getMonth()+1,n.m.to=t.max.getMonth()+1,n.m.from===n.m.to&&(n.d.from=t.min.getDate(),n.d.to=t.max.getDate())),Object.assign(n,this.blocks,i),Object.keys(n).forEach(u=>{const h=n[u];!("autofix"in h)&&"autofix"in t&&(h.autofix=t.autofix)}),super._update({...a,mask:_(e)?e:s,blocks:n})}doValidate(t){const e=this.date;return super.doValidate(t)&&(!this.isComplete||this.isDateExist(this.value)&&e!=null&&(this.min==null||this.min<=e)&&(this.max==null||e<=this.max))}isDateExist(t){return this.format(this.parse(t,this),this).indexOf(t)>=0}get date(){return this.typedValue}set date(t){this.typedValue=t}get typedValue(){return this.isComplete?super.typedValue:null}set typedValue(t){super.typedValue=t}maskEquals(t){return t===Date||super.maskEquals(t)}}E.GET_DEFAULT_BLOCKS=()=>({d:{mask:S,from:1,to:31,maxLength:2},m:{mask:S,from:1,to:12,maxLength:2},Y:{mask:S,from:1900,to:9999}});E.DEFAULTS={mask:Date,pattern:"d{.}`m{.}`Y",format:(r,t)=>{if(!r)return"";const e=String(r.getDate()).padStart(2,"0"),s=String(r.getMonth()+1).padStart(2,"0"),i=r.getFullYear();return[e,s,i].join(".")},parse:(r,t)=>{const[e,s,i]=r.split(".").map(Number);return new Date(i,s-1,e)}};C.MaskedDate=E;class x extends L{constructor(t){super({...x.DEFAULTS,...t}),this.currentMask=void 0}updateOptions(t){super.updateOptions(t)}_update(t){super._update(t),"mask"in t&&(this.exposeMask=void 0,this.compiledMasks=Array.isArray(t.mask)?t.mask.map(e=>{const{expose:s,...i}=V(e),a=A({overwrite:this._overwrite,eager:this._eager,skipInvalid:this._skipInvalid,...i});return s&&(this.exposeMask=a),a}):[])}_appendCharRaw(t,e){e===void 0&&(e={});const s=this._applyDispatch(t,e);return this.currentMask&&s.aggregate(this.currentMask._appendChar(t,this.currentMaskFlags(e))),s}_applyDispatch(t,e,s){t===void 0&&(t=""),e===void 0&&(e={}),s===void 0&&(s="");const i=e.tail&&e._beforeTailState!=null?e._beforeTailState._value:this.value,a=this.rawInputValue,n=e.tail&&e._beforeTailState!=null?e._beforeTailState._rawInputValue:a,u=a.slice(n.length),h=this.currentMask,o=new d,m=h==null?void 0:h.state;if(this.currentMask=this.doDispatch(t,{...e},s),this.currentMask)if(this.currentMask!==h){if(this.currentMask.reset(),n){const c=this.currentMask.append(n,{raw:!0});o.tailShift=c.inserted.length-i.length}u&&(o.tailShift+=this.currentMask.append(u,{raw:!0,tail:!0}).tailShift)}else m&&(this.currentMask.state=m);return o}_appendPlaceholder(){const t=this._applyDispatch();return this.currentMask&&t.aggregate(this.currentMask._appendPlaceholder()),t}_appendEager(){const t=this._applyDispatch();return this.currentMask&&t.aggregate(this.currentMask._appendEager()),t}appendTail(t){const e=new d;return t&&e.aggregate(this._applyDispatch("",{},t)),e.aggregate(this.currentMask?this.currentMask.appendTail(t):super.appendTail(t))}currentMaskFlags(t){var e,s;return{...t,_beforeTailState:((e=t._beforeTailState)==null?void 0:e.currentMaskRef)===this.currentMask&&((s=t._beforeTailState)==null?void 0:s.currentMask)||t._beforeTailState}}doDispatch(t,e,s){return e===void 0&&(e={}),s===void 0&&(s=""),this.dispatch(t,this,e,s)}doValidate(t){return super.doValidate(t)&&(!this.currentMask||this.currentMask.doValidate(this.currentMaskFlags(t)))}doPrepare(t,e){e===void 0&&(e={});let[s,i]=super.doPrepare(t,e);if(this.currentMask){let a;[s,a]=super.doPrepare(s,this.currentMaskFlags(e)),i=i.aggregate(a)}return[s,i]}doPrepareChar(t,e){e===void 0&&(e={});let[s,i]=super.doPrepareChar(t,e);if(this.currentMask){let a;[s,a]=super.doPrepareChar(s,this.currentMaskFlags(e)),i=i.aggregate(a)}return[s,i]}reset(){var t;(t=this.currentMask)==null||t.reset(),this.compiledMasks.forEach(e=>e.reset())}get value(){return this.exposeMask?this.exposeMask.value:this.currentMask?this.currentMask.value:""}set value(t){this.exposeMask?(this.exposeMask.value=t,this.currentMask=this.exposeMask,this._applyDispatch()):super.value=t}get unmaskedValue(){return this.exposeMask?this.exposeMask.unmaskedValue:this.currentMask?this.currentMask.unmaskedValue:""}set unmaskedValue(t){this.exposeMask?(this.exposeMask.unmaskedValue=t,this.currentMask=this.exposeMask,this._applyDispatch()):super.unmaskedValue=t}get typedValue(){return this.exposeMask?this.exposeMask.typedValue:this.currentMask?this.currentMask.typedValue:""}set typedValue(t){if(this.exposeMask){this.exposeMask.typedValue=t,this.currentMask=this.exposeMask,this._applyDispatch();return}let e=String(t);this.currentMask&&(this.currentMask.typedValue=t,e=this.currentMask.unmaskedValue),this.unmaskedValue=e}get displayValue(){return this.currentMask?this.currentMask.displayValue:""}get isComplete(){var t;return!!((t=this.currentMask)!=null&&t.isComplete)}get isFilled(){var t;return!!((t=this.currentMask)!=null&&t.isFilled)}remove(t,e){const s=new d;return this.currentMask&&s.aggregate(this.currentMask.remove(t,e)).aggregate(this._applyDispatch()),s}get state(){var t;return{...super.state,_rawInputValue:this.rawInputValue,compiledMasks:this.compiledMasks.map(e=>e.state),currentMaskRef:this.currentMask,currentMask:(t=this.currentMask)==null?void 0:t.state}}set state(t){const{compiledMasks:e,currentMaskRef:s,currentMask:i,...a}=t;e&&this.compiledMasks.forEach((n,u)=>n.state=e[u]),s!=null&&(this.currentMask=s,this.currentMask.state=i),super.state=a}extractInput(t,e,s){return this.currentMask?this.currentMask.extractInput(t,e,s):""}extractTail(t,e){return this.currentMask?this.currentMask.extractTail(t,e):super.extractTail(t,e)}doCommit(){this.currentMask&&this.currentMask.doCommit(),super.doCommit()}nearestInputPos(t,e){return this.currentMask?this.currentMask.nearestInputPos(t,e):super.nearestInputPos(t,e)}get overwrite(){return this.currentMask?this.currentMask.overwrite:this._overwrite}set overwrite(t){this._overwrite=t}get eager(){return this.currentMask?this.currentMask.eager:this._eager}set eager(t){this._eager=t}get skipInvalid(){return this.currentMask?this.currentMask.skipInvalid:this._skipInvalid}set skipInvalid(t){this._skipInvalid=t}maskEquals(t){return Array.isArray(t)?this.compiledMasks.every((e,s)=>{if(!t[s])return;const{mask:i,...a}=t[s];return b(e,a)&&e.maskEquals(i)}):super.maskEquals(t)}typedValueEquals(t){var e;return!!((e=this.currentMask)!=null&&e.typedValueEquals(t))}}x.DEFAULTS=void 0;x.DEFAULTS={dispatch:(r,t,e,s)=>{if(!t.compiledMasks.length)return;const i=t.rawInputValue,a=t.compiledMasks.map((n,u)=>{const h=t.currentMask===n,o=h?n.displayValue.length:n.nearestInputPos(n.displayValue.length,l.FORCE_LEFT);return n.rawInputValue!==i?(n.reset(),n.append(i,{raw:!0})):h||n.remove(o),n.append(r,t.currentMaskFlags(e)),n.appendTail(s),{index:u,weight:n.rawInputValue.length,totalInputPositions:n.totalInputPositions(0,Math.max(o,n.nearestInputPos(n.displayValue.length,l.FORCE_LEFT)))}});return a.sort((n,u)=>u.weight-n.weight||u.totalInputPositions-n.totalInputPositions),t.compiledMasks[a[0].index]}};C.MaskedDynamic=x;class V1 extends f{constructor(t){super(t)}updateOptions(t){super.updateOptions(t)}_update(t){const{enum:e,...s}=t;if(e){const i=e.map(u=>u.length),a=Math.min(...i),n=Math.max(...i)-a;s.mask="*".repeat(a),n&&(s.mask+="["+"*".repeat(n)+"]"),this.enum=e}super._update(s)}doValidate(t){return this.enum.some(e=>e.indexOf(this.unmaskedValue)===0)&&super.doValidate(t)}}C.MaskedEnum=V1;class B1 extends L{updateOptions(t){super.updateOptions(t)}_update(t){super._update({...t,validate:t.mask})}}C.MaskedFunction=B1;class g extends L{constructor(t){super({...g.DEFAULTS,...t})}updateOptions(t){super.updateOptions(t)}_update(t){super._update(t),this._updateRegExps()}_updateRegExps(){const t="^"+(this.allowNegative?"[+|\\-]?":""),e="\\d*",s=(this.scale?"("+T(this.radix)+"\\d{0,"+this.scale+"})?":"")+"$";this._numberRegExp=new RegExp(t+e+s),this._mapToRadixRegExp=new RegExp("["+this.mapToRadix.map(T).join("")+"]","g"),this._thousandsSeparatorRegExp=new RegExp(T(this.thousandsSeparator),"g")}_removeThousandsSeparators(t){return t.replace(this._thousandsSeparatorRegExp,"")}_insertThousandsSeparators(t){const e=t.split(this.radix);return e[0]=e[0].replace(/\B(?=(\d{3})+(?!\d))/g,this.thousandsSeparator),e.join(this.radix)}doPrepareChar(t,e){e===void 0&&(e={});const[s,i]=super.doPrepareChar(this._removeThousandsSeparators(this.scale&&this.mapToRadix.length&&(e.input&&e.raw||!e.input&&!e.raw)?t.replace(this._mapToRadixRegExp,this.radix):t),e);return t&&!s&&(i.skip=!0),s&&!this.allowPositive&&!this.value&&s!=="-"&&i.aggregate(this._appendChar("-")),[s,i]}_separatorsCount(t,e){e===void 0&&(e=!1);let s=0;for(let i=0;i<t;++i)this._value.indexOf(this.thousandsSeparator,i)===i&&(++s,e&&(t+=this.thousandsSeparator.length));return s}_separatorsCountFromSlice(t){return t===void 0&&(t=this._value),this._separatorsCount(this._removeThousandsSeparators(t).length,!0)}extractInput(t,e,s){return t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length),[t,e]=this._adjustRangeWithSeparators(t,e),this._removeThousandsSeparators(super.extractInput(t,e,s))}_appendCharRaw(t,e){if(e===void 0&&(e={}),!this.thousandsSeparator)return super._appendCharRaw(t,e);const s=e.tail&&e._beforeTailState?e._beforeTailState._value:this._value,i=this._separatorsCountFromSlice(s);this._value=this._removeThousandsSeparators(this.value);const a=super._appendCharRaw(t,e);this._value=this._insertThousandsSeparators(this._value);const n=e.tail&&e._beforeTailState?e._beforeTailState._value:this._value,u=this._separatorsCountFromSlice(n);return a.tailShift+=(u-i)*this.thousandsSeparator.length,a.skip=!a.rawInserted&&t===this.thousandsSeparator,a}_findSeparatorAround(t){if(this.thousandsSeparator){const e=t-this.thousandsSeparator.length+1,s=this.value.indexOf(this.thousandsSeparator,e);if(s<=t)return s}return-1}_adjustRangeWithSeparators(t,e){const s=this._findSeparatorAround(t);s>=0&&(t=s);const i=this._findSeparatorAround(e);return i>=0&&(e=i+this.thousandsSeparator.length),[t,e]}remove(t,e){t===void 0&&(t=0),e===void 0&&(e=this.displayValue.length),[t,e]=this._adjustRangeWithSeparators(t,e);const s=this.value.slice(0,t),i=this.value.slice(e),a=this._separatorsCount(s.length);this._value=this._insertThousandsSeparators(this._removeThousandsSeparators(s+i));const n=this._separatorsCountFromSlice(s);return new d({tailShift:(n-a)*this.thousandsSeparator.length})}nearestInputPos(t,e){if(!this.thousandsSeparator)return t;switch(e){case l.NONE:case l.LEFT:case l.FORCE_LEFT:{const s=this._findSeparatorAround(t-1);if(s>=0){const i=s+this.thousandsSeparator.length;if(t<i||this.value.length<=i||e===l.FORCE_LEFT)return s}break}case l.RIGHT:case l.FORCE_RIGHT:{const s=this._findSeparatorAround(t);if(s>=0)return s+this.thousandsSeparator.length}}return t}doValidate(t){let e=!!this._removeThousandsSeparators(this.value).match(this._numberRegExp);if(e){const s=this.number;e=e&&!isNaN(s)&&(this.min==null||this.min>=0||this.min<=this.number)&&(this.max==null||this.max<=0||this.number<=this.max)}return e&&super.doValidate(t)}doCommit(){if(this.value){const t=this.number;let e=t;this.min!=null&&(e=Math.max(e,this.min)),this.max!=null&&(e=Math.min(e,this.max)),e!==t&&(this.unmaskedValue=this.format(e,this));let s=this.value;this.normalizeZeros&&(s=this._normalizeZeros(s)),this.padFractionalZeros&&this.scale>0&&(s=this._padFractionalZeros(s)),this._value=s}super.doCommit()}_normalizeZeros(t){const e=this._removeThousandsSeparators(t).split(this.radix);return e[0]=e[0].replace(/^(\D*)(0*)(\d*)/,(s,i,a,n)=>i+n),t.length&&!/\d$/.test(e[0])&&(e[0]=e[0]+"0"),e.length>1&&(e[1]=e[1].replace(/0*$/,""),e[1].length||(e.length=1)),this._insertThousandsSeparators(e.join(this.radix))}_padFractionalZeros(t){if(!t)return t;const e=t.split(this.radix);return e.length<2&&e.push(""),e[1]=e[1].padEnd(this.scale,"0"),e.join(this.radix)}doSkipInvalid(t,e,s){e===void 0&&(e={});const i=this.scale===0&&t!==this.thousandsSeparator&&(t===this.radix||t===g.UNMASKED_RADIX||this.mapToRadix.includes(t));return super.doSkipInvalid(t,e,s)&&!i}get unmaskedValue(){return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix,g.UNMASKED_RADIX)}set unmaskedValue(t){super.unmaskedValue=t}get typedValue(){return this.parse(this.unmaskedValue,this)}set typedValue(t){this.rawInputValue=this.format(t,this).replace(g.UNMASKED_RADIX,this.radix)}get number(){return this.typedValue}set number(t){this.typedValue=t}get allowNegative(){return this.min!=null&&this.min<0||this.max!=null&&this.max<0}get allowPositive(){return this.min!=null&&this.min>0||this.max!=null&&this.max>0}typedValueEquals(t){return(super.typedValueEquals(t)||g.EMPTY_VALUES.includes(t)&&g.EMPTY_VALUES.includes(this.typedValue))&&!(t===0&&this.value==="")}}g.UNMASKED_RADIX=".";g.EMPTY_VALUES=[...L.EMPTY_VALUES,0];g.DEFAULTS={mask:Number,radix:",",thousandsSeparator:"",mapToRadix:[g.UNMASKED_RADIX],min:Number.MIN_SAFE_INTEGER,max:Number.MAX_SAFE_INTEGER,scale:2,normalizeZeros:!0,padFractionalZeros:!1,parse:Number,format:r=>r.toLocaleString("en-US",{useGrouping:!1,maximumFractionDigits:20})};C.MaskedNumber=g;const Z={MASKED:"value",UNMASKED:"unmaskedValue",TYPED:"typedValue"};function X(r,t,e){t===void 0&&(t=Z.MASKED),e===void 0&&(e=Z.MASKED);const s=A(r);return i=>s.runIsolated(a=>(a[t]=i,a[e]))}function w1(r,t,e,s){return X(t,e,s)(r)}C.PIPE_TYPE=Z;C.createPipe=X;C.pipe=w1;try{globalThis.IMask=C}catch{}const D1=/^3[47][0-9]{0,}$/,I1=/^(?:2131|1800|35)[0-9]{0,}$/,T1=/^(5[06789]|6)[0-9]{0,}$/,Z1=/^(5[1-5]|222[1-9]|22[3-9]|2[3-6]|27[01]|2720)[0-9]{0,}$/,O1=/^2[2][0-9]{0,}$/,R1=/^4[0-9]{0,}$/,N1={mask:"0000 0000 0000 0000 000"},P1={mask:"00"},z1={mask:"00"},H1={mask:"000"},U1=new Date().getFullYear(),U=new Date().getMonth()+1,y=+(""+U1).split("").splice(2).join("");document.getElementById("view-button");function w(){this.getAttribute("data-cp")==="cardNumber"&&(this.value.replaceAll(" ","").length<15?this.setAttribute("data-invalid",!0):this.removeAttribute("data-invalid",!0)),this.getAttribute("data-cp")==="expDateMonth"&&(this.value.length===1&&+this.value!=0&&(document.getElementById("month").value=document.getElementById("month").value.padStart(2,"0")),+this.value>12||+this.value==0?this.setAttribute("data-invalid",!0):this.removeAttribute("data-invalid",!0),+this.value<U&&+document.getElementById("year").value===y&&document.getElementById("month").setAttribute("data-invalid","true")),this.getAttribute("data-cp")==="expDateYear"&&(+this.value<y?this.setAttribute("data-invalid",!0):this.removeAttribute("data-invalid"),+this.value===y&&+document.getElementById("month").value<U&&document.getElementById("month").setAttribute("data-invalid","true")),this.getAttribute("data-cp")==="cvv"&&(this.value.length<3?this.setAttribute("data-invalid",!0):this.removeAttribute("data-invalid"))}function $1(r){const t=r.value.replaceAll(" ",""),e=document.getElementById("pay-system");D1.test(t)?e.innerHTML=L1:I1.test(t)?e.innerHTML=g1:T1.test(t)?e.innerHTML=m1:Z1.test(t)?e.innerHTML=v1:O1.test(t)?e.innerHTML=k1:R1.test(t)?e.innerHTML=_1:e.innerHTML=""}function R(){if(this.getAttribute("data-cp")==="cardNumber"&&(this.value.replaceAll(" ","").length>=15&&this.removeAttribute("data-invalid",!0),$1(this)),this.getAttribute("data-cp")==="expDateMonth"&&(+this.value>12?this.setAttribute("data-invalid",!0):this.removeAttribute("data-invalid",!0)),this.getAttribute("data-cp")==="expDateYear"&&(+this.value<y?this.setAttribute("data-invalid",!0):this.removeAttribute("data-invalid")),this.getAttribute("data-cp")==="cvv"){const r=document.getElementById("view-button");this.value.length===3&&this.removeAttribute("data-invalid"),this.value.length>0?(r.classList.remove("visually-hidden"),r.innerHTML=$):(r.classList.add("visually-hidden"),r.innerHTML=G)}}function G1(r){const t=r.currentTarget,e=document.getElementById("cvv");e.getAttribute("type")=="password"?(t.innerHTML=G,e.setAttribute("type","text")):(t.innerHTML=$,e.setAttribute("type","password"))}const j1=async r=>{const t=new cp.Checkout({publicId:"test_api_000000000000000002",container:r});try{return await t.createPaymentCryptogram()}catch(e){console.log(e)}};function Y1(r){return new Promise(t=>{const e=document.createElement("script");e.src=r,e.defer=!0,e.addEventListener("load",()=>{t()}),document.head.append(e)})}const q1=E1(),N=document.getElementById("card-number");C(N,N1);const W=document.getElementById("month");C(W,P1);const P=document.getElementById("year");C(P,z1);const z=document.getElementById("cvv");C(z,H1);W.addEventListener("blur",w);P.addEventListener("blur",w);P.addEventListener("input",R);N.addEventListener("blur",w);N.addEventListener("input",R);z.addEventListener("blur",w);z.addEventListener("input",R);const K1=document.getElementById("view-button");K1.addEventListener("click",G1);q1.addEventListener("submit",async function(r){r.preventDefault(),await Y1("https://checkout.cloudpayments.ru/checkout.js");const t=await j1(r.currentTarget);console.log(t)});
